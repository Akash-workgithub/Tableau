<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20221.22.0525.0851                               -->
<workbook original-version='18.1' source-build='2022.1.2 (20221.22.0525.0851)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <SavingAnalyticObjects />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Orders (Sample - Superstore (1))' inline='true' name='federated.0npl5ro0vzsntn152kadd148jqod' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore (1)' name='excel-direct.0q9oa3z1uzp8dt12eqa0h0rr0rnh'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/worka/OneDrive/Desktop/Tableau/Sample - Superstore (1).xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='global_superstore_2016' name='excel-direct.0ds6f4c0i27o661g0dg560dd7glt'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='C:/Users/worka/OneDrive/Desktop/Tableau/global_superstore_2016.xlsx' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='World Bank Indicators' name='textscan.0312bjb0lez48t1b8j8y90cg1vot'>
            <connection class='textclean' cleaning='yes' compat='no' csvFile='C:\Users\worka\OneDrive\Desktop\Tableau\World Bank Indicators.csv' dataRefreshTime='' directory='C:/Users/worka/OneDrive/Desktop/Tableau' filename='C:/Users/worka/AppData/Local/Temp/TableauTemp/0n1oq6k0juwnpy14pheq90v048eo/World Bank Indicators.csv.xlsx' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0q9oa3z1uzp8dt12eqa0h0rr0rnh' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.0q9oa3z1uzp8dt12eqa0h0rr0rnh' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Segment' ordinal='7' />
              <column datatype='string' name='Country' ordinal='8' />
              <column datatype='string' name='City' ordinal='9' />
              <column datatype='string' name='State' ordinal='10' />
              <column datatype='integer' name='Postal Code' ordinal='11' />
              <column datatype='string' name='Region' ordinal='12' />
              <column datatype='string' name='Product ID' ordinal='13' />
              <column datatype='string' name='Category' ordinal='14' />
              <column datatype='string' name='Sub-Category' ordinal='15' />
              <column datatype='string' name='Product Name' ordinal='16' />
              <column datatype='real' name='Sales' ordinal='17' />
              <column datatype='integer' name='Quantity' ordinal='18' />
              <column datatype='real' name='Discount' ordinal='19' />
              <column datatype='real' name='Profit' ordinal='20' />
            </columns>
          </relation>
          <relation connection='excel-direct.0q9oa3z1uzp8dt12eqa0h0rr0rnh' name='People' table='[People$]' type='table'>
            <columns gridOrigin='A1:B5:no:A1:B5:0' header='yes' outcome='6'>
              <column datatype='string' name='Person' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
            </columns>
          </relation>
          <relation connection='excel-direct.0q9oa3z1uzp8dt12eqa0h0rr0rnh' name='Returns' table='[Returns$]' type='table'>
            <columns gridOrigin='A1:B297:no:A1:B297:0' header='yes' outcome='6'>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Category]' value='[Orders].[Category]' />
          <map key='[City]' value='[Orders].[City]' />
          <map key='[Country]' value='[Orders].[Country]' />
          <map key='[Customer ID]' value='[Orders].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders].[Customer Name]' />
          <map key='[Discount]' value='[Orders].[Discount]' />
          <map key='[Order Date]' value='[Orders].[Order Date]' />
          <map key='[Order ID (Returns)]' value='[Returns].[Order ID]' />
          <map key='[Order ID]' value='[Orders].[Order ID]' />
          <map key='[Person]' value='[People].[Person]' />
          <map key='[Postal Code]' value='[Orders].[Postal Code]' />
          <map key='[Product ID]' value='[Orders].[Product ID]' />
          <map key='[Product Name]' value='[Orders].[Product Name]' />
          <map key='[Profit]' value='[Orders].[Profit]' />
          <map key='[Quantity]' value='[Orders].[Quantity]' />
          <map key='[Region (People)]' value='[People].[Region]' />
          <map key='[Region]' value='[Orders].[Region]' />
          <map key='[Returned]' value='[Returns].[Returned]' />
          <map key='[Row ID]' value='[Orders].[Row ID]' />
          <map key='[Sales]' value='[Orders].[Sales]' />
          <map key='[Segment]' value='[Orders].[Segment]' />
          <map key='[Ship Date]' value='[Orders].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders].[Ship Mode]' />
          <map key='[State]' value='[Orders].[State]' />
          <map key='[Sub-Category]' value='[Orders].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9995:no:A1:U9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[People]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B5:no:A1:B5:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Returns]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B297:no:A1:B297:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_43A73A1344C84A4EBC8127A498D588DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_43A73A1344C84A4EBC8127A498D588DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_43A73A1344C84A4EBC8127A498D588DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_43A73A1344C84A4EBC8127A498D588DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_43A73A1344C84A4EBC8127A498D588DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_43A73A1344C84A4EBC8127A498D588DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_43A73A1344C84A4EBC8127A498D588DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_43A73A1344C84A4EBC8127A498D588DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_43A73A1344C84A4EBC8127A498D588DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_43A73A1344C84A4EBC8127A498D588DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_43A73A1344C84A4EBC8127A498D588DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_43A73A1344C84A4EBC8127A498D588DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_43A73A1344C84A4EBC8127A498D588DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_43A73A1344C84A4EBC8127A498D588DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_43A73A1344C84A4EBC8127A498D588DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_43A73A1344C84A4EBC8127A498D588DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_43A73A1344C84A4EBC8127A498D588DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_43A73A1344C84A4EBC8127A498D588DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_43A73A1344C84A4EBC8127A498D588DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_43A73A1344C84A4EBC8127A498D588DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_43A73A1344C84A4EBC8127A498D588DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Person</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Person]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Person</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[People_075A13B609F14161BA396E5B5F4D4B48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region (People)]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[People_075A13B609F14161BA396E5B5F4D4B48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_885ACD1E49424AE981C456CFF9E7211A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID (Returns)]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_885ACD1E49424AE981C456CFF9E7211A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Profit]) / TOTAL(SUM([Profit]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' name='[Calculation2]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_PERCENTILE(COUNT([__tableau_internal_object_id__].[Orders_43A73A1344C84A4EBC8127A498D588DE]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Profit Ratio' datatype='real' name='[Calculation_1435522427493490691]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Profit]) / SUM([Sales])' />
      </column>
      <column caption='Sales &gt;20000' datatype='boolean' name='[Calculation_501869929992175616]' role='measure' type='nominal'>
        <calculation class='tableau' formula='SUM([Sales]) &gt; 20000' />
      </column>
      <column caption='Rank of state as per sum of sales (1-25)' datatype='integer' name='[Calculation_501869929992658945]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK(SUM([Sales]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Delivery Day &gt; 7' datatype='boolean' name='[Calculation_501869930011099138]' role='measure' type='nominal'>
        <calculation class='tableau' formula='AVG(DATEDIFF(&apos;day&apos;,[Order Date],[Ship Date])) &gt; 6' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
      <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column aggregation='None' caption='Sales (1000 bin)' datatype='integer' name='[Sales (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='3' formula='[Sales]' peg='0' size='1000' />
      </column>
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_43A73A1344C84A4EBC8127A498D588DE]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='People' datatype='table' name='[__tableau_internal_object_id__].[People_075A13B609F14161BA396E5B5F4D4B48]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Returns' datatype='table' name='[__tableau_internal_object_id__].[Returns_885ACD1E49424AE981C456CFF9E7211A]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Orders_43A73A1344C84A4EBC8127A498D588DE]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Orders_43A73A1344C84A4EBC8127A498D588DE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[People_075A13B609F14161BA396E5B5F4D4B48]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:People_075A13B609F14161BA396E5B5F4D4B48:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Returns_885ACD1E49424AE981C456CFF9E7211A]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Returns_885ACD1E49424AE981C456CFF9E7211A:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Orders_43A73A1344C84A4EBC8127A498D588DE]' derivation='Count' name='[__tableau_internal_object_id__].[pcrk:cnt:Orders_43A73A1344C84A4EBC8127A498D588DE:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[Orders_43A73A1344C84A4EBC8127A498D588DE]' derivation='Count' name='[__tableau_internal_object_id__].[pcto:cnt:Orders_43A73A1344C84A4EBC8127A498D588DE:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Profit]' derivation='Attribute' name='[attr:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Avg' name='[avg:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Quantity]' derivation='Count' name='[cnt:Quantity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Count' name='[cnt:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='CountD' name='[ctd:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Customer Name Set]' derivation='InOut' name='[io:Customer Name Set:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sales]' derivation='Max' name='[max:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Min' name='[min:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Profit]' derivation='Sum' name='[pcto:sum:Profit:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Profit]' derivation='Sum' name='[pcto:sum:Profit:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation2]' derivation='User' name='[usr:Calculation2:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <group caption='Customer Name Set' name='[Customer Name Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Profit])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Customer Name]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0npl5ro0vzsntn152kadd148jqod].[attr:Profit:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0npl5ro0vzsntn152kadd148jqod].[avg:Profit:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0npl5ro0vzsntn152kadd148jqod].[min:Profit:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0npl5ro0vzsntn152kadd148jqod].[pcto:sum:Profit:qk:4]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0npl5ro0vzsntn152kadd148jqod].[pcto:sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0npl5ro0vzsntn152kadd148jqod].[sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0npl5ro0vzsntn152kadd148jqod].[usr:Calculation1:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0npl5ro0vzsntn152kadd148jqod].[ctd:Sales:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0npl5ro0vzsntn152kadd148jqod].[sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0npl5ro0vzsntn152kadd148jqod].[__tableau_internal_object_id__].[cnt:Orders_43A73A1344C84A4EBC8127A498D588DE:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0npl5ro0vzsntn152kadd148jqod].[__tableau_internal_object_id__].[pcrk:cnt:Orders_43A73A1344C84A4EBC8127A498D588DE:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0npl5ro0vzsntn152kadd148jqod].[__tableau_internal_object_id__].[pcto:cnt:Orders_43A73A1344C84A4EBC8127A498D588DE:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0npl5ro0vzsntn152kadd148jqod].[usr:Calculation2:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.0npl5ro0vzsntn152kadd148jqod].[cnt:Quantity:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.0npl5ro0vzsntn152kadd148jqod].[sum:Quantity:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0npl5ro0vzsntn152kadd148jqod].[__tableau_internal_object_id__].[cnt:Returns_885ACD1E49424AE981C456CFF9E7211A:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0npl5ro0vzsntn152kadd148jqod]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0npl5ro0vzsntn152kadd148jqod].[__tableau_internal_object_id__].[cnt:People_075A13B609F14161BA396E5B5F4D4B48:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0npl5ro0vzsntn152kadd148jqod].[cnt:Sales:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0npl5ro0vzsntn152kadd148jqod].[max:Sales:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0npl5ro0vzsntn152kadd148jqod].[sum:Discount:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Customer Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Adam Shillingsburg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Alyssa Tate&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Annie Thurman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Barry Gonzalez&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bill Eplett&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brian Derr&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Carlos Soltero&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chris Selesnick&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clay Cheatham&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dan Campbell&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;David Kendrick&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dianna Arnett&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Edward Becker&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Erin Creighton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fred Harton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greg Guthrie&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Henia Zydlo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Janet Martin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jesus Ocampo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;John Lucas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Justin Deggeller&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kean Nguyen&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Larry Hughes&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Liz Carlisle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Maribeth Dona&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Matthew Grinstein&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Michael Oakman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Monica Federle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nick Radford&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Patrick O&apos;Brill&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Philip Brown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Richard Eichhorn&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Roland Murray&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sample Company A&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sean Wendt&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Stephanie Phelps&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Suzanne McNair&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tim Brockman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tracy Poddar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Xylona Preis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Adrian Barton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alex Avila&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ann Chong&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Arthur Prichep&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benjamin Farhat&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bradley Nguyen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Candace McMahon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chad Sievert&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chuck Clark&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Craig Reiter&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Darrin Sayre&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Denise Leinenbach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Doug Jacobs&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eric Barreto&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Frank Atkinson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;George Bell&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Harold Ryan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jack Lebron&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jennifer Halladay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Joe Kamberova&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Joy Smith&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Katharine Harms&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ken Heidel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Linda Cazamias&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lycoris Saunders&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MaryBeth Skach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Melanie Seite&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mike Caudle&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nathan Gelder&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Olvera Toch&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pauline Webber&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Randy Bradley&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rob Williams&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Russell D&apos;Ascenzo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Scot Coram&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Shui Tom&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sue Ann Reed&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Theone Pippenger&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tom Stivers&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Victoria Brennan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Allen Armold&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Anna Gayman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Barbara Fisher&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Beth Fritzler&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brendan Murry&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Carl Ludwig&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Charlotte Melton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cindy Schnelling&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cynthia Delaney&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dave Kipp&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dennis Pardue&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Duane Noonan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Erica Hackney&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Frank Merwin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Giulietta Dortch&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Heather Kirkland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamie Frazer&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jeremy Farry&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;John Dryer&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Juliana Krohn&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Katherine Nockton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kristen Hastings&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lindsay Williams&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Marc Harrigan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Matt Collister&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Michael Granlund&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mike Vittorini&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Neil Knudson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Patricia Hirasaki&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pete Takahito&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Raymond Buch&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Resi Pölking&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Robert Waldorf&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sally Knutson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sean Braxton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sonia Sunley&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Susan Gilcrest&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thomas Brumley&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tony Sayre&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vivek Grady&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Ken Lonsdale&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Aimee Bixby&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Alan Haines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Andrew Gjertsen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Anthony Johnson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bart Pistole&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bill Tyler&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brooke Gillingham&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Caroline Jumper&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Christine Abelman&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Corey Catlett&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Daniel Byrd&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dean Braden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Don Jones&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eleni McCrary&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eugene Barchas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gary Hansen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Greg Tran&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hilary Holden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jim Epp&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jonathan Howell&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Justin Ritter&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Keith Herrera&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Laurel Elliston&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Liz Thompson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maris LaWare&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maurice Satty&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Michelle Ellison&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nancy Lomonaco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nicole Hansen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paul Knutson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Phillip Breyer&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rick Huthwaite&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ross DeVincentis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sarah Bern&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Shahid Shariari&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Steve Nguyen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tamara Manning&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Toby Gnade&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Trudy Brown&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zuschuss Donatelli&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Adrian Hane&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Amy Cox&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Annie Zypern&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Barry Pond&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bill Overfelt&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brian Moss&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Carol Adams&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Christina Anderson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clay Ludtke&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dan Lawera&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;David Philippe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dianna Vittorini&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Edward Hooks&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Erin Mull&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fred Hopkins&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greg Hansen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Henry Goldwyn&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Janet Molinari&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jill Fjeld&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;John Murray&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Justin Ellison&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kean Takahito&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Larry Tron&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Liz MacKendrick&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Maribeth Schnelling&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Maureen Fritzler&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Michael Paige&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Muhammed Lee&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nick Zandusky&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Patrick O&apos;Donnell&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Philip Fox&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rick Bensley&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Roland Schwarz&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sandra Flanagan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Seth Vernon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Stephanie Ulpright&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sylvia Foulston&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tim Taslimi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tracy Zic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yana Sorensen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Aaron Smayling&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Allen Goldenen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anna Häberlin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Barry Blumstein&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Beth Paige&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brendan Sweed&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Carl Weiss&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chloris Kastensmidt&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cindy Stewart&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cynthia Voltz&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dave Poirier&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Denny Blanton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ed Braxton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Erica Hernandez&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Frank Olsen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Giulietta Weimer&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Helen Abelman&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jamie Kunitz&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jeremy Lonsdale&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;John Grady&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Julie Creighton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Katrina Bavinger&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kristina Nunn&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lisa DeCherney&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Maria Bertelson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Matt Connell&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Michael Kennedy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mitch Gastineau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Neola Schneider&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Patrick Bzostek&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Peter Bühler&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ricardo Emerson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Roger Barcio&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sally Matthias&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sean Christensen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Speros Goranitis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Susan MacKendrick&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thomas Seio&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tracy Blumstein&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vivek Sundaresam&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Tamara Chand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Alejandro Savely&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Angele Hood&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Art Foster&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ben Peterman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brad Thomas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bryan Mills&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chad Cunningham&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Christopher Schild&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Craig Leslie&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Darren Powers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Deirdre Greer&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dorris liebe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Emily Grady&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Evan Minnotte&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gene McClure&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Harold Engle&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ivan Liston&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jennifer Braxton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jocasta Rupert&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Joy Bell-&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Karen Seio&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ken Brennan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lena Hernandez&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Luke Schmidt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mary O&apos;Rourke&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Meg O&apos;Connel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mick Crebagga&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Natalie Webber&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nora Preis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pauline Chand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ralph Kennedy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rob Haberlin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ruben Dartt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sarah Foster&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shirley Jackson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Stuart Calhoun&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tom Boeckenhauer&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vicky Freymann&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aaron Bergman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alex Grayson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ann Steele&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arthur Wiediger&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Benjamin Patterson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bradley Talbott&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cari Sayre&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Charles Crestani&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chuck Magee&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Craig Yedwab&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Darrin Van Huff&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Denise Monton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Doug O&apos;Connell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eric Hoffmann&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Frank Carlisle&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;George Zrebassa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Harry Greene&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jack O&apos;Briant&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jennifer Jackson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Joel Eaton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Julia Barnett&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Katherine Ducich&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Laurel Workman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Linda Southworth&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lynn Smith&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mathew Reese&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Michael Chen&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mike Gockenbach&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nathan Mautz&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pamela Coakley&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Penelope Sewall&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Randy Ferguson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Robert Barroso&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ryan Akin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Scot Wooten&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sibella Parks&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sung Chung&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Theresa Coyne&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tonja Turnell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Victoria Pisteka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Alejandro Ballentine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Andy Yotov&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Arianne Irving&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Becky Pak&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Brad Eason&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bruce Stewart&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cathy Hwang&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Clytie Kelty&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Craig Carreira&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Darren Budd&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Deborah Brumfield&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dorothy Dickinson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Emily Burns&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Evan Bailliet&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gary Zandusky&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hallie Redmond&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Irene Maddox&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jay Kimmel&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jim Radford&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Joseph Airdo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Karen Daniels&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kelly Williams&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lena Cacioppo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lori Olson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mark Packer&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Maxwell Schwartz&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Michelle Tran&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Natalie DeCherney&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nora Paige&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paul Stevenson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rachel Payne&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rob Beeghly&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Roy Skaria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sanjit Engle&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sheri Gordon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Stewart Carmichael&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ted Trevino&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Todd Sumrall&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Valerie Mitchum&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Adam Bellavance&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Allen Rosenblatt&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anne McFarland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Barry Franz&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Beth Thompson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brian Dahlen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carlos Daly&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chris Cortes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Claire Gute&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cyra Reiten&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;David Bremer&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Denny Joy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ed Jacobs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Erica Smith&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Frank Preis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Grace Kelly&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Helen Andreada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jane Waco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jeremy Pistek&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;John Huston&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Julie Kriz&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Katrina Edelman&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kunst Miller&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lisa Hazard&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maria Etezadi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Matt Hagelstein&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Michael Moore&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mitch Webber&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Neoma Murray&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Patrick Gardner&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Peter Fuller&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ricardo Sperren&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Roger Demir&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sam Craven&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Shirley Daniels&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stefania Perrino&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Susan Pistek&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thomas Thornton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tracy Collins&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vivian Mathis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Alan Hwang&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Andrew Roberts&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Anthony O&apos;Donnell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bart Watters&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bobby Elias&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Brosina Hoffman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cassandra Brandow&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Christine Kargatis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Corey Roper&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Daniel Lacy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dean Katz&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Don Miller&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Elizabeth Moffitt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Eugene Hildebrand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gary Hwang&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guy Armstrong&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hunter Glantz&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jason Klamczynski&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jim Karlsson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Joni Blumstein&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kalyca Meade&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kelly Andreada&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liz Willingham&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mark Cousins&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Max Engle&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Michelle Huthwaite&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Naresj Patel&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Noah Childs&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Paul Lucas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Phillip Flathmann&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rick Reed&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Roy Collins&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sanjit Jacobs&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sharelle Roach&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Steven Cartwright&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tamara Willingham&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Toby Ritter&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tom Ashbrook&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Trudy Glocke&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Alan Barnes&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Alan Schoenberger&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Andy Gerbode&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Anthony Rawles&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Becky Castell&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bobby Odegard&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bruce Degenhardt&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Catherine Glotzbach&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Christine Phan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Corey-Lock&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Daniel Raglin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dean percer&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Don Weiss&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ellis Ballard&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eugene Moren&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gary McGarr&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guy Phonely&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jason Gross&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jasper Cacioppo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jim Kriz&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Joni Sundaresam&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Karen Bern&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kelly Collister&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lauren Leatherbury&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Logan Currie&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mark Haberlin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Max Jones&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Michelle Lonsdale&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nat Carroll&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Noel Staavos&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Paul MacIntyre&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pierre Wener&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Roy Französisch&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saphhira Shifley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shaun Chance&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Steven Roelle&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tanja Norvell&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Toby Swindell&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Trudy Schmidt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Alejandro Grove&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Anemone Ratner&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Art Ferguson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ben Ferrer&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brad Norvell&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bryan Davis&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cathy Prescott&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Christopher Martinez&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Craig Carroll&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Darren Koutras&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Debra Catini&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dorothy Wardle&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Emily Ducich&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Evan Henry&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gene Hale&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Harold Dahlen&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ivan Gibson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jenna Caffey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jim Sink&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Joseph Holt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Karen Ferguson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ken Black&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lena Creighton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luke Foster&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mark Van Huff&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maya Herman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mick Brown&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Natalie Fritzler&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nora Pelletier&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Paul Van Hugh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ralph Arnett&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rob Dowd&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ruben Ausman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sarah Brown&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Stewart Visinsky&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thais Sissman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tom Prescott&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Valerie Takahito&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Aleksandra Gannaway&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ann Blume&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Arthur Gainer&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ben Wallace&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bradley Drucker&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bryan Spruell&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad McGuire&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Christy Brittain&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Craig Molinari&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Darrin Martin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Delfina Latchford&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Doug Bickford&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Emily Phan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Filia McAdams&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;George Ashbrook&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Harold Pawlan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jack Garza&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jennifer Ferguson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Joe Elijah&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Joy Daniels&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Karl Braun&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ken Dana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lena Radford&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Luke Weiss&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mary Zewe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Meg Tillman&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mick Hernandez&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nathan Cano&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Odella Nelson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pauline Johnson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ralph Ritter&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rob Lucas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Russell Applegate&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sarah Jordon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shirley Schmidt&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Stuart Van&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Thea Hudgings&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Victor Preis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Amy Hunt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Anthony Garverick&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Barry Weirich&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bill Shonely&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brian Stugart&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Carol Darley&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Christina DeMoss&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Clay Rozendal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dan Reichenbach&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;David Smith&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dianna Wilson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Edward Nazzal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Erin Smith&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fred McMath&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greg Matthias&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Henry MacAllister&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hunter Lopez&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jas O&apos;Carroll&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jill Matthias&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;John Stevenson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Justin Hirsh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kean Thornton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Laura Armstrong&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Liz Pelletier&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maribeth Yedwab&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maureen Gastineau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Michael Stewart&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Muhammed MacIntyre&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nicole Brennan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Patrick Ryan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Philisse Overcash&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rick Duston&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rose O&apos;Brian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sandra Glassco&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Shahid Collister&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Steve Carroll&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Thea Hendricks&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Toby Braunhardt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Troy Blackwell&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yoseph Carroll&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Sanjit Chand&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Adam Hart&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Alyssa Crouse&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anne Pryor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Barry Französisch&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bill Donatelli&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brian DeCherney&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carlos Meador&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chris McAfee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Claudia Bergmann&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Damala Kotsonis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;David Flashing&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Denny Ordway&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ed Ludwig&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Erin Ashbrook&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fred Chung&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grant Thornton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Helen Wasserman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Janet Lee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jessica Myrick&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;John Lee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Julie Prescott&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Katrina Willman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Larry Blacks&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lisa Ryan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Maria Zettner&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Matthew Clasen&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Michael Nguyen&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mitch Willingham&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nick Crebassa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Patrick Jones&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Peter McVee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Richard Bierner&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Roland Fjeld&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sam Zeldin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sean O&apos;Donnell&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stefanie Holloman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Susan Vittorini&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tiffany House&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tracy Hopkins&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;William Brown&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alex Russell&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Anna Andreadi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ashley Jarboe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benjamin Venier&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brenda Bowman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cari Schnelling&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Charles McCrossin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Christopher Conant&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chuck Sachs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cyma Kinney&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dave Brooks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dennis Bolton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Duane Benoit&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eric Murdock&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Frank Gastineau&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Georgia Rosenberg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Harry Marie&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;James Galang&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jennifer Patt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Joel Jenkins&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Julia Dunbar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Katherine Hughes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Khloe Miller&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lindsay Castell&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Magdelene Morse&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Matt Abelman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Michael Dominguez&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mike Kennedy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Neil Ducich&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pamela Stobb&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pete Armstrong&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rick Wilson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Robert Dilbeck&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ryan Crowe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Scott Cohen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Skye Norling&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sung Pak&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Theresa Swint&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tony Chapman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Victoria Wilson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Alan Shonely&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Andy Reiter&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Anthony Witt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Becky Martin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bobby Trafton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bruce Geld&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cathy Armstrong&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Christine Sundaresam&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Corinna Mitchell&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dario Medina&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Deanra Eno&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dorothy Badders&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Elpida Rittenbach&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Eva Jacobs&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gary Mitchum&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guy Thornton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ionia McGrath&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jay Fein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jim Mitchum&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Joni Wasserman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Karen Carlisle&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kelly Lampkin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lela Donovan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Logan Haushalter&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mark Hamilton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Max Ludwig&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Michelle Moray&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nat Gilpin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nona Balk&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Paul Prost&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Quincy Jones&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ritsa Hightower&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Roy Phan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Shaun Weien&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Steven Ward&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ted Butterfield&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Todd Boyes&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Valerie Dominguez&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Adrian Shami&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Alan Dominguez&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Andrew Allen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Anthony Jacobs&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bart Folk&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bill Stewart&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brian Thompson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Carol Triggs&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Christina VanderZanden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dana Kaydos&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;David Wiener&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dionis Lloyd&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eileen Kiefer&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eudokia Martin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fred Wasserman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greg Maxwell&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Herbert Flentye&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jason Fortune-&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jill Stevenson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jonathan Doherty&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Justin MacKendrick&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Keith Dawkins&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Laurel Beltran&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liz Preis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Marina Lichtenstein&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Maureen Gnade&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Michelle Arnett&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Muhammed Yedwab&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nicole Fjeld&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Paul Gonzalez&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Phillina Ober&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rick Hansen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ross Baird&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sara Luxemburg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Shahid Hopkins&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Steve Chapman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tamara Dahlen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Toby Carlisle&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Troy Staebel&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zuschuss Carroll&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Sean Miller&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Aaron Hawkins&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Alice McCarthy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Anna Chung&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Astrea Jones&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Berenike Kampe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brendan Dodson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Carl Jackson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Charles Sheldon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cindy Chapman&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cynthia Arntzen&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dave Hallsten&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dennis Kane&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Duane Huffman&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Erica Bern&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Frank Hawley&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Giulietta Baptist&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Heather Jas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;James Lanier&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jeremy Ellison&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;John Castell&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Julia West&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Katherine Murray&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kimberly Carter&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lindsay Shagiari&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marc Crier&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Matt Collins&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Michael Grace&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mike Pelletier&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Neil Französisch&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Parhena Norris&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pete Kriz&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Raymond Messe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Robert Marley&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sally Hughsby&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Scott Williamson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sonia Cooley&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sung Shariari&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Thomas Boland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tony Molinari&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vivek Gonzalez&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Customer Name Set:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>false</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_43A73A1344C84A4EBC8127A498D588DE'>
            <properties context=''>
              <relation connection='excel-direct.0q9oa3z1uzp8dt12eqa0h0rr0rnh' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                  <column datatype='integer' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='People' id='People_075A13B609F14161BA396E5B5F4D4B48'>
            <properties context=''>
              <relation connection='excel-direct.0q9oa3z1uzp8dt12eqa0h0rr0rnh' name='People' table='[People$]' type='table'>
                <columns gridOrigin='A1:B5:no:A1:B5:0' header='yes' outcome='6'>
                  <column datatype='string' name='Person' ordinal='0' />
                  <column datatype='string' name='Region' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Returns' id='Returns_885ACD1E49424AE981C456CFF9E7211A'>
            <properties context=''>
              <relation connection='excel-direct.0q9oa3z1uzp8dt12eqa0h0rr0rnh' name='Returns' table='[Returns$]' type='table'>
                <columns gridOrigin='A1:B297:no:A1:B297:0' header='yes' outcome='6'>
                  <column datatype='string' name='Returned' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Region]' />
              <expression op='[Region (People)]' />
            </expression>
            <first-end-point object-id='Orders_43A73A1344C84A4EBC8127A498D588DE' />
            <second-end-point object-id='People_075A13B609F14161BA396E5B5F4D4B48' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Order ID]' />
              <expression op='[Order ID (Returns)]' />
            </expression>
            <first-end-point object-id='Orders_43A73A1344C84A4EBC8127A498D588DE' />
            <second-end-point object-id='Returns_885ACD1E49424AE981C456CFF9E7211A' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='World Bank Indicators' inline='true' name='federated.12sdb1b1b2b5mx1ejqqdw02lpmam' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='World Bank Indicators' name='textscan.17yt84l1to6ezo1gz5dd70wte8fr'>
            <connection class='textscan' cleaning='yes' compat='no' csvFile='C:/Users/worka/OneDrive/Desktop/Tableau/World Bank Indicators.csv' dataRefreshTime='' directory='C:/Users/worka/OneDrive/Desktop/Tableau' filename='C:/Users/worka/AppData/Local/Temp/TableauTemp/01qk3c31bfc8l21c8w3k41qw0d7q/World Bank Indicators.csv.xlsx' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.17yt84l1to6ezo1gz5dd70wte8fr' name='World Bank Indicators.csv' table='[C:\Users\worka\OneDrive\Desktop\Tableau\World Bank Indicators#csv]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:AA2706:no:A1:AA2706:2' header='yes' locale='en_IN' separator=','>
            <column datatype='real' name='Birth Rate' ordinal='0' />
            <column datatype='string' name='Business Tax Rate' ordinal='1' />
            <column datatype='integer' name='CO2 Emissions' ordinal='2' />
            <column datatype='string' name='Country' ordinal='3' />
            <column datatype='integer' name='Days to Start Business' ordinal='4' />
            <column datatype='string' name='Ease of Business' ordinal='5' />
            <column datatype='integer' name='Energy Usage' ordinal='6' />
            <column datatype='integer' name='GDP' ordinal='7' />
            <column datatype='real' name='Health Exp % GDP' ordinal='8' />
            <column datatype='integer' name='Health Exp/Capita' ordinal='9' />
            <column datatype='string' name='Hours to do Tax' ordinal='10' />
            <column datatype='real' name='Infant Mortality Rate' ordinal='11' />
            <column datatype='real' name='Internet Usage' ordinal='12' />
            <column datatype='real' name='Lending Interest' ordinal='13' />
            <column datatype='integer' name='Life Expectancy Female' ordinal='14' />
            <column datatype='integer' name='Life Expectancy Male' ordinal='15' />
            <column datatype='real' name='Mobile Phone Usage' ordinal='16' />
            <column datatype='integer' name='Number of Records' ordinal='17' />
            <column datatype='real' name='Population 0-14' ordinal='18' />
            <column datatype='real' name='Population 15-64' ordinal='19' />
            <column datatype='real' name='Population 65+' ordinal='20' />
            <column datatype='integer' name='Population Total' ordinal='21' />
            <column datatype='real' name='Population Urban' ordinal='22' />
            <column datatype='string' name='Region' ordinal='23' />
            <column datatype='integer' name='Tourism Inbound' ordinal='24' />
            <column datatype='integer' name='Tourism Outbound' ordinal='25' />
            <column datatype='date' name='Year' ordinal='26' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.17yt84l1to6ezo1gz5dd70wte8fr' name='World Bank Indicators.csv' table='[C:\Users\worka\OneDrive\Desktop\Tableau\World Bank Indicators#csv]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:AA2706:no:A1:AA2706:2' header='yes' locale='en_IN' separator=','>
            <column datatype='real' name='Birth Rate' ordinal='0' />
            <column datatype='string' name='Business Tax Rate' ordinal='1' />
            <column datatype='integer' name='CO2 Emissions' ordinal='2' />
            <column datatype='string' name='Country' ordinal='3' />
            <column datatype='integer' name='Days to Start Business' ordinal='4' />
            <column datatype='string' name='Ease of Business' ordinal='5' />
            <column datatype='integer' name='Energy Usage' ordinal='6' />
            <column datatype='integer' name='GDP' ordinal='7' />
            <column datatype='real' name='Health Exp % GDP' ordinal='8' />
            <column datatype='integer' name='Health Exp/Capita' ordinal='9' />
            <column datatype='string' name='Hours to do Tax' ordinal='10' />
            <column datatype='real' name='Infant Mortality Rate' ordinal='11' />
            <column datatype='real' name='Internet Usage' ordinal='12' />
            <column datatype='real' name='Lending Interest' ordinal='13' />
            <column datatype='integer' name='Life Expectancy Female' ordinal='14' />
            <column datatype='integer' name='Life Expectancy Male' ordinal='15' />
            <column datatype='real' name='Mobile Phone Usage' ordinal='16' />
            <column datatype='integer' name='Number of Records' ordinal='17' />
            <column datatype='real' name='Population 0-14' ordinal='18' />
            <column datatype='real' name='Population 15-64' ordinal='19' />
            <column datatype='real' name='Population 65+' ordinal='20' />
            <column datatype='integer' name='Population Total' ordinal='21' />
            <column datatype='real' name='Population Urban' ordinal='22' />
            <column datatype='string' name='Region' ordinal='23' />
            <column datatype='integer' name='Tourism Inbound' ordinal='24' />
            <column datatype='integer' name='Tourism Outbound' ordinal='25' />
            <column datatype='date' name='Year' ordinal='26' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[World Bank Indicators.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AA2706:no:A1:AA2706:2&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Birth Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Birth Rate]</local-name>
            <parent-name>[World Bank Indicators.csv]</parent-name>
            <remote-alias>Birth Rate</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World Bank Indicators.csv_99D4BA0D95EF494E924A4F7E58A0F2C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business Tax Rate</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Business Tax Rate]</local-name>
            <parent-name>[World Bank Indicators.csv]</parent-name>
            <remote-alias>Business Tax Rate</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World Bank Indicators.csv_99D4BA0D95EF494E924A4F7E58A0F2C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO2 Emissions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CO2 Emissions]</local-name>
            <parent-name>[World Bank Indicators.csv]</parent-name>
            <remote-alias>CO2 Emissions</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World Bank Indicators.csv_99D4BA0D95EF494E924A4F7E58A0F2C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[World Bank Indicators.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World Bank Indicators.csv_99D4BA0D95EF494E924A4F7E58A0F2C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Days to Start Business</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Days to Start Business]</local-name>
            <parent-name>[World Bank Indicators.csv]</parent-name>
            <remote-alias>Days to Start Business</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World Bank Indicators.csv_99D4BA0D95EF494E924A4F7E58A0F2C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ease of Business</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Ease of Business]</local-name>
            <parent-name>[World Bank Indicators.csv]</parent-name>
            <remote-alias>Ease of Business</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World Bank Indicators.csv_99D4BA0D95EF494E924A4F7E58A0F2C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy Usage</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Energy Usage]</local-name>
            <parent-name>[World Bank Indicators.csv]</parent-name>
            <remote-alias>Energy Usage</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World Bank Indicators.csv_99D4BA0D95EF494E924A4F7E58A0F2C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GDP]</local-name>
            <parent-name>[World Bank Indicators.csv]</parent-name>
            <remote-alias>GDP</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World Bank Indicators.csv_99D4BA0D95EF494E924A4F7E58A0F2C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health Exp % GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Health Exp % GDP]</local-name>
            <parent-name>[World Bank Indicators.csv]</parent-name>
            <remote-alias>Health Exp % GDP</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World Bank Indicators.csv_99D4BA0D95EF494E924A4F7E58A0F2C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health Exp/Capita</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health Exp/Capita]</local-name>
            <parent-name>[World Bank Indicators.csv]</parent-name>
            <remote-alias>Health Exp/Capita</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World Bank Indicators.csv_99D4BA0D95EF494E924A4F7E58A0F2C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hours to do Tax</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Hours to do Tax]</local-name>
            <parent-name>[World Bank Indicators.csv]</parent-name>
            <remote-alias>Hours to do Tax</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World Bank Indicators.csv_99D4BA0D95EF494E924A4F7E58A0F2C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Infant Mortality Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Infant Mortality Rate]</local-name>
            <parent-name>[World Bank Indicators.csv]</parent-name>
            <remote-alias>Infant Mortality Rate</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World Bank Indicators.csv_99D4BA0D95EF494E924A4F7E58A0F2C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Internet Usage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Internet Usage]</local-name>
            <parent-name>[World Bank Indicators.csv]</parent-name>
            <remote-alias>Internet Usage</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World Bank Indicators.csv_99D4BA0D95EF494E924A4F7E58A0F2C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lending Interest</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lending Interest]</local-name>
            <parent-name>[World Bank Indicators.csv]</parent-name>
            <remote-alias>Lending Interest</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World Bank Indicators.csv_99D4BA0D95EF494E924A4F7E58A0F2C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life Expectancy Female</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Life Expectancy Female]</local-name>
            <parent-name>[World Bank Indicators.csv]</parent-name>
            <remote-alias>Life Expectancy Female</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World Bank Indicators.csv_99D4BA0D95EF494E924A4F7E58A0F2C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life Expectancy Male</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Life Expectancy Male]</local-name>
            <parent-name>[World Bank Indicators.csv]</parent-name>
            <remote-alias>Life Expectancy Male</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World Bank Indicators.csv_99D4BA0D95EF494E924A4F7E58A0F2C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mobile Phone Usage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mobile Phone Usage]</local-name>
            <parent-name>[World Bank Indicators.csv]</parent-name>
            <remote-alias>Mobile Phone Usage</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World Bank Indicators.csv_99D4BA0D95EF494E924A4F7E58A0F2C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Records</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Records]</local-name>
            <parent-name>[World Bank Indicators.csv]</parent-name>
            <remote-alias>Number of Records</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World Bank Indicators.csv_99D4BA0D95EF494E924A4F7E58A0F2C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population 0-14</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population 0-14]</local-name>
            <parent-name>[World Bank Indicators.csv]</parent-name>
            <remote-alias>Population 0-14</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World Bank Indicators.csv_99D4BA0D95EF494E924A4F7E58A0F2C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population 15-64</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population 15-64]</local-name>
            <parent-name>[World Bank Indicators.csv]</parent-name>
            <remote-alias>Population 15-64</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World Bank Indicators.csv_99D4BA0D95EF494E924A4F7E58A0F2C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population 65+</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population 65+]</local-name>
            <parent-name>[World Bank Indicators.csv]</parent-name>
            <remote-alias>Population 65+</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World Bank Indicators.csv_99D4BA0D95EF494E924A4F7E58A0F2C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population Total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population Total]</local-name>
            <parent-name>[World Bank Indicators.csv]</parent-name>
            <remote-alias>Population Total</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World Bank Indicators.csv_99D4BA0D95EF494E924A4F7E58A0F2C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population Urban</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population Urban]</local-name>
            <parent-name>[World Bank Indicators.csv]</parent-name>
            <remote-alias>Population Urban</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World Bank Indicators.csv_99D4BA0D95EF494E924A4F7E58A0F2C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[World Bank Indicators.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World Bank Indicators.csv_99D4BA0D95EF494E924A4F7E58A0F2C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tourism Inbound</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tourism Inbound]</local-name>
            <parent-name>[World Bank Indicators.csv]</parent-name>
            <remote-alias>Tourism Inbound</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World Bank Indicators.csv_99D4BA0D95EF494E924A4F7E58A0F2C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tourism Outbound</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tourism Outbound]</local-name>
            <parent-name>[World Bank Indicators.csv]</parent-name>
            <remote-alias>Tourism Outbound</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World Bank Indicators.csv_99D4BA0D95EF494E924A4F7E58A0F2C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[World Bank Indicators.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>26</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World Bank Indicators.csv_99D4BA0D95EF494E924A4F7E58A0F2C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Overall GDP' datatype='real' name='[Calculation_501869930028249093]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([GDP]) / TOTAL(SUM([GDP]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Energy Usage]' role='measure' type='quantitative' />
      <column datatype='real' name='[Health Exp % GDP]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Health Exp/Capita]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Life Expectancy Female]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Life Expectancy Male]' role='measure' type='quantitative' />
      <column datatype='real' name='[Population 65+]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='World Bank Indicators.csv' datatype='table' name='[__tableau_internal_object_id__].[World Bank Indicators.csv_99D4BA0D95EF494E924A4F7E58A0F2C8]' role='measure' type='quantitative' />
      <column-instance column='[Energy Usage]' derivation='Sum' name='[sum:Energy Usage:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Health Exp % GDP]' derivation='Sum' name='[sum:Health Exp % GDP:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Health Exp/Capita]' derivation='Sum' name='[sum:Health Exp/Capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Life Expectancy Female]' derivation='Sum' name='[sum:Life Expectancy Female:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Life Expectancy Male]' derivation='Sum' name='[sum:Life Expectancy Male:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population 65+]' derivation='Sum' name='[sum:Population 65+:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[sum:Energy Usage:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[sum:Population 65+:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{6588a78e-af01-489f-8b4f-bab51aa7f9d7}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[sum:Health Exp % GDP:qk]' />
            <field name='[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[sum:Health Exp/Capita:qk]' />
            <field name='[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[sum:Life Expectancy Female:qk]' />
            <field name='[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[sum:Life Expectancy Male:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>0</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='World Bank Indicators.csv' id='World Bank Indicators.csv_99D4BA0D95EF494E924A4F7E58A0F2C8'>
            <properties context=''>
              <relation connection='textscan.17yt84l1to6ezo1gz5dd70wte8fr' name='World Bank Indicators.csv' table='[C:\Users\worka\OneDrive\Desktop\Tableau\World Bank Indicators#csv]' type='table'>
                <columns character-set='UTF-8' gridOrigin='A1:AA2706:no:A1:AA2706:2' header='yes' locale='en_IN' separator=','>
                  <column datatype='real' name='Birth Rate' ordinal='0' />
                  <column datatype='string' name='Business Tax Rate' ordinal='1' />
                  <column datatype='integer' name='CO2 Emissions' ordinal='2' />
                  <column datatype='string' name='Country' ordinal='3' />
                  <column datatype='integer' name='Days to Start Business' ordinal='4' />
                  <column datatype='string' name='Ease of Business' ordinal='5' />
                  <column datatype='integer' name='Energy Usage' ordinal='6' />
                  <column datatype='integer' name='GDP' ordinal='7' />
                  <column datatype='real' name='Health Exp % GDP' ordinal='8' />
                  <column datatype='integer' name='Health Exp/Capita' ordinal='9' />
                  <column datatype='string' name='Hours to do Tax' ordinal='10' />
                  <column datatype='real' name='Infant Mortality Rate' ordinal='11' />
                  <column datatype='real' name='Internet Usage' ordinal='12' />
                  <column datatype='real' name='Lending Interest' ordinal='13' />
                  <column datatype='integer' name='Life Expectancy Female' ordinal='14' />
                  <column datatype='integer' name='Life Expectancy Male' ordinal='15' />
                  <column datatype='real' name='Mobile Phone Usage' ordinal='16' />
                  <column datatype='integer' name='Number of Records' ordinal='17' />
                  <column datatype='real' name='Population 0-14' ordinal='18' />
                  <column datatype='real' name='Population 15-64' ordinal='19' />
                  <column datatype='real' name='Population 65+' ordinal='20' />
                  <column datatype='integer' name='Population Total' ordinal='21' />
                  <column datatype='real' name='Population Urban' ordinal='22' />
                  <column datatype='string' name='Region' ordinal='23' />
                  <column datatype='integer' name='Tourism Inbound' ordinal='24' />
                  <column datatype='integer' name='Tourism Outbound' ordinal='25' />
                  <column datatype='date' name='Year' ordinal='26' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Orders+ (global_superstore_2016)' inline='true' name='federated.12pnq8f1s43vkh1fqzsr101fwrkl' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='global_superstore_2016' name='excel-direct.1wznuts07ssc0u1etbzhd0fxrq33'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/worka/OneDrive/Desktop/Tableau/global_superstore_2016.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Sample - Superstore (1)' name='excel-direct.0bw9nmt1iqd4li1dngag21sl7225'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/worka/OneDrive/Desktop/Tableau/Sample - Superstore (1).xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='World Bank Indicators' name='textscan.095ooqq0jrwh0d12p9y7n0z9he69'>
            <connection class='textclean' cleaning='yes' compat='no' csvFile='C:\Users\worka\OneDrive\Desktop\Tableau\World Bank Indicators.csv' dataRefreshTime='' directory='C:/Users/worka/OneDrive/Desktop/Tableau' filename='C:/Users/worka/AppData/Local/Temp/TableauTemp/0n1oq6k0juwnpy14pheq90v048eo/World Bank Indicators.csv.xlsx' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1wznuts07ssc0u1etbzhd0fxrq33' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='integer' name='Postal Code' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='string' name='Country' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Market' ordinal='13' />
            <column datatype='string' name='Product ID' ordinal='14' />
            <column datatype='string' name='Category' ordinal='15' />
            <column datatype='string' name='Sub-Category' ordinal='16' />
            <column datatype='string' name='Product Name' ordinal='17' />
            <column datatype='real' name='Sales' ordinal='18' />
            <column datatype='integer' name='Quantity' ordinal='19' />
            <column datatype='real' name='Discount' ordinal='20' />
            <column datatype='real' name='Profit' ordinal='21' />
            <column datatype='real' name='Shipping Cost' ordinal='22' />
            <column datatype='string' name='Order Priority' ordinal='23' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.1wznuts07ssc0u1etbzhd0fxrq33' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='6'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Segment' ordinal='7' />
              <column datatype='integer' name='Postal Code' ordinal='8' />
              <column datatype='string' name='City' ordinal='9' />
              <column datatype='string' name='State' ordinal='10' />
              <column datatype='string' name='Country' ordinal='11' />
              <column datatype='string' name='Region' ordinal='12' />
              <column datatype='string' name='Market' ordinal='13' />
              <column datatype='string' name='Product ID' ordinal='14' />
              <column datatype='string' name='Category' ordinal='15' />
              <column datatype='string' name='Sub-Category' ordinal='16' />
              <column datatype='string' name='Product Name' ordinal='17' />
              <column datatype='real' name='Sales' ordinal='18' />
              <column datatype='integer' name='Quantity' ordinal='19' />
              <column datatype='real' name='Discount' ordinal='20' />
              <column datatype='real' name='Profit' ordinal='21' />
              <column datatype='real' name='Shipping Cost' ordinal='22' />
              <column datatype='string' name='Order Priority' ordinal='23' />
            </columns>
          </relation>
          <relation connection='excel-direct.1wznuts07ssc0u1etbzhd0fxrq33' name='People' table='[People$]' type='table'>
            <columns gridOrigin='A1:B25:no:A1:B25:0' header='yes' outcome='2'>
              <column datatype='string' name='Person' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
            </columns>
          </relation>
          <relation connection='excel-direct.1wznuts07ssc0u1etbzhd0fxrq33' name='Returns' table='[Returns$]' type='table'>
            <columns gridOrigin='A1:C1080:no:A1:C1080:0' header='yes' outcome='6'>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='string' name='Region' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Category]' value='[Orders].[Category]' />
          <map key='[City]' value='[Orders].[City]' />
          <map key='[Country]' value='[Orders].[Country]' />
          <map key='[Customer ID]' value='[Orders].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders].[Customer Name]' />
          <map key='[Discount]' value='[Orders].[Discount]' />
          <map key='[Market]' value='[Orders].[Market]' />
          <map key='[Order Date]' value='[Orders].[Order Date]' />
          <map key='[Order ID (Returns)]' value='[Returns].[Order ID]' />
          <map key='[Order ID]' value='[Orders].[Order ID]' />
          <map key='[Order Priority]' value='[Orders].[Order Priority]' />
          <map key='[Person]' value='[People].[Person]' />
          <map key='[Postal Code]' value='[Orders].[Postal Code]' />
          <map key='[Product ID]' value='[Orders].[Product ID]' />
          <map key='[Product Name]' value='[Orders].[Product Name]' />
          <map key='[Profit]' value='[Orders].[Profit]' />
          <map key='[Quantity]' value='[Orders].[Quantity]' />
          <map key='[Region (People)]' value='[People].[Region]' />
          <map key='[Region (Returns)]' value='[Returns].[Region]' />
          <map key='[Region]' value='[Orders].[Region]' />
          <map key='[Returned]' value='[Returns].[Returned]' />
          <map key='[Row ID]' value='[Orders].[Row ID]' />
          <map key='[Sales]' value='[Orders].[Sales]' />
          <map key='[Segment]' value='[Orders].[Segment]' />
          <map key='[Ship Date]' value='[Orders].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders].[Ship Mode]' />
          <map key='[Shipping Cost]' value='[Orders].[Shipping Cost]' />
          <map key='[State]' value='[Orders].[State]' />
          <map key='[Sub-Category]' value='[Orders].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:X10001:no:A1:X10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[People]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B25:no:A1:B25:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Returns]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C1080:no:A1:C1080:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_2B8C87C36137489A88C1E3293454D88B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_2B8C87C36137489A88C1E3293454D88B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_2B8C87C36137489A88C1E3293454D88B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_2B8C87C36137489A88C1E3293454D88B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_2B8C87C36137489A88C1E3293454D88B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_2B8C87C36137489A88C1E3293454D88B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_2B8C87C36137489A88C1E3293454D88B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_2B8C87C36137489A88C1E3293454D88B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_2B8C87C36137489A88C1E3293454D88B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_2B8C87C36137489A88C1E3293454D88B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_2B8C87C36137489A88C1E3293454D88B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_2B8C87C36137489A88C1E3293454D88B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_2B8C87C36137489A88C1E3293454D88B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_2B8C87C36137489A88C1E3293454D88B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_2B8C87C36137489A88C1E3293454D88B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_2B8C87C36137489A88C1E3293454D88B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_2B8C87C36137489A88C1E3293454D88B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_2B8C87C36137489A88C1E3293454D88B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_2B8C87C36137489A88C1E3293454D88B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_2B8C87C36137489A88C1E3293454D88B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_2B8C87C36137489A88C1E3293454D88B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_2B8C87C36137489A88C1E3293454D88B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_2B8C87C36137489A88C1E3293454D88B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_2B8C87C36137489A88C1E3293454D88B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Person</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Person]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Person</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[People_89F52AAD86274906A168B3E3AD9AD72F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region (People)]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[People_89F52AAD86274906A168B3E3AD9AD72F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_AD31254D4E9442D5B76B69908D6D6CF9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID (Returns)]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_AD31254D4E9442D5B76B69908D6D6CF9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region (Returns)]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_AD31254D4E9442D5B76B69908D6D6CF9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='SUM([Profit])/SUM([Sales])' datatype='real' name='[Calculation_1435522427440246785]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' />
      </column>
      <column caption='Rankwise country sales' datatype='integer' name='[Calculation_1435522427496648709]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK(SUM([Sales]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
      <column aggregation='None' datatype='integer' name='[Profit (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='2' formula='[Profit]' peg='0' size='218' />
      </column>
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column aggregation='None' caption='Sales (bin 1000)' datatype='integer' name='[Sales (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='3' formula='[Sales]' peg='0' size='1000' />
      </column>
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_2B8C87C36137489A88C1E3293454D88B]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='People' datatype='table' name='[__tableau_internal_object_id__].[People_89F52AAD86274906A168B3E3AD9AD72F]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Returns' datatype='table' name='[__tableau_internal_object_id__].[Returns_AD31254D4E9442D5B76B69908D6D6CF9]' role='measure' type='quantitative' />
      <column-instance column='[Customer Name Set Sum of Profit]' derivation='InOut' name='[io:Customer Name Set Sum of Profit:nk]' pivot='key' type='nominal' />
      <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      <group caption='Customer Name Set Sum of Profit' name='[Customer Name Set Sum of Profit]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Profit])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Customer Name]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='100' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Sub-Category:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Fasteners&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Accessories&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bookcases&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paper&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Furnishings&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chairs&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Appliances&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tables&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Copiers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Phones&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Storage&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Labels&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Envelopes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Art&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Supplies&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Machines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Binders&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Customer Name Set Sum of Profit:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Product Name:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Belkin Router, USB&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Harbour Creations Executive Leather Armchair, Adjustable&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Cisco Smart Phone, with Caller ID&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Nokia Smart Phone, with Caller ID&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Motorola Smart Phone, Full Size&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sauder Classic Bookcase, Traditional&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cisco Smart Phone, Full Size&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Hoover Stove, Red&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Canon imageCLASS 2200 Advanced Copier&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Nokia Smart Phone, Full Size&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Customer Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Adrian Shami&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Alyssa Tate&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Annie Thurman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Barry Gonzalez&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bill Eplett&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brian Derr&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Carlos Meador&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chris McAfee&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Claudia Bergmann&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Damala Kotsonis&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;David Flashing&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Denny Ordway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ed Ludwig&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Erin Ashbrook&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fred Chung&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Grant Thornton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Helen Wasserman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Janet Lee&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jessica Myrick&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;John Lee&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Julie Prescott&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Katrina Edelman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kunst Miller&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lisa Hazard&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Maria Etezadi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Matt Hagelstein&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Michael Moore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mitch Webber&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Neoma Murray&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Patrick Gardner&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Peter Fuller&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ricardo Sperren&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Roger Demir&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sam Craven&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sean Miller&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Stefania Perrino&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Susan Pistek&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Thomas Thornton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tracy Blumstein&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vivek Sundaresam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aaron Bergman&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alex Avila&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ann Chong&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Arthur Prichep&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benjamin Farhat&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bradley Nguyen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Candace McMahon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chad McGuire&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Christy Brittain&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Craig Molinari&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Darrin Martin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Delfina Latchford&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Doug Bickford&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Emily Phan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Filia McAdams&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;George Ashbrook&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Harold Pawlan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jack Garza&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jennifer Ferguson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Joe Elijah&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Joy Daniels&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Karen Seio&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ken Brennan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lena Hernandez&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Luke Schmidt&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mary O&apos;Rourke&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Meg O&apos;Connel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mick Crebagga&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Natalie Webber&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nora Preis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pauline Chand&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ralph Kennedy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rob Haberlin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ruben Dartt&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sarah Foster&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Shirley Jackson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Stuart Calhoun&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thea Hendricks&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tom Boeckenhauer&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Valerie Takahito&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Adam Hart&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Allen Armold&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Anna Gayman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Barbara Fisher&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Beth Fritzler&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brendan Murry&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Carl Jackson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Charles Sheldon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cindy Chapman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cynthia Arntzen&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dave Hallsten&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dennis Kane&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Duane Huffman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Erica Bern&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Frank Hawley&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Giulietta Baptist&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Heather Jas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;James Lanier&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jeremy Ellison&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;John Castell&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Julia West&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Katherine Hughes&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Khloe Miller&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lindsay Castell&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Magdelene Morse&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Matt Abelman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Michael Dominguez&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mike Kennedy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Neil Ducich&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pamela Stobb&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pete Armstrong&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Raymond Buch&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Robert Dilbeck&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ryan Crowe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Scott Cohen&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Skye Norling&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sung Pak&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Theresa Swint&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tonja Turnell&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Victoria Pisteka&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Alan Haines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Andrew Gjertsen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Anthony Johnson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bart Pistole&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bill Tyler&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brooke Gillingham&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Carol Triggs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Christina VanderZanden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Clytie Kelty&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dana Kaydos&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;David Wiener&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dionis Lloyd&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eileen Kiefer&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eudokia Martin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fred Wasserman&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Greg Maxwell&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Herbert Flentye&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jason Fortune-&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jill Stevenson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jonathan Doherty&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Justin MacKendrick&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kean Thornton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Laura Armstrong&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Liz Pelletier&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maribeth Yedwab&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maureen Gastineau&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Michael Stewart&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Muhammed MacIntyre&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nicole Brennan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Patrick Ryan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Philisse Overcash&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rick Duston&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rose O&apos;Brian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sandra Glassco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Shahid Collister&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Steve Carroll&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tamara Chand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Toby Braunhardt&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tracy Zic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yana Sorensen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aimee Bixby&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Amy Cox&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Annie Zypern&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Barry Pond&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bill Overfelt&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brian Moss&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Carlos Soltero&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chris Selesnick&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clay Cheatham&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dan Campbell&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;David Kendrick&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dianna Arnett&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Edward Becker&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Erin Creighton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fred Harton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greg Guthrie&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Henia Zydlo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Janet Martin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jesus Ocampo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;John Lucas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Justin Deggeller&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Katrina Willman&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Larry Blacks&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lisa Ryan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Maria Zettner&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Matthew Clasen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Michael Nguyen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mitch Willingham&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nick Crebassa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Patrick Jones&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Peter McVee&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Richard Bierner&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Roland Fjeld&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sam Zeldin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sean O&apos;Donnell&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Stefanie Holloman&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Susan Vittorini&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tiffany House&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tracy Collins&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vivian Mathis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Adam Shillingsburg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Allen Goldenen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anna Häberlin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Barry Blumstein&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Beth Paige&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brendan Sweed&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Carl Ludwig&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Charlotte Melton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cindy Schnelling&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cynthia Delaney&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dave Kipp&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dennis Pardue&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Duane Noonan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Erica Hackney&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Frank Merwin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Giulietta Dortch&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Heather Kirkland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jamie Frazer&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jeremy Farry&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;John Dryer&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Juliana Krohn&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Katherine Murray&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kimberly Carter&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lindsay Shagiari&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marc Crier&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Matt Collins&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Michael Grace&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mike Pelletier&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Neil Französisch&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Parhena Norris&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pete Kriz&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Raymond Messe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Robert Marley&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sally Hughsby&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Scott Williamson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sonia Cooley&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sung Shariari&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thomas Boland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tony Chapman&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Victoria Wilson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Alejandro Savely&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Angele Hood&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Art Foster&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ben Peterman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brad Thomas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bryan Mills&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cathy Prescott&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Christopher Martinez&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Craig Carroll&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Darren Koutras&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Debra Catini&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dorothy Wardle&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Emily Ducich&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Evan Henry&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gene Hale&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Harold Dahlen&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ivan Gibson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jenna Caffey&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jim Sink&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Joseph Holt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Karen Daniels&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kelly Williams&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lena Cacioppo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lori Olson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mark Packer&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maxwell Schwartz&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Michelle Tran&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Natalie DeCherney&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nora Paige&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Paul Stevenson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rachel Payne&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rob Beeghly&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Roy Skaria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sarah Bern&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sheri Gordon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Stewart Carmichael&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ted Trevino&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Todd Sumrall&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Valerie Dominguez&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aaron Hawkins&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alex Grayson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ann Steele&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arthur Wiediger&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Benjamin Patterson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bradley Talbott&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cari MacIntyre&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad Sievert&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chuck Clark&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Craig Reiter&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Darrin Sayre&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Denise Leinenbach&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Doug Jacobs&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eric Barreto&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Frank Atkinson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;George Bell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Harold Ryan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jack Lebron&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jennifer Halladay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Joe Kamberova&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Joy Smith&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Karl Braun&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ken Dana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lena Radford&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Luke Weiss&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mary Zewe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Meg Tillman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mick Hernandez&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nathan Cano&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Odella Nelson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pauline Johnson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ralph Ritter&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rob Lucas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Russell Applegate&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sarah Jordon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Shirley Schmidt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Stuart Van&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thea Hudgings&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tom Prescott&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vicky Freymann&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Alejandro Ballentine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Andy Yotov&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Arianne Irving&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Becky Pak&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Brad Eason&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bruce Stewart&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cathy Armstrong&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Christine Sundaresam&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Corinna Mitchell&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dario Medina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Deanra Eno&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dorothy Badders&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Elpida Rittenbach&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Eva Jacobs&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gary Mitchum&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guy Thornton&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ionia McGrath&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jay Fein&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jim Mitchum&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Joni Wasserman&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Karen Bern&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kelly Collister&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lauren Leatherbury&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Logan Currie&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mark Haberlin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Max Jones&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Michelle Lonsdale&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nat Carroll&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Noel Staavos&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paul MacIntyre&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pierre Wener&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rick Wilson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Roy Französisch&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saphhira Shifley&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Shaun Chance&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Steven Roelle&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tanja Norvell&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Toby Swindell&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Trudy Glocke&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Adrian Barton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Allen Rosenblatt&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anne McFarland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Barry Franz&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Beth Thompson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brian Dahlen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carl Weiss&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chloris Kastensmidt&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cindy Stewart&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cynthia Voltz&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dave Poirier&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Denny Blanton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ed Braxton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Erica Hernandez&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Frank Olsen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Giulietta Weimer&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Helen Abelman&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jamie Kunitz&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jeremy Lonsdale&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;John Grady&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Julie Creighton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Katherine Nockton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kristen Hastings&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lindsay Williams&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marc Harrigan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Matt Collister&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Michael Granlund&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mike Vittorini&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Neil Knudson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Patricia Hirasaki&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pete Takahito&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Resi Pölking&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Robert Waldorf&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sally Knutson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sean Braxton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sonia Sunley&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Susan Gilcrest&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thomas Brumley&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tony Molinari&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vivek Gonzalez&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Alan Hwang&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Andrew Roberts&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Anthony O&apos;Donnell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bart Watters&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bobby Elias&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Brosina Hoffman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Caroline Jumper&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Christine Abelman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Corey Catlett&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Daniel Byrd&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dean Braden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Don Jones&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Eleni McCrary&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Eugene Barchas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gary Hansen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Greg Tran&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hilary Holden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jason Gross&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jim Epp&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jonathan Howell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Justin Ritter&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Keith Dawkins&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Laurel Beltran&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liz Preis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marina Lichtenstein&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Maureen Gnade&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Michelle Arnett&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Muhammed Yedwab&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nicole Fjeld&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Paul Gonzalez&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Phillina Ober&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rick Hansen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ross Baird&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sanjit Chand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Shahid Hopkins&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Steve Chapman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tamara Dahlen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Toby Carlisle&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Troy Blackwell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Yoseph Carroll&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Alan Schoenberger&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Andy Gerbode&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Anthony Rawles&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Becky Castell&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bobby Odegard&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bruce Degenhardt&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cassandra Brandow&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Christine Kargatis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Corey Roper&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Daniel Lacy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dean Katz&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Don Miller&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Elizabeth Moffitt&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eugene Hildebrand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gary Hwang&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guy Armstrong&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hunter Glantz&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jason Klamczynski&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jim Karlsson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Joni Blumstein&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kai Rey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Keith Herrera&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laurel Elliston&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Liz Thompson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maris LaWare&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maurice Satty&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Michelle Ellison&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nancy Lomonaco&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nicole Hansen&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Paul Knutson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Phillip Breyer&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rick Huthwaite&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ross DeVincentis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sanjit Engle&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shahid Shariari&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Steve Nguyen&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tamara Manning&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Toby Gnade&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Troy Staebel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zuschuss Carroll&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Alejandro Grove&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Anemone Ratner&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Art Ferguson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ben Ferrer&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brad Norvell&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bryan Davis&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cathy Hwang&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Christopher Conant&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Craig Carreira&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Darren Budd&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Deborah Brumfield&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dorothy Dickinson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Emily Burns&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Evan Bailliet&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gary Zandusky&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hallie Redmond&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Irene Maddox&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jay Kimmel&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jim Radford&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Joseph Airdo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Karen Carlisle&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kelly Lampkin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lela Donovan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Logan Haushalter&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mark Hamilton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Max Ludwig&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Michelle Moray&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nat Gilpin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nona Balk&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Paul Prost&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Quincy Jones&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ritsa Hightower&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Roy Phan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sara Luxemburg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Shaun Weien&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Steven Ward&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ted Butterfield&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Todd Boyes&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Trudy Schmidt&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Aleksandra Gannaway&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ann Blume&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Arthur Gainer&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ben Wallace&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bradley Drucker&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bryan Spruell&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad Cunningham&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Christopher Schild&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Craig Leslie&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Darren Powers&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Deirdre Greer&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dorris liebe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Emily Grady&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Evan Minnotte&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gene McClure&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Harold Engle&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ivan Liston&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jennifer Braxton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jocasta Rupert&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Joy Bell-&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Karen Ferguson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ken Black&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lena Creighton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Luke Foster&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mark Van Huff&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maya Herman&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mick Brown&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Natalie Fritzler&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nora Pelletier&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Paul Van Hugh&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ralph Arnett&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rob Dowd&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ruben Ausman&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sarah Brown&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shirley Daniels&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Stewart Visinsky&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Thais Sissman&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tom Ashbrook&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Valerie Mitchum&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Alan Barnes&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Amy Hunt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Anthony Garverick&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Barry Weirich&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bill Shonely&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brian Stugart&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Carol Adams&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Christina Anderson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Clay Ludtke&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dan Lawera&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;David Philippe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dianna Vittorini&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Edward Hooks&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Erin Mull&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fred Hopkins&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greg Hansen&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Henry Goldwyn&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Janet Molinari&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jill Fjeld&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;John Murray&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Justin Ellison&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kean Nguyen&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Larry Hughes&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Liz Carlisle&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maribeth Dona&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Matthew Grinstein&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Michael Oakman&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Monica Federle&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nick Radford&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Patrick O&apos;Brill&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Philip Brown&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Richard Eichhorn&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Roland Murray&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sample Company A&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sean Wendt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Stephanie Phelps&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Suzanne McNair&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tim Brockman&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tracy Hopkins&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;William Brown&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Adrian Hane&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Alyssa Crouse&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anne Pryor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Barry Französisch&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bill Donatelli&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brian DeCherney&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carlos Daly&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chris Cortes&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Claire Gute&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cyra Reiten&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;David Bremer&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Denny Joy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ed Jacobs&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Erica Smith&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Frank Preis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grace Kelly&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Helen Andreada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jane Waco&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jeremy Pistek&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;John Huston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Julie Kriz&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Katrina Bavinger&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kristina Nunn&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lisa DeCherney&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Maria Bertelson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Matt Connell&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Michael Kennedy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mitch Gastineau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Neola Schneider&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Patrick Bzostek&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Peter Bühler&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ricardo Emerson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Roger Barcio&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sally Matthias&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sean Christensen&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Speros Goranitis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Susan MacKendrick&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Thomas Seio&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tony Sayre&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vivek Grady&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Aaron Smayling&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alex Russell&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Anna Andreadi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ashley Jarboe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benjamin Venier&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brenda Bowman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cari Sayre&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Charles Crestani&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chuck Magee&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Craig Yedwab&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Darrin Van Huff&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Denise Monton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Doug O&apos;Connell&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eric Hoffmann&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Frank Carlisle&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;George Zrebassa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Harry Greene&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jack O&apos;Briant&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jennifer Jackson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Joel Eaton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Julia Barnett&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Katharine Harms&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ken Heidel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Linda Cazamias&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lycoris Saunders&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MaryBeth Skach&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Melanie Seite&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mike Caudle&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nathan Gelder&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Olvera Toch&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pauline Webber&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Randy Bradley&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rob Williams&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Russell D&apos;Ascenzo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Scot Coram&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Shui Tom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sue Ann Reed&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Theone Pippenger&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tom Stivers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Victor Preis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Alan Shonely&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Andy Reiter&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Anthony Witt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Becky Martin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bobby Trafton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bruce Geld&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Catherine Glotzbach&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Christine Phan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Corey-Lock&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Daniel Raglin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dean percer&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Don Weiss&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ellis Ballard&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Eugene Moren&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gary McGarr&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guy Phonely&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hunter Lopez&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jasper Cacioppo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jim Kriz&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Joni Sundaresam&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kalyca Meade&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kelly Andreada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Laurel Workman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liz Willingham&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mark Cousins&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Max Engle&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Michelle Huthwaite&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Naresj Patel&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Noah Childs&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Paul Lucas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Phillip Flathmann&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rick Reed&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Roy Collins&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sanjit Jacobs&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sharelle Roach&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Steven Cartwright&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tamara Willingham&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Toby Ritter&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Trudy Brown&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Zuschuss Donatelli&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Alan Dominguez&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Andrew Allen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Anthony Jacobs&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bart Folk&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bill Stewart&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brian Thompson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Carol Darley&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Christina DeMoss&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Clay Rozendal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dan Reichenbach&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;David Smith&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dianna Wilson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Edward Nazzal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Erin Smith&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fred McMath&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greg Matthias&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Henry MacAllister&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jas O&apos;Carroll&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jill Matthias&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;John Stevenson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Justin Hirsh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kean Takahito&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Larry Tron&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liz MacKendrick&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Maribeth Schnelling&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Maureen Fritzler&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Michael Paige&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Muhammed Lee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nick Zandusky&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Patrick O&apos;Donnell&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Philip Fox&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rick Bensley&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Roland Schwarz&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sandra Flanagan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Seth Vernon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Stephanie Ulpright&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sylvia Foulston&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tim Taslimi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tracy Poddar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Xylona Preis&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Adam Bellavance&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Alice McCarthy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Anna Chung&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Astrea Jones&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Berenike Kampe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brendan Dodson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cari Schnelling&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Charles McCrossin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chuck Sachs&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cyma Kinney&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dave Brooks&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dennis Bolton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Duane Benoit&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eric Murdock&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Frank Gastineau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Georgia Rosenberg&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Harry Marie&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;James Galang&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jennifer Patt&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Joel Jenkins&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Julia Dunbar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Katherine Ducich&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ken Lonsdale&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Linda Southworth&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lynn Smith&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mathew Reese&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Michael Chen&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mike Gockenbach&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nathan Mautz&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pamela Coakley&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Penelope Sewall&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Randy Ferguson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Robert Barroso&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ryan Akin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Scot Wooten&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sibella Parks&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sung Chung&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Theresa Coyne&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tom Zandusky&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Victoria Brennan&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estimate&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_2B8C87C36137489A88C1E3293454D88B'>
            <properties context=''>
              <relation connection='excel-direct.1wznuts07ssc0u1etbzhd0fxrq33' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='integer' name='Postal Code' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                  <column datatype='string' name='Country' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Market' ordinal='13' />
                  <column datatype='string' name='Product ID' ordinal='14' />
                  <column datatype='string' name='Category' ordinal='15' />
                  <column datatype='string' name='Sub-Category' ordinal='16' />
                  <column datatype='string' name='Product Name' ordinal='17' />
                  <column datatype='real' name='Sales' ordinal='18' />
                  <column datatype='integer' name='Quantity' ordinal='19' />
                  <column datatype='real' name='Discount' ordinal='20' />
                  <column datatype='real' name='Profit' ordinal='21' />
                  <column datatype='real' name='Shipping Cost' ordinal='22' />
                  <column datatype='string' name='Order Priority' ordinal='23' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='People' id='People_89F52AAD86274906A168B3E3AD9AD72F'>
            <properties context=''>
              <relation connection='excel-direct.1wznuts07ssc0u1etbzhd0fxrq33' name='People' table='[People$]' type='table'>
                <columns gridOrigin='A1:B25:no:A1:B25:0' header='yes' outcome='2'>
                  <column datatype='string' name='Person' ordinal='0' />
                  <column datatype='string' name='Region' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Returns' id='Returns_AD31254D4E9442D5B76B69908D6D6CF9'>
            <properties context=''>
              <relation connection='excel-direct.1wznuts07ssc0u1etbzhd0fxrq33' name='Returns' table='[Returns$]' type='table'>
                <columns gridOrigin='A1:C1080:no:A1:C1080:0' header='yes' outcome='6'>
                  <column datatype='string' name='Returned' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='string' name='Region' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Region]' />
              <expression op='[Region (People)]' />
            </expression>
            <first-end-point object-id='Orders_2B8C87C36137489A88C1E3293454D88B' />
            <second-end-point object-id='People_89F52AAD86274906A168B3E3AD9AD72F' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Region (People)]' />
              <expression op='[Region (Returns)]' />
            </expression>
            <first-end-point object-id='People_89F52AAD86274906A168B3E3AD9AD72F' />
            <second-end-point object-id='Returns_AD31254D4E9442D5B76B69908D6D6CF9' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='3.1 Least Profit Making Country '>
      <layout-options>
        <caption>
          <formatted-text>
            <run fontalignment='1' fontcolor='#f28e2b' fontsize='14'>Turkey is the country in EMEA region which has least profit percentage</run>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='11'>.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (global_superstore_2016)' name='federated.12pnq8f1s43vkh1fqzsr101fwrkl' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.12pnq8f1s43vkh1fqzsr101fwrkl'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[pcto:sum:Profit:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[Country]' ordering-type='Field' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[none:Region:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;Central Africa&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;Central Asia&quot;' />
              <groupfilter from='&quot;Eastern Africa&quot;' function='range' level='[none:Region:nk]' to='&quot;Eastern Europe&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;North Africa&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;Northern Europe&quot;' />
              <groupfilter from='&quot;Southeastern Asia&quot;' function='range' level='[none:Region:nk]' to='&quot;Southern Europe&quot;' />
              <groupfilter from='&quot;Western Africa&quot;' function='range' level='[none:Region:nk]' to='&quot;Western Europe&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[Longitude (generated)]' field-type='quantitative' max='18988490.010254204' min='-5584518.6304793032' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[Latitude (generated)]' field-type='quantitative' max='10877071.826152427' min='-1307045.0558556346' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[none:Country:nk]' />
              <color column='[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[pcto:sum:Profit:qk]' />
              <geometry column='[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[Latitude (generated)]</rows>
        <cols>[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{E2930B4B-B8B2-4E7F-821D-CCA9C528B1D2}' />
    </worksheet>
    <worksheet name='Q 10 Time Series (Month wise )'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (global_superstore_2016)' name='federated.12pnq8f1s43vkh1fqzsr101fwrkl' />
          </datasources>
          <datasource-dependencies datasource='federated.12pnq8f1s43vkh1fqzsr101fwrkl'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[sum:Sales:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[sum:Sales:qk]' />
              <text column='[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[sum:Sales:qk]</rows>
        <cols>[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[tmn:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{75D606CB-5D7D-459F-83CD-BEF33889F8DF}' />
    </worksheet>
    <worksheet name='Q 10 Time Series (QTR wise )'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (global_superstore_2016)' name='federated.12pnq8f1s43vkh1fqzsr101fwrkl' />
          </datasources>
          <datasource-dependencies datasource='federated.12pnq8f1s43vkh1fqzsr101fwrkl'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Quarter-Trunc' name='[tqr:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[sum:Sales:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[sum:Sales:qk]' />
              <text column='[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[sum:Sales:qk]</rows>
        <cols>[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[tqr:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{18167472-F1F8-47EE-961D-45B8AC852FCC}' />
    </worksheet>
    <worksheet name='Q 12.1 Forecasting'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book' fontsize='12'>99% Forecasting the data for next 4 years by QTR wise based on Sum of sales .</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (global_superstore_2016)' name='federated.12pnq8f1s43vkh1fqzsr101fwrkl' />
          </datasources>
          <datasource-dependencies datasource='federated.12pnq8f1s43vkh1fqzsr101fwrkl'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' forecast-column-base='[sum:Sales:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Quarter-Trunc' name='[tqr:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[none:Forecast Indicator:nk]' />
              <text column='[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[fVal:sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[fVal:sum:Sales:qk]</rows>
        <cols>[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[tqr:Order Date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='99.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-periods='Year-Trunc' range-size='4' range-type='next' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{13790B38-8EB8-4347-83CF-EE3C7FE5027C}' />
    </worksheet>
    <worksheet name='Q 12.2 Forecasting'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Arial Black' fontsize='14'>  99%  Sales Forecast Estimate for next 4 years. </run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Adobe Ming Std L' fontsize='12'>  99%  Sales Forecast Estimate for the month of September 2018 is 101,871 .</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.0npl5ro0vzsntn152kadd148jqod' />
          </datasources>
          <datasource-dependencies datasource='federated.0npl5ro0vzsntn152kadd148jqod'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' forecast-column-base='[sum:Sales:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0npl5ro0vzsntn152kadd148jqod].[none:Forecast Indicator:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0npl5ro0vzsntn152kadd148jqod].[fVal:sum:Sales:qk]</rows>
        <cols>[federated.0npl5ro0vzsntn152kadd148jqod].[tmn:Order Date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='99.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-periods='Year-Trunc' range-size='4' range-type='next' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{A7028CA4-A28B-407C-B53A-7E1743422E6D}' />
    </worksheet>
    <worksheet name='Q 13 Piechart'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Tableau Book' fontsize='20'>Piechart </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.0npl5ro0vzsntn152kadd148jqod' />
          </datasources>
          <datasource-dependencies datasource='federated.0npl5ro0vzsntn152kadd148jqod'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Count' name='[cnt:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0npl5ro0vzsntn152kadd148jqod].[none:Region:nk]' />
              <wedge-size column='[federated.0npl5ro0vzsntn152kadd148jqod].[sum:Sales:qk]' />
              <size column='[federated.0npl5ro0vzsntn152kadd148jqod].[sum:Sales:qk]' />
              <text column='[federated.0npl5ro0vzsntn152kadd148jqod].[none:Region:nk]' />
              <text column='[federated.0npl5ro0vzsntn152kadd148jqod].[sum:Profit:qk]' />
              <text column='[federated.0npl5ro0vzsntn152kadd148jqod].[cnt:Quantity:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{DB372E08-CF1F-47BE-808B-D24658970647}' />
    </worksheet>
    <worksheet name='Q 4.3 Share of the Top 20 customers based on the sales amount compared to the customers based on profit amounts'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.0npl5ro0vzsntn152kadd148jqod' />
          </datasources>
          <datasource-dependencies datasource='federated.0npl5ro0vzsntn152kadd148jqod'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0npl5ro0vzsntn152kadd148jqod].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0npl5ro0vzsntn152kadd148jqod].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0npl5ro0vzsntn152kadd148jqod].[sum:Sales:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0npl5ro0vzsntn152kadd148jqod].[none:Customer Name:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Category])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Customer Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0npl5ro0vzsntn152kadd148jqod].[none:Customer Name:nk]</column>
            <column>[federated.0npl5ro0vzsntn152kadd148jqod].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0npl5ro0vzsntn152kadd148jqod].[:Measure Names]' />
              <text column='[federated.0npl5ro0vzsntn152kadd148jqod].[sum:Profit:qk]' />
              <text column='[federated.0npl5ro0vzsntn152kadd148jqod].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0npl5ro0vzsntn152kadd148jqod].[Multiple Values]</rows>
        <cols>([federated.0npl5ro0vzsntn152kadd148jqod].[none:Customer Name:nk] / [federated.0npl5ro0vzsntn152kadd148jqod].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{E916F3B6-D6D5-4780-B194-4AD5974CE72B}' />
    </worksheet>
    <worksheet name='Q 5.1 Dual Axis Chart for Profit vs Sales (Sub-Category)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.0npl5ro0vzsntn152kadd148jqod' />
          </datasources>
          <datasource-dependencies datasource='federated.0npl5ro0vzsntn152kadd148jqod'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0npl5ro0vzsntn152kadd148jqod].[sum:Sales:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0npl5ro0vzsntn152kadd148jqod].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0npl5ro0vzsntn152kadd148jqod].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0npl5ro0vzsntn152kadd148jqod].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0npl5ro0vzsntn152kadd148jqod].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0npl5ro0vzsntn152kadd148jqod].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0npl5ro0vzsntn152kadd148jqod].[sum:Profit:qk] + [federated.0npl5ro0vzsntn152kadd148jqod].[sum:Sales:qk])</rows>
        <cols>[federated.0npl5ro0vzsntn152kadd148jqod].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{8189E1BD-5B93-448D-9FBA-86F59FF4D961}' />
    </worksheet>
    <worksheet name='Q 5.2 Dual line chart'>
      <layout-options>
        <caption>
          <formatted-text>
            <run fontcolor='#59a14f' fontname='Calibri,Arial' fontsize='14'>Asia has the highest Sum of Energy usage and Europe has the highest sum of population 65+ i.e. greater than 10</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='World Bank Indicators' name='federated.12sdb1b1b2b5mx1ejqqdw02lpmam' />
          </datasources>
          <datasource-dependencies datasource='federated.12sdb1b1b2b5mx1ejqqdw02lpmam'>
            <column datatype='integer' name='[Energy Usage]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population 65+]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Energy Usage]' derivation='Sum' name='[sum:Energy Usage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population 65+]' derivation='Sum' name='[sum:Population 65+:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[none:Region:nk]'>
            <groupfilter from='&quot;Africa&quot;' function='range' level='[none:Region:nk]' to='&quot;The Americas&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[sum:Population 65+:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[sum:Energy Usage:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='left' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[sum:Population 65+:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='right' />
                <format attr='vertical-align' value='bottom' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[sum:Energy Usage:qk] + [federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[sum:Population 65+:qk])</rows>
        <cols>[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[none:Region:nk]</cols>
      </table>
      <simple-id uuid='{741C05FA-F621-44EE-8DB0-8C1DC34B32FC}' />
    </worksheet>
    <worksheet name='Q 7.3 Percent of total profits do the top 10 customers by Sales '>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.0npl5ro0vzsntn152kadd148jqod' />
          </datasources>
          <datasource-dependencies datasource='federated.0npl5ro0vzsntn152kadd148jqod'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[pcto:sum:Profit:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0npl5ro0vzsntn152kadd148jqod].[none:Customer Name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Profit])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Customer Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0npl5ro0vzsntn152kadd148jqod].[none:Customer Name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Tamara Chand&quot;</bucket>
              <bucket>&quot;Raymond Buch&quot;</bucket>
              <bucket>&quot;Sanjit Chand&quot;</bucket>
              <bucket>&quot;Hunter Lopez&quot;</bucket>
              <bucket>&quot;Adrian Barton&quot;</bucket>
              <bucket>&quot;Tom Ashbrook&quot;</bucket>
              <bucket>&quot;Christopher Martinez&quot;</bucket>
              <bucket>&quot;Keith Dawkins&quot;</bucket>
              <bucket>&quot;Andy Reiter&quot;</bucket>
              <bucket>&quot;Daniel Raglin&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0npl5ro0vzsntn152kadd148jqod].[none:Customer Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0npl5ro0vzsntn152kadd148jqod].[none:Customer Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0npl5ro0vzsntn152kadd148jqod].[pcto:sum:Profit:qk]</rows>
        <cols>[federated.0npl5ro0vzsntn152kadd148jqod].[none:Customer Name:nk]</cols>
      </table>
      <simple-id uuid='{FEEF410D-92AA-4423-ACDB-2860E41DA2C9}' />
    </worksheet>
    <worksheet name='Q 7.4 Customers with lowest overall profit '>
      <layout-options>
        <caption>
          <formatted-text>
            <run bold='true' fontcolor='#1b1b1b' fontname='Tableau Regular' fontsize='14'>Customer with the lowest overall profit is Cindy Stewart and profit ratio is -1.165</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.0npl5ro0vzsntn152kadd148jqod' />
          </datasources>
          <datasource-dependencies datasource='federated.0npl5ro0vzsntn152kadd148jqod'>
            <column caption='Profit Ratio' datatype='real' name='[Calculation_1435522427493490691]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit]) / SUM([Sales])' />
            </column>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[pcto:sum:Profit:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_1435522427493490691]' derivation='User' name='[usr:Calculation_1435522427493490691:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0npl5ro0vzsntn152kadd148jqod].[none:Customer Name:nk]' direction='ASC'>
            <dictionary>
              <bucket>%all%</bucket>
              <bucket>&quot;Cindy Stewart&quot;</bucket>
              <bucket>&quot;Grant Thornton&quot;</bucket>
              <bucket>&quot;Luke Foster&quot;</bucket>
              <bucket>&quot;Sharelle Roach&quot;</bucket>
              <bucket>&quot;Henry Goldwyn&quot;</bucket>
              <bucket>&quot;Nathan Cano&quot;</bucket>
              <bucket>&quot;Sean Braxton&quot;</bucket>
              <bucket>&quot;Sean Miller&quot;</bucket>
              <bucket>&quot;Christine Phan&quot;</bucket>
              <bucket>&quot;Natalie Fritzler&quot;</bucket>
              <bucket>&quot;Becky Martin&quot;</bucket>
              <bucket>&quot;Tracy Blumstein&quot;</bucket>
              <bucket>&quot;Dan Campbell&quot;</bucket>
              <bucket>&quot;David Bremer&quot;</bucket>
              <bucket>&quot;Rose O&apos;Brian&quot;</bucket>
              <bucket>&quot;Tom Prescott&quot;</bucket>
              <bucket>&quot;Zuschuss Carroll&quot;</bucket>
              <bucket>&quot;Victoria Pisteka&quot;</bucket>
              <bucket>&quot;Shahid Shariari&quot;</bucket>
              <bucket>&quot;Olvera Toch&quot;</bucket>
              <bucket>&quot;Victoria Wilson&quot;</bucket>
              <bucket>&quot;Joseph Airdo&quot;</bucket>
              <bucket>&quot;Paul Knutson&quot;</bucket>
              <bucket>&quot;Jim Radford&quot;</bucket>
              <bucket>&quot;Skye Norling&quot;</bucket>
              <bucket>&quot;Barry Gonzalez&quot;</bucket>
              <bucket>&quot;Tanja Norvell&quot;</bucket>
              <bucket>&quot;Stewart Carmichael&quot;</bucket>
              <bucket>&quot;Joseph Holt&quot;</bucket>
              <bucket>&quot;Peter Fuller&quot;</bucket>
              <bucket>&quot;Gary Hansen&quot;</bucket>
              <bucket>&quot;Tracy Hopkins&quot;</bucket>
              <bucket>&quot;Michelle Moray&quot;</bucket>
              <bucket>&quot;Michael Grace&quot;</bucket>
              <bucket>&quot;Ross Baird&quot;</bucket>
              <bucket>&quot;Ryan Akin&quot;</bucket>
              <bucket>&quot;Darrin Van Huff&quot;</bucket>
              <bucket>&quot;Michael Kennedy&quot;</bucket>
              <bucket>&quot;Maureen Gnade&quot;</bucket>
              <bucket>&quot;Charles McCrossin&quot;</bucket>
              <bucket>&quot;Lisa Ryan&quot;</bucket>
              <bucket>&quot;Alan Haines&quot;</bucket>
              <bucket>&quot;Muhammed Yedwab&quot;</bucket>
              <bucket>&quot;Alex Avila&quot;</bucket>
              <bucket>&quot;Noah Childs&quot;</bucket>
              <bucket>&quot;Christopher Schild&quot;</bucket>
              <bucket>&quot;Maureen Fritzler&quot;</bucket>
              <bucket>&quot;Cyma Kinney&quot;</bucket>
              <bucket>&quot;Joni Sundaresam&quot;</bucket>
              <bucket>&quot;Beth Paige&quot;</bucket>
              <bucket>&quot;Linda Southworth&quot;</bucket>
              <bucket>&quot;Sam Craven&quot;</bucket>
              <bucket>&quot;Joy Smith&quot;</bucket>
              <bucket>&quot;Cindy Schnelling&quot;</bucket>
              <bucket>&quot;Elpida Rittenbach&quot;</bucket>
              <bucket>&quot;Troy Staebel&quot;</bucket>
              <bucket>&quot;Barry Franz&quot;</bucket>
              <bucket>&quot;Joni Blumstein&quot;</bucket>
              <bucket>&quot;Ann Blume&quot;</bucket>
              <bucket>&quot;Stefania Perrino&quot;</bucket>
              <bucket>&quot;Giulietta Weimer&quot;</bucket>
              <bucket>&quot;Dorothy Wardle&quot;</bucket>
              <bucket>&quot;John Dryer&quot;</bucket>
              <bucket>&quot;Vivek Sundaresam&quot;</bucket>
              <bucket>&quot;David Flashing&quot;</bucket>
              <bucket>&quot;Aaron Smayling&quot;</bucket>
              <bucket>&quot;Thea Hudgings&quot;</bucket>
              <bucket>&quot;Matthew Clasen&quot;</bucket>
              <bucket>&quot;Anna Gayman&quot;</bucket>
              <bucket>&quot;Lisa Hazard&quot;</bucket>
              <bucket>&quot;Maribeth Dona&quot;</bucket>
              <bucket>&quot;Susan MacKendrick&quot;</bucket>
              <bucket>&quot;Noel Staavos&quot;</bucket>
              <bucket>&quot;Valerie Takahito&quot;</bucket>
              <bucket>&quot;Alex Russell&quot;</bucket>
              <bucket>&quot;Jack Lebron&quot;</bucket>
              <bucket>&quot;Carol Darley&quot;</bucket>
              <bucket>&quot;Benjamin Patterson&quot;</bucket>
              <bucket>&quot;Amy Hunt&quot;</bucket>
              <bucket>&quot;Lena Cacioppo&quot;</bucket>
              <bucket>&quot;Toby Swindell&quot;</bucket>
              <bucket>&quot;Pauline Chand&quot;</bucket>
              <bucket>&quot;Kelly Lampkin&quot;</bucket>
              <bucket>&quot;Jill Stevenson&quot;</bucket>
              <bucket>&quot;Randy Bradley&quot;</bucket>
              <bucket>&quot;Art Foster&quot;</bucket>
              <bucket>&quot;Andy Gerbode&quot;</bucket>
              <bucket>&quot;Katherine Nockton&quot;</bucket>
              <bucket>&quot;Shahid Hopkins&quot;</bucket>
              <bucket>&quot;Troy Blackwell&quot;</bucket>
              <bucket>&quot;Harold Dahlen&quot;</bucket>
              <bucket>&quot;Thea Hendricks&quot;</bucket>
              <bucket>&quot;Pamela Stobb&quot;</bucket>
              <bucket>&quot;Eleni McCrary&quot;</bucket>
              <bucket>&quot;Henia Zydlo&quot;</bucket>
              <bucket>&quot;Carlos Soltero&quot;</bucket>
              <bucket>&quot;Sheri Gordon&quot;</bucket>
              <bucket>&quot;Sibella Parks&quot;</bucket>
              <bucket>&quot;Bruce Stewart&quot;</bucket>
              <bucket>&quot;Darren Koutras&quot;</bucket>
              <bucket>&quot;Arthur Wiediger&quot;</bucket>
              <bucket>&quot;Allen Rosenblatt&quot;</bucket>
              <bucket>&quot;Justin Hirsh&quot;</bucket>
              <bucket>&quot;Vicky Freymann&quot;</bucket>
              <bucket>&quot;Gene Hale&quot;</bucket>
              <bucket>&quot;Erica Hernandez&quot;</bucket>
              <bucket>&quot;Mike Gockenbach&quot;</bucket>
              <bucket>&quot;David Wiener&quot;</bucket>
              <bucket>&quot;Michael Oakman&quot;</bucket>
              <bucket>&quot;Sean O&apos;Donnell&quot;</bucket>
              <bucket>&quot;Edward Becker&quot;</bucket>
              <bucket>&quot;Bobby Trafton&quot;</bucket>
              <bucket>&quot;Maris LaWare&quot;</bucket>
              <bucket>&quot;Sung Shariari&quot;</bucket>
              <bucket>&quot;Ralph Ritter&quot;</bucket>
              <bucket>&quot;Mick Crebagga&quot;</bucket>
              <bucket>&quot;Berenike Kampe&quot;</bucket>
              <bucket>&quot;Alyssa Crouse&quot;</bucket>
              <bucket>&quot;Barry Weirich&quot;</bucket>
              <bucket>&quot;Jim Sink&quot;</bucket>
              <bucket>&quot;Dionis Lloyd&quot;</bucket>
              <bucket>&quot;Erin Ashbrook&quot;</bucket>
              <bucket>&quot;Vivek Grady&quot;</bucket>
              <bucket>&quot;Laurel Beltran&quot;</bucket>
              <bucket>&quot;Phillina Ober&quot;</bucket>
              <bucket>&quot;Liz MacKendrick&quot;</bucket>
              <bucket>&quot;Carlos Meador&quot;</bucket>
              <bucket>&quot;David Philippe&quot;</bucket>
              <bucket>&quot;Denny Ordway&quot;</bucket>
              <bucket>&quot;Joni Wasserman&quot;</bucket>
              <bucket>&quot;Anna Chung&quot;</bucket>
              <bucket>&quot;Sally Matthias&quot;</bucket>
              <bucket>&quot;Nick Radford&quot;</bucket>
              <bucket>&quot;Jennifer Halladay&quot;</bucket>
              <bucket>&quot;Michelle Tran&quot;</bucket>
              <bucket>&quot;Sarah Jordon&quot;</bucket>
              <bucket>&quot;Pete Takahito&quot;</bucket>
              <bucket>&quot;Scot Wooten&quot;</bucket>
              <bucket>&quot;Jeremy Farry&quot;</bucket>
              <bucket>&quot;Bill Stewart&quot;</bucket>
              <bucket>&quot;Herbert Flentye&quot;</bucket>
              <bucket>&quot;Jonathan Howell&quot;</bucket>
              <bucket>&quot;Neola Schneider&quot;</bucket>
              <bucket>&quot;Anthony Garverick&quot;</bucket>
              <bucket>&quot;Guy Thornton&quot;</bucket>
              <bucket>&quot;Odella Nelson&quot;</bucket>
              <bucket>&quot;Greg Hansen&quot;</bucket>
              <bucket>&quot;Alex Grayson&quot;</bucket>
              <bucket>&quot;Michael Dominguez&quot;</bucket>
              <bucket>&quot;Susan Gilcrest&quot;</bucket>
              <bucket>&quot;Thais Sissman&quot;</bucket>
              <bucket>&quot;Adrian Hane&quot;</bucket>
              <bucket>&quot;Mitch Gastineau&quot;</bucket>
              <bucket>&quot;Paul Lucas&quot;</bucket>
              <bucket>&quot;Jasper Cacioppo&quot;</bucket>
              <bucket>&quot;Karen Seio&quot;</bucket>
              <bucket>&quot;Ritsa Hightower&quot;</bucket>
              <bucket>&quot;Lela Donovan&quot;</bucket>
              <bucket>&quot;Eric Barreto&quot;</bucket>
              <bucket>&quot;Carl Jackson&quot;</bucket>
              <bucket>&quot;Jason Gross&quot;</bucket>
              <bucket>&quot;Daniel Lacy&quot;</bucket>
              <bucket>&quot;Ricardo Emerson&quot;</bucket>
              <bucket>&quot;George Bell&quot;</bucket>
              <bucket>&quot;Roy Skaria&quot;</bucket>
              <bucket>&quot;Ryan Crowe&quot;</bucket>
              <bucket>&quot;Tony Sayre&quot;</bucket>
              <bucket>&quot;Barry Blumstein&quot;</bucket>
              <bucket>&quot;Anthony O&apos;Donnell&quot;</bucket>
              <bucket>&quot;Larry Hughes&quot;</bucket>
              <bucket>&quot;Greg Guthrie&quot;</bucket>
              <bucket>&quot;Ed Braxton&quot;</bucket>
              <bucket>&quot;Susan Pistek&quot;</bucket>
              <bucket>&quot;Larry Blacks&quot;</bucket>
              <bucket>&quot;Melanie Seite&quot;</bucket>
              <bucket>&quot;Janet Martin&quot;</bucket>
              <bucket>&quot;Evan Minnotte&quot;</bucket>
              <bucket>&quot;Adrian Shami&quot;</bucket>
              <bucket>&quot;Phillip Breyer&quot;</bucket>
              <bucket>&quot;Fred Wasserman&quot;</bucket>
              <bucket>&quot;Nicole Brennan&quot;</bucket>
              <bucket>&quot;Beth Fritzler&quot;</bucket>
              <bucket>&quot;Maureen Gastineau&quot;</bucket>
              <bucket>&quot;John Huston&quot;</bucket>
              <bucket>&quot;Joy Daniels&quot;</bucket>
              <bucket>&quot;Ed Ludwig&quot;</bucket>
              <bucket>&quot;Roland Murray&quot;</bucket>
              <bucket>&quot;Marc Harrigan&quot;</bucket>
              <bucket>&quot;Sung Chung&quot;</bucket>
              <bucket>&quot;Guy Phonely&quot;</bucket>
              <bucket>&quot;Laurel Workman&quot;</bucket>
              <bucket>&quot;Anemone Ratner&quot;</bucket>
              <bucket>&quot;Alan Shonely&quot;</bucket>
              <bucket>&quot;Clay Cheatham&quot;</bucket>
              <bucket>&quot;Joel Jenkins&quot;</bucket>
              <bucket>&quot;Russell D&apos;Ascenzo&quot;</bucket>
              <bucket>&quot;Greg Matthias&quot;</bucket>
              <bucket>&quot;Dorothy Dickinson&quot;</bucket>
              <bucket>&quot;Brad Norvell&quot;</bucket>
              <bucket>&quot;Patrick O&apos;Brill&quot;</bucket>
              <bucket>&quot;Lycoris Saunders&quot;</bucket>
              <bucket>&quot;Erin Mull&quot;</bucket>
              <bucket>&quot;Muhammed Lee&quot;</bucket>
              <bucket>&quot;Andrew Roberts&quot;</bucket>
              <bucket>&quot;Patricia Hirasaki&quot;</bucket>
              <bucket>&quot;Tom Stivers&quot;</bucket>
              <bucket>&quot;Karl Braun&quot;</bucket>
              <bucket>&quot;Stuart Calhoun&quot;</bucket>
              <bucket>&quot;Eric Hoffmann&quot;</bucket>
              <bucket>&quot;Janet Lee&quot;</bucket>
              <bucket>&quot;Joe Kamberova&quot;</bucket>
              <bucket>&quot;Michael Stewart&quot;</bucket>
              <bucket>&quot;Jason Klamczynski&quot;</bucket>
              <bucket>&quot;Dianna Arnett&quot;</bucket>
              <bucket>&quot;Muhammed MacIntyre&quot;</bucket>
              <bucket>&quot;Larry Tron&quot;</bucket>
              <bucket>&quot;Aleksandra Gannaway&quot;</bucket>
              <bucket>&quot;Mary O&apos;Rourke&quot;</bucket>
              <bucket>&quot;Bobby Odegard&quot;</bucket>
              <bucket>&quot;Rachel Payne&quot;</bucket>
              <bucket>&quot;Astrea Jones&quot;</bucket>
              <bucket>&quot;Craig Yedwab&quot;</bucket>
              <bucket>&quot;Mark Haberlin&quot;</bucket>
              <bucket>&quot;Roy Collins&quot;</bucket>
              <bucket>&quot;Chuck Magee&quot;</bucket>
              <bucket>&quot;Adam Shillingsburg&quot;</bucket>
              <bucket>&quot;Anthony Witt&quot;</bucket>
              <bucket>&quot;Shirley Jackson&quot;</bucket>
              <bucket>&quot;Steven Ward&quot;</bucket>
              <bucket>&quot;Allen Goldenen&quot;</bucket>
              <bucket>&quot;Don Weiss&quot;</bucket>
              <bucket>&quot;Robert Barroso&quot;</bucket>
              <bucket>&quot;Clay Rozendal&quot;</bucket>
              <bucket>&quot;Rob Beeghly&quot;</bucket>
              <bucket>&quot;Max Engle&quot;</bucket>
              <bucket>&quot;Michael Moore&quot;</bucket>
              <bucket>&quot;Cyra Reiten&quot;</bucket>
              <bucket>&quot;Angele Hood&quot;</bucket>
              <bucket>&quot;MaryBeth Skach&quot;</bucket>
              <bucket>&quot;Shui Tom&quot;</bucket>
              <bucket>&quot;Maria Zettner&quot;</bucket>
              <bucket>&quot;Neil Französisch&quot;</bucket>
              <bucket>&quot;Catherine Glotzbach&quot;</bucket>
              <bucket>&quot;Hilary Holden&quot;</bucket>
              <bucket>&quot;Liz Carlisle&quot;</bucket>
              <bucket>&quot;Tamara Dahlen&quot;</bucket>
              <bucket>&quot;Khloe Miller&quot;</bucket>
              <bucket>&quot;Charlotte Melton&quot;</bucket>
              <bucket>&quot;Tiffany House&quot;</bucket>
              <bucket>&quot;Tim Taslimi&quot;</bucket>
              <bucket>&quot;Brendan Murry&quot;</bucket>
              <bucket>&quot;Sean Wendt&quot;</bucket>
              <bucket>&quot;Eugene Hildebrand&quot;</bucket>
              <bucket>&quot;Erin Creighton&quot;</bucket>
              <bucket>&quot;Eileen Kiefer&quot;</bucket>
              <bucket>&quot;Jason Fortune-&quot;</bucket>
              <bucket>&quot;Heather Jas&quot;</bucket>
              <bucket>&quot;Cynthia Voltz&quot;</bucket>
              <bucket>&quot;Helen Andreada&quot;</bucket>
              <bucket>&quot;Sonia Cooley&quot;</bucket>
              <bucket>&quot;Alyssa Tate&quot;</bucket>
              <bucket>&quot;Eric Murdock&quot;</bucket>
              <bucket>&quot;Andy Yotov&quot;</bucket>
              <bucket>&quot;Emily Grady&quot;</bucket>
              <bucket>&quot;Cari Schnelling&quot;</bucket>
              <bucket>&quot;Susan Vittorini&quot;</bucket>
              <bucket>&quot;Michelle Ellison&quot;</bucket>
              <bucket>&quot;Brooke Gillingham&quot;</bucket>
              <bucket>&quot;Kelly Williams&quot;</bucket>
              <bucket>&quot;Jocasta Rupert&quot;</bucket>
              <bucket>&quot;Dario Medina&quot;</bucket>
              <bucket>&quot;Dorothy Badders&quot;</bucket>
              <bucket>&quot;Liz Pelletier&quot;</bucket>
              <bucket>&quot;Bart Folk&quot;</bucket>
              <bucket>&quot;Julia Dunbar&quot;</bucket>
              <bucket>&quot;Jill Matthias&quot;</bucket>
              <bucket>&quot;Charles Sheldon&quot;</bucket>
              <bucket>&quot;Kean Nguyen&quot;</bucket>
              <bucket>&quot;Vivian Mathis&quot;</bucket>
              <bucket>&quot;Duane Huffman&quot;</bucket>
              <bucket>&quot;Brendan Dodson&quot;</bucket>
              <bucket>&quot;Jim Mitchum&quot;</bucket>
              <bucket>&quot;Henry MacAllister&quot;</bucket>
              <bucket>&quot;Nona Balk&quot;</bucket>
              <bucket>&quot;Mick Brown&quot;</bucket>
              <bucket>&quot;Tony Chapman&quot;</bucket>
              <bucket>&quot;Bruce Geld&quot;</bucket>
              <bucket>&quot;Neil Knudson&quot;</bucket>
              <bucket>&quot;Mike Caudle&quot;</bucket>
              <bucket>&quot;Matt Hagelstein&quot;</bucket>
              <bucket>&quot;Julie Kriz&quot;</bucket>
              <bucket>&quot;Joy Bell-&quot;</bucket>
              <bucket>&quot;Brad Thomas&quot;</bucket>
              <bucket>&quot;Aaron Bergman&quot;</bucket>
              <bucket>&quot;Debra Catini&quot;</bucket>
              <bucket>&quot;Sonia Sunley&quot;</bucket>
              <bucket>&quot;Ann Steele&quot;</bucket>
              <bucket>&quot;Guy Armstrong&quot;</bucket>
              <bucket>&quot;Patrick Gardner&quot;</bucket>
              <bucket>&quot;Bryan Mills&quot;</bucket>
              <bucket>&quot;Michelle Lonsdale&quot;</bucket>
              <bucket>&quot;Brad Eason&quot;</bucket>
              <bucket>&quot;Tracy Poddar&quot;</bucket>
              <bucket>&quot;Bryan Davis&quot;</bucket>
              <bucket>&quot;Chloris Kastensmidt&quot;</bucket>
              <bucket>&quot;Brian Derr&quot;</bucket>
              <bucket>&quot;Vivek Gonzalez&quot;</bucket>
              <bucket>&quot;Chad Sievert&quot;</bucket>
              <bucket>&quot;Sanjit Jacobs&quot;</bucket>
              <bucket>&quot;Corey Roper&quot;</bucket>
              <bucket>&quot;Emily Phan&quot;</bucket>
              <bucket>&quot;Harry Greene&quot;</bucket>
              <bucket>&quot;Lori Olson&quot;</bucket>
              <bucket>&quot;Cassandra Brandow&quot;</bucket>
              <bucket>&quot;Erica Hackney&quot;</bucket>
              <bucket>&quot;Anthony Jacobs&quot;</bucket>
              <bucket>&quot;Julia West&quot;</bucket>
              <bucket>&quot;Cindy Chapman&quot;</bucket>
              <bucket>&quot;Annie Zypern&quot;</bucket>
              <bucket>&quot;Jennifer Braxton&quot;</bucket>
              <bucket>&quot;Chuck Sachs&quot;</bucket>
              <bucket>&quot;Kimberly Carter&quot;</bucket>
              <bucket>&quot;Sarah Bern&quot;</bucket>
              <bucket>&quot;Paul MacIntyre&quot;</bucket>
              <bucket>&quot;Carol Triggs&quot;</bucket>
              <bucket>&quot;Laurel Elliston&quot;</bucket>
              <bucket>&quot;Erica Bern&quot;</bucket>
              <bucket>&quot;Mathew Reese&quot;</bucket>
              <bucket>&quot;David Smith&quot;</bucket>
              <bucket>&quot;Jesus Ocampo&quot;</bucket>
              <bucket>&quot;Sally Knutson&quot;</bucket>
              <bucket>&quot;Meg O&apos;Connel&quot;</bucket>
              <bucket>&quot;Claire Gute&quot;</bucket>
              <bucket>&quot;Dean Braden&quot;</bucket>
              <bucket>&quot;Mick Hernandez&quot;</bucket>
              <bucket>&quot;Michael Granlund&quot;</bucket>
              <bucket>&quot;Rob Haberlin&quot;</bucket>
              <bucket>&quot;Dorris liebe&quot;</bucket>
              <bucket>&quot;Craig Molinari&quot;</bucket>
              <bucket>&quot;Duane Benoit&quot;</bucket>
              <bucket>&quot;Magdelene Morse&quot;</bucket>
              <bucket>&quot;Thomas Brumley&quot;</bucket>
              <bucket>&quot;Eugene Barchas&quot;</bucket>
              <bucket>&quot;Cari Sayre&quot;</bucket>
              <bucket>&quot;Hallie Redmond&quot;</bucket>
              <bucket>&quot;Craig Carreira&quot;</bucket>
              <bucket>&quot;Greg Maxwell&quot;</bucket>
              <bucket>&quot;Mark Van Huff&quot;</bucket>
              <bucket>&quot;Fred McMath&quot;</bucket>
              <bucket>&quot;Parhena Norris&quot;</bucket>
              <bucket>&quot;Liz Willingham&quot;</bucket>
              <bucket>&quot;Darrin Sayre&quot;</bucket>
              <bucket>&quot;Bryan Spruell&quot;</bucket>
              <bucket>&quot;Kean Thornton&quot;</bucket>
              <bucket>&quot;Alice McCarthy&quot;</bucket>
              <bucket>&quot;Cathy Hwang&quot;</bucket>
              <bucket>&quot;Matt Connell&quot;</bucket>
              <bucket>&quot;Philip Fox&quot;</bucket>
              <bucket>&quot;Frank Merwin&quot;</bucket>
              <bucket>&quot;Paul Stevenson&quot;</bucket>
              <bucket>&quot;Stuart Van&quot;</bucket>
              <bucket>&quot;Don Miller&quot;</bucket>
              <bucket>&quot;Shirley Schmidt&quot;</bucket>
              <bucket>&quot;Jennifer Jackson&quot;</bucket>
              <bucket>&quot;Julia Barnett&quot;</bucket>
              <bucket>&quot;Julie Creighton&quot;</bucket>
              <bucket>&quot;Jas O&apos;Carroll&quot;</bucket>
              <bucket>&quot;Cynthia Arntzen&quot;</bucket>
              <bucket>&quot;Victor Preis&quot;</bucket>
              <bucket>&quot;Corey-Lock&quot;</bucket>
              <bucket>&quot;John Grady&quot;</bucket>
              <bucket>&quot;Brian DeCherney&quot;</bucket>
              <bucket>&quot;Roger Demir&quot;</bucket>
              <bucket>&quot;Chad Cunningham&quot;</bucket>
              <bucket>&quot;Richard Eichhorn&quot;</bucket>
              <bucket>&quot;James Lanier&quot;</bucket>
              <bucket>&quot;Barry Pond&quot;</bucket>
              <bucket>&quot;Dean Katz&quot;</bucket>
              <bucket>&quot;Matt Collins&quot;</bucket>
              <bucket>&quot;Cathy Armstrong&quot;</bucket>
              <bucket>&quot;Maria Bertelson&quot;</bucket>
              <bucket>&quot;Darren Budd&quot;</bucket>
              <bucket>&quot;Candace McMahon&quot;</bucket>
              <bucket>&quot;Frank Olsen&quot;</bucket>
              <bucket>&quot;Nathan Gelder&quot;</bucket>
              <bucket>&quot;Tracy Collins&quot;</bucket>
              <bucket>&quot;Peter Bühler&quot;</bucket>
              <bucket>&quot;Toby Ritter&quot;</bucket>
              <bucket>&quot;Alan Barnes&quot;</bucket>
              <bucket>&quot;Trudy Schmidt&quot;</bucket>
              <bucket>&quot;Joel Eaton&quot;</bucket>
              <bucket>&quot;Denise Leinenbach&quot;</bucket>
              <bucket>&quot;Tracy Zic&quot;</bucket>
              <bucket>&quot;Pete Armstrong&quot;</bucket>
              <bucket>&quot;Mike Pelletier&quot;</bucket>
              <bucket>&quot;Barbara Fisher&quot;</bucket>
              <bucket>&quot;Mike Kennedy&quot;</bucket>
              <bucket>&quot;Sandra Flanagan&quot;</bucket>
              <bucket>&quot;John Lee&quot;</bucket>
              <bucket>&quot;Craig Leslie&quot;</bucket>
              <bucket>&quot;Sean Christensen&quot;</bucket>
              <bucket>&quot;Patrick Bzostek&quot;</bucket>
              <bucket>&quot;Giulietta Dortch&quot;</bucket>
              <bucket>&quot;Logan Currie&quot;</bucket>
              <bucket>&quot;Christina DeMoss&quot;</bucket>
              <bucket>&quot;Kelly Andreada&quot;</bucket>
              <bucket>&quot;Shahid Collister&quot;</bucket>
              <bucket>&quot;Maya Herman&quot;</bucket>
              <bucket>&quot;Brian Stugart&quot;</bucket>
              <bucket>&quot;Eudokia Martin&quot;</bucket>
              <bucket>&quot;Darren Powers&quot;</bucket>
              <bucket>&quot;Evan Henry&quot;</bucket>
              <bucket>&quot;Roger Barcio&quot;</bucket>
              <bucket>&quot;Luke Schmidt&quot;</bucket>
              <bucket>&quot;Christine Abelman&quot;</bucket>
              <bucket>&quot;Erin Smith&quot;</bucket>
              <bucket>&quot;Ben Wallace&quot;</bucket>
              <bucket>&quot;Maurice Satty&quot;</bucket>
              <bucket>&quot;Patrick Ryan&quot;</bucket>
              <bucket>&quot;Zuschuss Donatelli&quot;</bucket>
              <bucket>&quot;Filia McAdams&quot;</bucket>
              <bucket>&quot;David Kendrick&quot;</bucket>
              <bucket>&quot;Becky Castell&quot;</bucket>
              <bucket>&quot;Kean Takahito&quot;</bucket>
              <bucket>&quot;Bill Tyler&quot;</bucket>
              <bucket>&quot;Tim Brockman&quot;</bucket>
              <bucket>&quot;Stefanie Holloman&quot;</bucket>
              <bucket>&quot;Theresa Swint&quot;</bucket>
              <bucket>&quot;Christine Kargatis&quot;</bucket>
              <bucket>&quot;Emily Burns&quot;</bucket>
              <bucket>&quot;Lindsay Shagiari&quot;</bucket>
              <bucket>&quot;Alejandro Ballentine&quot;</bucket>
              <bucket>&quot;Theresa Coyne&quot;</bucket>
              <bucket>&quot;Stephanie Phelps&quot;</bucket>
              <bucket>&quot;Todd Boyes&quot;</bucket>
              <bucket>&quot;Ralph Kennedy&quot;</bucket>
              <bucket>&quot;Helen Abelman&quot;</bucket>
              <bucket>&quot;Christy Brittain&quot;</bucket>
              <bucket>&quot;Pamela Coakley&quot;</bucket>
              <bucket>&quot;Mike Vittorini&quot;</bucket>
              <bucket>&quot;Katrina Bavinger&quot;</bucket>
              <bucket>&quot;Harold Engle&quot;</bucket>
              <bucket>&quot;Jeremy Ellison&quot;</bucket>
              <bucket>&quot;Allen Armold&quot;</bucket>
              <bucket>&quot;Thomas Thornton&quot;</bucket>
              <bucket>&quot;Bill Overfelt&quot;</bucket>
              <bucket>&quot;John Castell&quot;</bucket>
              <bucket>&quot;Christina Anderson&quot;</bucket>
              <bucket>&quot;Roy Französisch&quot;</bucket>
              <bucket>&quot;Philip Brown&quot;</bucket>
              <bucket>&quot;Michelle Arnett&quot;</bucket>
              <bucket>&quot;Maxwell Schwartz&quot;</bucket>
              <bucket>&quot;Adam Hart&quot;</bucket>
              <bucket>&quot;Evan Bailliet&quot;</bucket>
              <bucket>&quot;Anne Pryor&quot;</bucket>
              <bucket>&quot;Sarah Foster&quot;</bucket>
              <bucket>&quot;Linda Cazamias&quot;</bucket>
              <bucket>&quot;Delfina Latchford&quot;</bucket>
              <bucket>&quot;Matt Collister&quot;</bucket>
              <bucket>&quot;Michael Nguyen&quot;</bucket>
              <bucket>&quot;Dennis Bolton&quot;</bucket>
              <bucket>&quot;Tony Molinari&quot;</bucket>
              <bucket>&quot;Ken Brennan&quot;</bucket>
              <bucket>&quot;Doug O&apos;Connell&quot;</bucket>
              <bucket>&quot;Andrew Gjertsen&quot;</bucket>
              <bucket>&quot;Ann Chong&quot;</bucket>
              <bucket>&quot;Lindsay Castell&quot;</bucket>
              <bucket>&quot;Barry Französisch&quot;</bucket>
              <bucket>&quot;Russell Applegate&quot;</bucket>
              <bucket>&quot;Craig Reiter&quot;</bucket>
              <bucket>&quot;Julie Prescott&quot;</bucket>
              <bucket>&quot;Nat Gilpin&quot;</bucket>
              <bucket>&quot;Aimee Bixby&quot;</bucket>
              <bucket>&quot;Benjamin Venier&quot;</bucket>
              <bucket>&quot;Logan Haushalter&quot;</bucket>
              <bucket>&quot;Art Ferguson&quot;</bucket>
              <bucket>&quot;Ross DeVincentis&quot;</bucket>
              <bucket>&quot;Maribeth Yedwab&quot;</bucket>
              <bucket>&quot;Ivan Gibson&quot;</bucket>
              <bucket>&quot;Liz Thompson&quot;</bucket>
              <bucket>&quot;Dan Lawera&quot;</bucket>
              <bucket>&quot;Carl Ludwig&quot;</bucket>
              <bucket>&quot;Katherine Ducich&quot;</bucket>
              <bucket>&quot;Kristina Nunn&quot;</bucket>
              <bucket>&quot;Jay Fein&quot;</bucket>
              <bucket>&quot;Jay Kimmel&quot;</bucket>
              <bucket>&quot;Corey Catlett&quot;</bucket>
              <bucket>&quot;Saphhira Shifley&quot;</bucket>
              <bucket>&quot;Scott Williamson&quot;</bucket>
              <bucket>&quot;Dean percer&quot;</bucket>
              <bucket>&quot;Bruce Degenhardt&quot;</bucket>
              <bucket>&quot;Paul Gonzalez&quot;</bucket>
              <bucket>&quot;Liz Preis&quot;</bucket>
              <bucket>&quot;Bradley Nguyen&quot;</bucket>
              <bucket>&quot;Matthew Grinstein&quot;</bucket>
              <bucket>&quot;Nancy Lomonaco&quot;</bucket>
              <bucket>&quot;Arthur Gainer&quot;</bucket>
              <bucket>&quot;Don Jones&quot;</bucket>
              <bucket>&quot;Gary McGarr&quot;</bucket>
              <bucket>&quot;Lynn Smith&quot;</bucket>
              <bucket>&quot;Dianna Vittorini&quot;</bucket>
              <bucket>&quot;Natalie DeCherney&quot;</bucket>
              <bucket>&quot;Alejandro Savely&quot;</bucket>
              <bucket>&quot;Jessica Myrick&quot;</bucket>
              <bucket>&quot;Georgia Rosenberg&quot;</bucket>
              <bucket>&quot;Ben Peterman&quot;</bucket>
              <bucket>&quot;Chris McAfee&quot;</bucket>
              <bucket>&quot;Aaron Hawkins&quot;</bucket>
              <bucket>&quot;Trudy Glocke&quot;</bucket>
              <bucket>&quot;Sam Zeldin&quot;</bucket>
              <bucket>&quot;Steve Carroll&quot;</bucket>
              <bucket>&quot;Carl Weiss&quot;</bucket>
              <bucket>&quot;Victoria Brennan&quot;</bucket>
              <bucket>&quot;Harold Pawlan&quot;</bucket>
              <bucket>&quot;Dennis Kane&quot;</bucket>
              <bucket>&quot;Shaun Chance&quot;</bucket>
              <bucket>&quot;Trudy Brown&quot;</bucket>
              <bucket>&quot;Brendan Sweed&quot;</bucket>
              <bucket>&quot;Ed Jacobs&quot;</bucket>
              <bucket>&quot;Nicole Fjeld&quot;</bucket>
              <bucket>&quot;Ted Butterfield&quot;</bucket>
              <bucket>&quot;Raymond Messe&quot;</bucket>
              <bucket>&quot;Charles Crestani&quot;</bucket>
              <bucket>&quot;Chris Cortes&quot;</bucket>
              <bucket>&quot;Frank Gastineau&quot;</bucket>
              <bucket>&quot;Katrina Edelman&quot;</bucket>
              <bucket>&quot;Nick Zandusky&quot;</bucket>
              <bucket>&quot;Cynthia Delaney&quot;</bucket>
              <bucket>&quot;Frank Preis&quot;</bucket>
              <bucket>&quot;Chad McGuire&quot;</bucket>
              <bucket>&quot;Bradley Talbott&quot;</bucket>
              <bucket>&quot;Max Ludwig&quot;</bucket>
              <bucket>&quot;Beth Thompson&quot;</bucket>
              <bucket>&quot;Chuck Clark&quot;</bucket>
              <bucket>&quot;Carlos Daly&quot;</bucket>
              <bucket>&quot;Cathy Prescott&quot;</bucket>
              <bucket>&quot;Jennifer Patt&quot;</bucket>
              <bucket>&quot;Daniel Byrd&quot;</bucket>
              <bucket>&quot;Bart Pistole&quot;</bucket>
              <bucket>&quot;Paul Van Hugh&quot;</bucket>
              <bucket>&quot;Andrew Allen&quot;</bucket>
              <bucket>&quot;Patrick O&apos;Donnell&quot;</bucket>
              <bucket>&quot;Doug Bickford&quot;</bucket>
              <bucket>&quot;Denny Blanton&quot;</bucket>
              <bucket>&quot;Scot Coram&quot;</bucket>
              <bucket>&quot;Gene McClure&quot;</bucket>
              <bucket>&quot;Patrick Jones&quot;</bucket>
              <bucket>&quot;Neil Ducich&quot;</bucket>
              <bucket>&quot;Brian Thompson&quot;</bucket>
              <bucket>&quot;Eva Jacobs&quot;</bucket>
              <bucket>&quot;Justin Ritter&quot;</bucket>
              <bucket>&quot;Katharine Harms&quot;</bucket>
              <bucket>&quot;Ruben Dartt&quot;</bucket>
              <bucket>&quot;Monica Federle&quot;</bucket>
              <bucket>&quot;Marc Crier&quot;</bucket>
              <bucket>&quot;Speros Goranitis&quot;</bucket>
              <bucket>&quot;Deanra Eno&quot;</bucket>
              <bucket>&quot;Resi Pölking&quot;</bucket>
              <bucket>&quot;Dave Brooks&quot;</bucket>
              <bucket>&quot;Michelle Huthwaite&quot;</bucket>
              <bucket>&quot;Richard Bierner&quot;</bucket>
              <bucket>&quot;Rick Duston&quot;</bucket>
              <bucket>&quot;Steve Nguyen&quot;</bucket>
              <bucket>&quot;Denny Joy&quot;</bucket>
              <bucket>&quot;Mark Hamilton&quot;</bucket>
              <bucket>&quot;Stewart Visinsky&quot;</bucket>
              <bucket>&quot;Rob Lucas&quot;</bucket>
              <bucket>&quot;Toby Braunhardt&quot;</bucket>
              <bucket>&quot;Christina VanderZanden&quot;</bucket>
              <bucket>&quot;Anthony Rawles&quot;</bucket>
              <bucket>&quot;Edward Nazzal&quot;</bucket>
              <bucket>&quot;Clytie Kelty&quot;</bucket>
              <bucket>&quot;Janet Molinari&quot;</bucket>
              <bucket>&quot;Jenna Caffey&quot;</bucket>
              <bucket>&quot;Meg Tillman&quot;</bucket>
              <bucket>&quot;Valerie Mitchum&quot;</bucket>
              <bucket>&quot;Nora Pelletier&quot;</bucket>
              <bucket>&quot;Nora Paige&quot;</bucket>
              <bucket>&quot;Irene Maddox&quot;</bucket>
              <bucket>&quot;Frank Atkinson&quot;</bucket>
              <bucket>&quot;Ashley Jarboe&quot;</bucket>
              <bucket>&quot;Benjamin Farhat&quot;</bucket>
              <bucket>&quot;Lena Hernandez&quot;</bucket>
              <bucket>&quot;Peter McVee&quot;</bucket>
              <bucket>&quot;Sara Luxemburg&quot;</bucket>
              <bucket>&quot;Katherine Hughes&quot;</bucket>
              <bucket>&quot;Lena Radford&quot;</bucket>
              <bucket>&quot;Dave Kipp&quot;</bucket>
              <bucket>&quot;Ken Dana&quot;</bucket>
              <bucket>&quot;Sylvia Foulston&quot;</bucket>
              <bucket>&quot;Duane Noonan&quot;</bucket>
              <bucket>&quot;Ralph Arnett&quot;</bucket>
              <bucket>&quot;Lisa DeCherney&quot;</bucket>
              <bucket>&quot;Sally Hughsby&quot;</bucket>
              <bucket>&quot;Lauren Leatherbury&quot;</bucket>
              <bucket>&quot;Deirdre Greer&quot;</bucket>
              <bucket>&quot;Dave Poirier&quot;</bucket>
              <bucket>&quot;Rick Hansen&quot;</bucket>
              <bucket>&quot;John Stevenson&quot;</bucket>
              <bucket>&quot;Sung Pak&quot;</bucket>
              <bucket>&quot;Sandra Glassco&quot;</bucket>
              <bucket>&quot;Tamara Manning&quot;</bucket>
              <bucket>&quot;Jamie Frazer&quot;</bucket>
              <bucket>&quot;Arthur Prichep&quot;</bucket>
              <bucket>&quot;Ken Black&quot;</bucket>
              <bucket>&quot;Nat Carroll&quot;</bucket>
              <bucket>&quot;Jack O&apos;Briant&quot;</bucket>
              <bucket>&quot;Suzanne McNair&quot;</bucket>
              <bucket>&quot;Juliana Krohn&quot;</bucket>
              <bucket>&quot;Phillip Flathmann&quot;</bucket>
              <bucket>&quot;Jeremy Lonsdale&quot;</bucket>
              <bucket>&quot;Roy Phan&quot;</bucket>
              <bucket>&quot;Mark Packer&quot;</bucket>
              <bucket>&quot;Toby Carlisle&quot;</bucket>
              <bucket>&quot;Sue Ann Reed&quot;</bucket>
              <bucket>&quot;Steve Chapman&quot;</bucket>
              <bucket>&quot;Xylona Preis&quot;</bucket>
              <bucket>&quot;Nora Preis&quot;</bucket>
              <bucket>&quot;Ricardo Sperren&quot;</bucket>
              <bucket>&quot;Randy Ferguson&quot;</bucket>
              <bucket>&quot;Brian Dahlen&quot;</bucket>
              <bucket>&quot;Kalyca Meade&quot;</bucket>
              <bucket>&quot;Jennifer Ferguson&quot;</bucket>
              <bucket>&quot;Michael Paige&quot;</bucket>
              <bucket>&quot;Rick Bensley&quot;</bucket>
              <bucket>&quot;Becky Pak&quot;</bucket>
              <bucket>&quot;Keith Herrera&quot;</bucket>
              <bucket>&quot;Ellis Ballard&quot;</bucket>
              <bucket>&quot;Lindsay Williams&quot;</bucket>
              <bucket>&quot;Emily Ducich&quot;</bucket>
              <bucket>&quot;Scott Cohen&quot;</bucket>
              <bucket>&quot;Toby Gnade&quot;</bucket>
              <bucket>&quot;Elizabeth Moffitt&quot;</bucket>
              <bucket>&quot;Pauline Johnson&quot;</bucket>
              <bucket>&quot;Jack Garza&quot;</bucket>
              <bucket>&quot;Marina Lichtenstein&quot;</bucket>
              <bucket>&quot;Michael Chen&quot;</bucket>
              <bucket>&quot;Rob Williams&quot;</bucket>
              <bucket>&quot;Fred Harton&quot;</bucket>
              <bucket>&quot;Robert Waldorf&quot;</bucket>
              <bucket>&quot;Kelly Collister&quot;</bucket>
              <bucket>&quot;Roland Fjeld&quot;</bucket>
              <bucket>&quot;Fred Chung&quot;</bucket>
              <bucket>&quot;William Brown&quot;</bucket>
              <bucket>&quot;Alan Schoenberger&quot;</bucket>
              <bucket>&quot;Rick Reed&quot;</bucket>
              <bucket>&quot;Ken Heidel&quot;</bucket>
              <bucket>&quot;Doug Jacobs&quot;</bucket>
              <bucket>&quot;Alejandro Grove&quot;</bucket>
              <bucket>&quot;Rob Dowd&quot;</bucket>
              <bucket>&quot;Tamara Willingham&quot;</bucket>
              <bucket>&quot;Chris Selesnick&quot;</bucket>
              <bucket>&quot;Kunst Miller&quot;</bucket>
              <bucket>&quot;Jim Karlsson&quot;</bucket>
              <bucket>&quot;Ted Trevino&quot;</bucket>
              <bucket>&quot;Justin MacKendrick&quot;</bucket>
              <bucket>&quot;Bobby Elias&quot;</bucket>
              <bucket>&quot;Jeremy Pistek&quot;</bucket>
              <bucket>&quot;Nicole Hansen&quot;</bucket>
              <bucket>&quot;Stephanie Ulpright&quot;</bucket>
              <bucket>&quot;Karen Bern&quot;</bucket>
              <bucket>&quot;John Lucas&quot;</bucket>
              <bucket>&quot;Mary Zewe&quot;</bucket>
              <bucket>&quot;Neoma Murray&quot;</bucket>
              <bucket>&quot;Justin Ellison&quot;</bucket>
              <bucket>&quot;Gary Mitchum&quot;</bucket>
              <bucket>&quot;Shaun Weien&quot;</bucket>
              <bucket>&quot;Brosina Hoffman&quot;</bucket>
              <bucket>&quot;Pauline Webber&quot;</bucket>
              <bucket>&quot;Hunter Glantz&quot;</bucket>
              <bucket>&quot;Ken Lonsdale&quot;</bucket>
              <bucket>&quot;George Zrebassa&quot;</bucket>
              <bucket>&quot;Thomas Boland&quot;</bucket>
              <bucket>&quot;Christine Sundaresam&quot;</bucket>
              <bucket>&quot;Robert Dilbeck&quot;</bucket>
              <bucket>&quot;Luke Weiss&quot;</bucket>
              <bucket>&quot;George Ashbrook&quot;</bucket>
              <bucket>&quot;Deborah Brumfield&quot;</bucket>
              <bucket>&quot;Maribeth Schnelling&quot;</bucket>
              <bucket>&quot;Karen Carlisle&quot;</bucket>
              <bucket>&quot;Craig Carroll&quot;</bucket>
              <bucket>&quot;Anna Andreadi&quot;</bucket>
              <bucket>&quot;Caroline Jumper&quot;</bucket>
              <bucket>&quot;Thomas Seio&quot;</bucket>
              <bucket>&quot;Arianne Irving&quot;</bucket>
              <bucket>&quot;Damala Kotsonis&quot;</bucket>
              <bucket>&quot;Sarah Brown&quot;</bucket>
              <bucket>&quot;Bart Watters&quot;</bucket>
              <bucket>&quot;Dana Kaydos&quot;</bucket>
              <bucket>&quot;Heather Kirkland&quot;</bucket>
              <bucket>&quot;Katherine Murray&quot;</bucket>
              <bucket>&quot;Annie Thurman&quot;</bucket>
              <bucket>&quot;Ionia McGrath&quot;</bucket>
              <bucket>&quot;Erica Smith&quot;</bucket>
              <bucket>&quot;Sample Company A&quot;</bucket>
              <bucket>&quot;Brenda Bowman&quot;</bucket>
              <bucket>&quot;Natalie Webber&quot;</bucket>
              <bucket>&quot;Claudia Bergmann&quot;</bucket>
              <bucket>&quot;Jonathan Doherty&quot;</bucket>
              <bucket>&quot;Max Jones&quot;</bucket>
              <bucket>&quot;Jill Fjeld&quot;</bucket>
              <bucket>&quot;Frank Hawley&quot;</bucket>
              <bucket>&quot;Anne McFarland&quot;</bucket>
              <bucket>&quot;Gary Zandusky&quot;</bucket>
              <bucket>&quot;Bill Donatelli&quot;</bucket>
              <bucket>&quot;Karen Daniels&quot;</bucket>
              <bucket>&quot;Ivan Liston&quot;</bucket>
              <bucket>&quot;Tonja Turnell&quot;</bucket>
              <bucket>&quot;Theone Pippenger&quot;</bucket>
              <bucket>&quot;Giulietta Baptist&quot;</bucket>
              <bucket>&quot;Bradley Drucker&quot;</bucket>
              <bucket>&quot;Carol Adams&quot;</bucket>
              <bucket>&quot;Philisse Overcash&quot;</bucket>
              <bucket>&quot;Anthony Johnson&quot;</bucket>
              <bucket>&quot;Jim Kriz&quot;</bucket>
              <bucket>&quot;Gary Hwang&quot;</bucket>
              <bucket>&quot;Dave Hallsten&quot;</bucket>
              <bucket>&quot;Harold Ryan&quot;</bucket>
              <bucket>&quot;Seth Vernon&quot;</bucket>
              <bucket>&quot;Quincy Jones&quot;</bucket>
              <bucket>&quot;Roland Schwarz&quot;</bucket>
              <bucket>&quot;Naresj Patel&quot;</bucket>
              <bucket>&quot;Frank Carlisle&quot;</bucket>
              <bucket>&quot;Jamie Kunitz&quot;</bucket>
              <bucket>&quot;Kristen Hastings&quot;</bucket>
              <bucket>&quot;Mitch Webber&quot;</bucket>
              <bucket>&quot;Matt Abelman&quot;</bucket>
              <bucket>&quot;Joe Elijah&quot;</bucket>
              <bucket>&quot;Steven Cartwright&quot;</bucket>
              <bucket>&quot;Lena Creighton&quot;</bucket>
              <bucket>&quot;Rick Huthwaite&quot;</bucket>
              <bucket>&quot;Pierre Wener&quot;</bucket>
              <bucket>&quot;Ruben Ausman&quot;</bucket>
              <bucket>&quot;Anna Häberlin&quot;</bucket>
              <bucket>&quot;Yoseph Carroll&quot;</bucket>
              <bucket>&quot;Alan Hwang&quot;</bucket>
              <bucket>&quot;Nick Crebassa&quot;</bucket>
              <bucket>&quot;Denise Monton&quot;</bucket>
              <bucket>&quot;Eugene Moren&quot;</bucket>
              <bucket>&quot;Dianna Wilson&quot;</bucket>
              <bucket>&quot;Amy Cox&quot;</bucket>
              <bucket>&quot;Edward Hooks&quot;</bucket>
              <bucket>&quot;James Galang&quot;</bucket>
              <bucket>&quot;Grace Kelly&quot;</bucket>
              <bucket>&quot;Bill Eplett&quot;</bucket>
              <bucket>&quot;Paul Prost&quot;</bucket>
              <bucket>&quot;Ben Ferrer&quot;</bucket>
              <bucket>&quot;Dennis Pardue&quot;</bucket>
              <bucket>&quot;Corinna Mitchell&quot;</bucket>
              <bucket>&quot;John Murray&quot;</bucket>
              <bucket>&quot;Rick Wilson&quot;</bucket>
              <bucket>&quot;Valerie Dominguez&quot;</bucket>
              <bucket>&quot;Justin Deggeller&quot;</bucket>
              <bucket>&quot;Jim Epp&quot;</bucket>
              <bucket>&quot;Dan Reichenbach&quot;</bucket>
              <bucket>&quot;Karen Ferguson&quot;</bucket>
              <bucket>&quot;Mitch Willingham&quot;</bucket>
              <bucket>&quot;Darrin Martin&quot;</bucket>
              <bucket>&quot;Penelope Sewall&quot;</bucket>
              <bucket>&quot;Katrina Willman&quot;</bucket>
              <bucket>&quot;Yana Sorensen&quot;</bucket>
              <bucket>&quot;Mark Cousins&quot;</bucket>
              <bucket>&quot;Maria Etezadi&quot;</bucket>
              <bucket>&quot;Alan Dominguez&quot;</bucket>
              <bucket>&quot;Robert Marley&quot;</bucket>
              <bucket>&quot;Clay Ludtke&quot;</bucket>
              <bucket>&quot;Shirley Daniels&quot;</bucket>
              <bucket>&quot;Steven Roelle&quot;</bucket>
              <bucket>&quot;Pete Kriz&quot;</bucket>
              <bucket>&quot;Fred Hopkins&quot;</bucket>
              <bucket>&quot;Adam Bellavance&quot;</bucket>
              <bucket>&quot;Laura Armstrong&quot;</bucket>
              <bucket>&quot;Greg Tran&quot;</bucket>
              <bucket>&quot;Helen Wasserman&quot;</bucket>
              <bucket>&quot;Jane Waco&quot;</bucket>
              <bucket>&quot;Christopher Conant&quot;</bucket>
              <bucket>&quot;Brian Moss&quot;</bucket>
              <bucket>&quot;Todd Sumrall&quot;</bucket>
              <bucket>&quot;Harry Marie&quot;</bucket>
              <bucket>&quot;Bill Shonely&quot;</bucket>
              <bucket>&quot;Sanjit Engle&quot;</bucket>
              <bucket>&quot;Nathan Mautz&quot;</bucket>
              <bucket>&quot;Tom Boeckenhauer&quot;</bucket>
              <bucket>&quot;Daniel Raglin&quot;</bucket>
              <bucket>&quot;Andy Reiter&quot;</bucket>
              <bucket>&quot;Keith Dawkins&quot;</bucket>
              <bucket>&quot;Christopher Martinez&quot;</bucket>
              <bucket>&quot;Tom Ashbrook&quot;</bucket>
              <bucket>&quot;Adrian Barton&quot;</bucket>
              <bucket>&quot;Hunter Lopez&quot;</bucket>
              <bucket>&quot;Sanjit Chand&quot;</bucket>
              <bucket>&quot;Raymond Buch&quot;</bucket>
              <bucket>&quot;Tamara Chand&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0npl5ro0vzsntn152kadd148jqod].[usr:Calculation_1435522427493490691:qk]' palette='blue_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0npl5ro0vzsntn152kadd148jqod].[usr:Calculation_1435522427493490691:qk]' />
              <text column='[federated.0npl5ro0vzsntn152kadd148jqod].[usr:Calculation_1435522427493490691:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0npl5ro0vzsntn152kadd148jqod].[none:Customer Name:nk]</rows>
        <cols>[federated.0npl5ro0vzsntn152kadd148jqod].[pcto:sum:Profit:qk:4]</cols>
      </table>
      <simple-id uuid='{40CA4ED4-CAC4-411E-8D24-5F13D482863B}' />
    </worksheet>
    <worksheet name='Q 7.5 5.Ranking States based on Sales greater than 20000'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.0npl5ro0vzsntn152kadd148jqod' />
          </datasources>
          <datasource-dependencies datasource='federated.0npl5ro0vzsntn152kadd148jqod'>
            <column caption='Sales &gt;20000' datatype='boolean' name='[Calculation_501869929992175616]' role='measure' type='nominal'>
              <calculation class='tableau' formula='SUM([Sales]) &gt; 20000' />
            </column>
            <column caption='Rank of state as per sum of sales (1-25)' datatype='integer' name='[Calculation_501869929992658945]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK(SUM([Sales]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_501869929992175616]' derivation='User' name='[usr:Calculation_501869929992175616:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_501869929992658945]' derivation='User' name='[usr:Calculation_501869929992658945:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0npl5ro0vzsntn152kadd148jqod].[usr:Calculation_501869929992175616:nk]'>
            <groupfilter function='member' level='[usr:Calculation_501869929992175616:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0npl5ro0vzsntn152kadd148jqod].[none:State:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0npl5ro0vzsntn152kadd148jqod].[sum:Sales:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0npl5ro0vzsntn152kadd148jqod].[usr:Calculation_501869929992175616:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0npl5ro0vzsntn152kadd148jqod].[usr:Calculation_501869929992658945:qk]' palette='green_blue_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0npl5ro0vzsntn152kadd148jqod].[usr:Calculation_501869929992658945:qk]' />
              <text column='[federated.0npl5ro0vzsntn152kadd148jqod].[usr:Calculation_501869929992658945:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0npl5ro0vzsntn152kadd148jqod].[usr:Calculation_501869929992175616:nk] * [federated.0npl5ro0vzsntn152kadd148jqod].[sum:Sales:qk])</rows>
        <cols>[federated.0npl5ro0vzsntn152kadd148jqod].[none:State:nk]</cols>
      </table>
      <simple-id uuid='{79522535-2C89-40F4-8375-322C05060B65}' />
    </worksheet>
    <worksheet name='Q 7.6  '>
      <layout-options>
        <caption>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Arial Black' fontsize='11'>No orders took more than 7 days to deliver. Hence taken 6 days, percentage of orders which took more than 6 days on an average to deliver is shown. (Sample Superstore data)</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.0npl5ro0vzsntn152kadd148jqod' />
          </datasources>
          <datasource-dependencies datasource='federated.0npl5ro0vzsntn152kadd148jqod'>
            <column caption='Delivery Day &gt; 7' datatype='boolean' name='[Calculation_501869930011099138]' role='measure' type='nominal'>
              <calculation class='tableau' formula='AVG(DATEDIFF(&apos;day&apos;,[Order Date],[Ship Date])) &gt; 6' />
            </column>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <_.fcp.ObjectModelTableType.false...column caption='Orders' datatype='integer' name='[__tableau_internal_object_id__].[Orders_43A73A1344C84A4EBC8127A498D588DE]' role='measure' type='quantitative' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_43A73A1344C84A4EBC8127A498D588DE]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Orders_43A73A1344C84A4EBC8127A498D588DE]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Orders_43A73A1344C84A4EBC8127A498D588DE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Orders_43A73A1344C84A4EBC8127A498D588DE]' derivation='Count' name='[__tableau_internal_object_id__].[pcrk:cnt:Orders_43A73A1344C84A4EBC8127A498D588DE:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' rank-options='Competition,Ascending' type='PctRank' />
            </column-instance>
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_501869930011099138]' derivation='User' name='[usr:Calculation_501869930011099138:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0npl5ro0vzsntn152kadd148jqod].[usr:Calculation_501869930011099138:nk]'>
            <groupfilter function='member' level='[usr:Calculation_501869930011099138:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0npl5ro0vzsntn152kadd148jqod].[usr:Calculation_501869930011099138:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0npl5ro0vzsntn152kadd148jqod].[__tableau_internal_object_id__].[pcrk:cnt:Orders_43A73A1344C84A4EBC8127A498D588DE:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0npl5ro0vzsntn152kadd148jqod].[__tableau_internal_object_id__].[cnt:Orders_43A73A1344C84A4EBC8127A498D588DE:qk]</rows>
        <cols>([federated.0npl5ro0vzsntn152kadd148jqod].[none:Customer Name:nk] / [federated.0npl5ro0vzsntn152kadd148jqod].[usr:Calculation_501869930011099138:nk])</cols>
      </table>
      <simple-id uuid='{88E8DE81-99E9-4AE4-B680-0D93A399C385}' />
    </worksheet>
    <worksheet name='Q 7.7Total Overall GDP'>
      <layout-options>
        <caption>
          <formatted-text>
            <run bold='true' fontcolor='#59a14f' fontname='Tableau Semibold' fontsize='12'>Total overall GDP = SUM([GDP])/TOTAL(SUM([GDP]))</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='World Bank Indicators' name='federated.12sdb1b1b2b5mx1ejqqdw02lpmam' />
          </datasources>
          <datasource-dependencies datasource='federated.12sdb1b1b2b5mx1ejqqdw02lpmam'>
            <column caption='Overall GDP' datatype='real' name='[Calculation_501869930028249093]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([GDP]) / TOTAL(SUM([GDP]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='integer' name='[GDP]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_501869930028249093]' derivation='User' name='[usr:Calculation_501869930028249093:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[usr:Calculation_501869930028249093:qk]</rows>
        <cols />
      </table>
      <simple-id uuid='{85D13C7F-BA02-434C-B3A5-255763269559}' />
    </worksheet>
    <worksheet name='Q 8.2 List of Top 10 Products based on Profits whose sale value is more than 5000'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (global_superstore_2016)' name='federated.12pnq8f1s43vkh1fqzsr101fwrkl' />
          </datasources>
          <datasource-dependencies datasource='federated.12pnq8f1s43vkh1fqzsr101fwrkl'>
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[none:Product Name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Profit])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Product Name:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[sum:Sales:qk]' included-values='in-range'>
            <min>5000.0</min>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[none:Product Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[sum:Profit:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[none:Product Name:nk]</column>
            <column>[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[sum:Sales:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[none:Product Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[sum:Profit:qk]</rows>
        <cols>[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[none:Product Name:nk]</cols>
      </table>
      <simple-id uuid='{F87E8912-8CCD-484D-B5FF-CAAA98F6824C}' />
    </worksheet>
    <worksheet name='Q 8.3'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (global_superstore_2016)' name='federated.12pnq8f1s43vkh1fqzsr101fwrkl' />
          </datasources>
          <datasource-dependencies datasource='federated.12pnq8f1s43vkh1fqzsr101fwrkl'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[none:Customer Name:nk]'>
            <groupfilter count='15' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Profit])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Customer Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[none:Customer Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[sum:Profit:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[none:Customer Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[none:Customer Name:nk]' />
              <text column='[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[sum:Profit:qk]</rows>
        <cols>[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[none:Customer Name:nk]</cols>
      </table>
      <simple-id uuid='{0BE9E7F7-F4E0-470A-A95A-F33456815BE3}' />
    </worksheet>
    <worksheet name='Q 8.4 Sum(sales) for the highest subcategory. '>
      <layout-options>
        <caption>
          <formatted-text>
            <run fontcolor='#606b76' fontname='Tableau Semibold' fontsize='11'>As per question the year 2011 was not present in dataset . So Sum(sales) for the highest subcatergory ie phones is 3,37,282 . The view is filtered on year (2012).</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (global_superstore_2016)' name='federated.12pnq8f1s43vkh1fqzsr101fwrkl' />
          </datasources>
          <datasource-dependencies datasource='federated.12pnq8f1s43vkh1fqzsr101fwrkl'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[yr:Order Date:ok]'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2012' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[sum:Sales:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[none:Sub-Category:nk]' />
              <text column='[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.12pnq8f1s43vkh1fqzsr101fwrkl].[yr:Order Date:ok] * [federated.12pnq8f1s43vkh1fqzsr101fwrkl].[sum:Sales:qk])</rows>
        <cols>[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{3FB65E4C-BD6C-475C-B1C3-D9C49B08B3C9}' />
    </worksheet>
    <worksheet name='Q 8.5'>
      <layout-options>
        <caption>
          <formatted-text>
            <run fontalignment='1' fontcolor='#000000' fontname='Calibri,sans-serif' fontsize='14'>375th top most customer by sum of profits  is PATRIK RYAN.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.0npl5ro0vzsntn152kadd148jqod' />
          </datasources>
          <datasource-dependencies datasource='federated.0npl5ro0vzsntn152kadd148jqod'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0npl5ro0vzsntn152kadd148jqod].[none:Customer Name:nk]'>
            <groupfilter count='375' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Profit])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Customer Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0npl5ro0vzsntn152kadd148jqod].[none:Customer Name:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0npl5ro0vzsntn152kadd148jqod].[sum:Profit:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0npl5ro0vzsntn152kadd148jqod].[none:Customer Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0npl5ro0vzsntn152kadd148jqod].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0npl5ro0vzsntn152kadd148jqod].[none:Customer Name:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{492B2FD8-702E-434A-9F14-43C9B533B9D5}' />
    </worksheet>
    <worksheet name='Q 9.2(a) '>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Region vs Country( Total population)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='World Bank Indicators' name='federated.12sdb1b1b2b5mx1ejqqdw02lpmam' />
          </datasources>
          <datasource-dependencies datasource='federated.12sdb1b1b2b5mx1ejqqdw02lpmam'>
            <column datatype='integer' name='[Population Total]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population Total]' derivation='Sum' name='[sum:Population Total:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[none:Region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[sum:Population Total:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[none:Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[sum:Population Total:qk]</rows>
        <cols>[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[none:Region:nk]</cols>
      </table>
      <simple-id uuid='{B2D6419C-7D0F-402C-87BE-9FAE43F819D1}' />
    </worksheet>
    <worksheet name='Q.7.3 Percent of total profits do the top 10 customers by Sales (By Creating Set Method) '>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.0npl5ro0vzsntn152kadd148jqod' />
          </datasources>
          <datasource-dependencies datasource='federated.0npl5ro0vzsntn152kadd148jqod'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Customer Name Set]' derivation='InOut' name='[io:Customer Name Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[pcto:sum:Profit:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0npl5ro0vzsntn152kadd148jqod].[Customer Name Set]' />
          <filter class='categorical' column='[federated.0npl5ro0vzsntn152kadd148jqod].[none:Customer Name:nk]'>
            <groupfilter function='level-members' level='[none:Customer Name:nk]' />
          </filter>
          <manual-sort column='[federated.0npl5ro0vzsntn152kadd148jqod].[none:Customer Name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Tamara Chand&quot;</bucket>
              <bucket>&quot;Raymond Buch&quot;</bucket>
              <bucket>&quot;Sanjit Chand&quot;</bucket>
              <bucket>&quot;Hunter Lopez&quot;</bucket>
              <bucket>&quot;Adrian Barton&quot;</bucket>
              <bucket>&quot;Tom Ashbrook&quot;</bucket>
              <bucket>&quot;Christopher Martinez&quot;</bucket>
              <bucket>&quot;Keith Dawkins&quot;</bucket>
              <bucket>&quot;Andy Reiter&quot;</bucket>
              <bucket>&quot;Daniel Raglin&quot;</bucket>
              <bucket>&quot;Tom Boeckenhauer&quot;</bucket>
              <bucket>&quot;Nathan Mautz&quot;</bucket>
              <bucket>&quot;Sanjit Engle&quot;</bucket>
              <bucket>&quot;Bill Shonely&quot;</bucket>
              <bucket>&quot;Harry Marie&quot;</bucket>
              <bucket>&quot;Todd Sumrall&quot;</bucket>
              <bucket>&quot;Brian Moss&quot;</bucket>
              <bucket>&quot;Christopher Conant&quot;</bucket>
              <bucket>&quot;Jane Waco&quot;</bucket>
              <bucket>&quot;Helen Wasserman&quot;</bucket>
              <bucket>&quot;Greg Tran&quot;</bucket>
              <bucket>&quot;Laura Armstrong&quot;</bucket>
              <bucket>&quot;Adam Bellavance&quot;</bucket>
              <bucket>&quot;Fred Hopkins&quot;</bucket>
              <bucket>&quot;Pete Kriz&quot;</bucket>
              <bucket>&quot;Steven Roelle&quot;</bucket>
              <bucket>&quot;Shirley Daniels&quot;</bucket>
              <bucket>&quot;Clay Ludtke&quot;</bucket>
              <bucket>&quot;Robert Marley&quot;</bucket>
              <bucket>&quot;Alan Dominguez&quot;</bucket>
              <bucket>&quot;Maria Etezadi&quot;</bucket>
              <bucket>&quot;Mark Cousins&quot;</bucket>
              <bucket>&quot;Yana Sorensen&quot;</bucket>
              <bucket>&quot;Katrina Willman&quot;</bucket>
              <bucket>&quot;Penelope Sewall&quot;</bucket>
              <bucket>&quot;Darrin Martin&quot;</bucket>
              <bucket>&quot;Mitch Willingham&quot;</bucket>
              <bucket>&quot;Karen Ferguson&quot;</bucket>
              <bucket>&quot;Dan Reichenbach&quot;</bucket>
              <bucket>&quot;Jim Epp&quot;</bucket>
              <bucket>&quot;Justin Deggeller&quot;</bucket>
              <bucket>&quot;Valerie Dominguez&quot;</bucket>
              <bucket>&quot;Rick Wilson&quot;</bucket>
              <bucket>&quot;John Murray&quot;</bucket>
              <bucket>&quot;Corinna Mitchell&quot;</bucket>
              <bucket>&quot;Dennis Pardue&quot;</bucket>
              <bucket>&quot;Ben Ferrer&quot;</bucket>
              <bucket>&quot;Paul Prost&quot;</bucket>
              <bucket>&quot;Bill Eplett&quot;</bucket>
              <bucket>&quot;Grace Kelly&quot;</bucket>
              <bucket>&quot;James Galang&quot;</bucket>
              <bucket>&quot;Edward Hooks&quot;</bucket>
              <bucket>&quot;Amy Cox&quot;</bucket>
              <bucket>&quot;Dianna Wilson&quot;</bucket>
              <bucket>&quot;Eugene Moren&quot;</bucket>
              <bucket>&quot;Denise Monton&quot;</bucket>
              <bucket>&quot;Nick Crebassa&quot;</bucket>
              <bucket>&quot;Alan Hwang&quot;</bucket>
              <bucket>&quot;Yoseph Carroll&quot;</bucket>
              <bucket>&quot;Anna Häberlin&quot;</bucket>
              <bucket>&quot;Ruben Ausman&quot;</bucket>
              <bucket>&quot;Pierre Wener&quot;</bucket>
              <bucket>&quot;Rick Huthwaite&quot;</bucket>
              <bucket>&quot;Lena Creighton&quot;</bucket>
              <bucket>&quot;Steven Cartwright&quot;</bucket>
              <bucket>&quot;Joe Elijah&quot;</bucket>
              <bucket>&quot;Matt Abelman&quot;</bucket>
              <bucket>&quot;Mitch Webber&quot;</bucket>
              <bucket>&quot;Kristen Hastings&quot;</bucket>
              <bucket>&quot;Jamie Kunitz&quot;</bucket>
              <bucket>&quot;Frank Carlisle&quot;</bucket>
              <bucket>&quot;Naresj Patel&quot;</bucket>
              <bucket>&quot;Roland Schwarz&quot;</bucket>
              <bucket>&quot;Quincy Jones&quot;</bucket>
              <bucket>&quot;Seth Vernon&quot;</bucket>
              <bucket>&quot;Harold Ryan&quot;</bucket>
              <bucket>&quot;Dave Hallsten&quot;</bucket>
              <bucket>&quot;Gary Hwang&quot;</bucket>
              <bucket>&quot;Jim Kriz&quot;</bucket>
              <bucket>&quot;Anthony Johnson&quot;</bucket>
              <bucket>&quot;Philisse Overcash&quot;</bucket>
              <bucket>&quot;Carol Adams&quot;</bucket>
              <bucket>&quot;Bradley Drucker&quot;</bucket>
              <bucket>&quot;Giulietta Baptist&quot;</bucket>
              <bucket>&quot;Theone Pippenger&quot;</bucket>
              <bucket>&quot;Tonja Turnell&quot;</bucket>
              <bucket>&quot;Ivan Liston&quot;</bucket>
              <bucket>&quot;Karen Daniels&quot;</bucket>
              <bucket>&quot;Bill Donatelli&quot;</bucket>
              <bucket>&quot;Gary Zandusky&quot;</bucket>
              <bucket>&quot;Anne McFarland&quot;</bucket>
              <bucket>&quot;Frank Hawley&quot;</bucket>
              <bucket>&quot;Jill Fjeld&quot;</bucket>
              <bucket>&quot;Max Jones&quot;</bucket>
              <bucket>&quot;Jonathan Doherty&quot;</bucket>
              <bucket>&quot;Claudia Bergmann&quot;</bucket>
              <bucket>&quot;Natalie Webber&quot;</bucket>
              <bucket>&quot;Brenda Bowman&quot;</bucket>
              <bucket>&quot;Sample Company A&quot;</bucket>
              <bucket>&quot;Erica Smith&quot;</bucket>
              <bucket>&quot;Ionia McGrath&quot;</bucket>
              <bucket>&quot;Annie Thurman&quot;</bucket>
              <bucket>&quot;Katherine Murray&quot;</bucket>
              <bucket>&quot;Heather Kirkland&quot;</bucket>
              <bucket>&quot;Dana Kaydos&quot;</bucket>
              <bucket>&quot;Bart Watters&quot;</bucket>
              <bucket>&quot;Sarah Brown&quot;</bucket>
              <bucket>&quot;Damala Kotsonis&quot;</bucket>
              <bucket>&quot;Arianne Irving&quot;</bucket>
              <bucket>&quot;Thomas Seio&quot;</bucket>
              <bucket>&quot;Caroline Jumper&quot;</bucket>
              <bucket>&quot;Anna Andreadi&quot;</bucket>
              <bucket>&quot;Craig Carroll&quot;</bucket>
              <bucket>&quot;Karen Carlisle&quot;</bucket>
              <bucket>&quot;Maribeth Schnelling&quot;</bucket>
              <bucket>&quot;Deborah Brumfield&quot;</bucket>
              <bucket>&quot;George Ashbrook&quot;</bucket>
              <bucket>&quot;Luke Weiss&quot;</bucket>
              <bucket>&quot;Robert Dilbeck&quot;</bucket>
              <bucket>&quot;Christine Sundaresam&quot;</bucket>
              <bucket>&quot;Thomas Boland&quot;</bucket>
              <bucket>&quot;George Zrebassa&quot;</bucket>
              <bucket>&quot;Ken Lonsdale&quot;</bucket>
              <bucket>&quot;Hunter Glantz&quot;</bucket>
              <bucket>&quot;Pauline Webber&quot;</bucket>
              <bucket>&quot;Brosina Hoffman&quot;</bucket>
              <bucket>&quot;Shaun Weien&quot;</bucket>
              <bucket>&quot;Gary Mitchum&quot;</bucket>
              <bucket>&quot;Justin Ellison&quot;</bucket>
              <bucket>&quot;Neoma Murray&quot;</bucket>
              <bucket>&quot;Mary Zewe&quot;</bucket>
              <bucket>&quot;John Lucas&quot;</bucket>
              <bucket>&quot;Karen Bern&quot;</bucket>
              <bucket>&quot;Stephanie Ulpright&quot;</bucket>
              <bucket>&quot;Nicole Hansen&quot;</bucket>
              <bucket>&quot;Jeremy Pistek&quot;</bucket>
              <bucket>&quot;Bobby Elias&quot;</bucket>
              <bucket>&quot;Justin MacKendrick&quot;</bucket>
              <bucket>&quot;Ted Trevino&quot;</bucket>
              <bucket>&quot;Jim Karlsson&quot;</bucket>
              <bucket>&quot;Kunst Miller&quot;</bucket>
              <bucket>&quot;Chris Selesnick&quot;</bucket>
              <bucket>&quot;Tamara Willingham&quot;</bucket>
              <bucket>&quot;Rob Dowd&quot;</bucket>
              <bucket>&quot;Alejandro Grove&quot;</bucket>
              <bucket>&quot;Doug Jacobs&quot;</bucket>
              <bucket>&quot;Ken Heidel&quot;</bucket>
              <bucket>&quot;Rick Reed&quot;</bucket>
              <bucket>&quot;Alan Schoenberger&quot;</bucket>
              <bucket>&quot;William Brown&quot;</bucket>
              <bucket>&quot;Fred Chung&quot;</bucket>
              <bucket>&quot;Roland Fjeld&quot;</bucket>
              <bucket>&quot;Kelly Collister&quot;</bucket>
              <bucket>&quot;Robert Waldorf&quot;</bucket>
              <bucket>&quot;Fred Harton&quot;</bucket>
              <bucket>&quot;Rob Williams&quot;</bucket>
              <bucket>&quot;Michael Chen&quot;</bucket>
              <bucket>&quot;Marina Lichtenstein&quot;</bucket>
              <bucket>&quot;Jack Garza&quot;</bucket>
              <bucket>&quot;Pauline Johnson&quot;</bucket>
              <bucket>&quot;Elizabeth Moffitt&quot;</bucket>
              <bucket>&quot;Toby Gnade&quot;</bucket>
              <bucket>&quot;Scott Cohen&quot;</bucket>
              <bucket>&quot;Emily Ducich&quot;</bucket>
              <bucket>&quot;Lindsay Williams&quot;</bucket>
              <bucket>&quot;Ellis Ballard&quot;</bucket>
              <bucket>&quot;Keith Herrera&quot;</bucket>
              <bucket>&quot;Becky Pak&quot;</bucket>
              <bucket>&quot;Rick Bensley&quot;</bucket>
              <bucket>&quot;Michael Paige&quot;</bucket>
              <bucket>&quot;Jennifer Ferguson&quot;</bucket>
              <bucket>&quot;Kalyca Meade&quot;</bucket>
              <bucket>&quot;Brian Dahlen&quot;</bucket>
              <bucket>&quot;Randy Ferguson&quot;</bucket>
              <bucket>&quot;Ricardo Sperren&quot;</bucket>
              <bucket>&quot;Nora Preis&quot;</bucket>
              <bucket>&quot;Xylona Preis&quot;</bucket>
              <bucket>&quot;Steve Chapman&quot;</bucket>
              <bucket>&quot;Sue Ann Reed&quot;</bucket>
              <bucket>&quot;Toby Carlisle&quot;</bucket>
              <bucket>&quot;Mark Packer&quot;</bucket>
              <bucket>&quot;Roy Phan&quot;</bucket>
              <bucket>&quot;Jeremy Lonsdale&quot;</bucket>
              <bucket>&quot;Phillip Flathmann&quot;</bucket>
              <bucket>&quot;Juliana Krohn&quot;</bucket>
              <bucket>&quot;Suzanne McNair&quot;</bucket>
              <bucket>&quot;Jack O&apos;Briant&quot;</bucket>
              <bucket>&quot;Nat Carroll&quot;</bucket>
              <bucket>&quot;Ken Black&quot;</bucket>
              <bucket>&quot;Arthur Prichep&quot;</bucket>
              <bucket>&quot;Jamie Frazer&quot;</bucket>
              <bucket>&quot;Tamara Manning&quot;</bucket>
              <bucket>&quot;Sandra Glassco&quot;</bucket>
              <bucket>&quot;Sung Pak&quot;</bucket>
              <bucket>&quot;John Stevenson&quot;</bucket>
              <bucket>&quot;Rick Hansen&quot;</bucket>
              <bucket>&quot;Dave Poirier&quot;</bucket>
              <bucket>&quot;Deirdre Greer&quot;</bucket>
              <bucket>&quot;Lauren Leatherbury&quot;</bucket>
              <bucket>&quot;Sally Hughsby&quot;</bucket>
              <bucket>&quot;Lisa DeCherney&quot;</bucket>
              <bucket>&quot;Ralph Arnett&quot;</bucket>
              <bucket>&quot;Duane Noonan&quot;</bucket>
              <bucket>&quot;Sylvia Foulston&quot;</bucket>
              <bucket>&quot;Ken Dana&quot;</bucket>
              <bucket>&quot;Dave Kipp&quot;</bucket>
              <bucket>&quot;Lena Radford&quot;</bucket>
              <bucket>&quot;Katherine Hughes&quot;</bucket>
              <bucket>&quot;Sara Luxemburg&quot;</bucket>
              <bucket>&quot;Peter McVee&quot;</bucket>
              <bucket>&quot;Lena Hernandez&quot;</bucket>
              <bucket>&quot;Benjamin Farhat&quot;</bucket>
              <bucket>&quot;Ashley Jarboe&quot;</bucket>
              <bucket>&quot;Frank Atkinson&quot;</bucket>
              <bucket>&quot;Irene Maddox&quot;</bucket>
              <bucket>&quot;Nora Paige&quot;</bucket>
              <bucket>&quot;Nora Pelletier&quot;</bucket>
              <bucket>&quot;Valerie Mitchum&quot;</bucket>
              <bucket>&quot;Meg Tillman&quot;</bucket>
              <bucket>&quot;Jenna Caffey&quot;</bucket>
              <bucket>&quot;Janet Molinari&quot;</bucket>
              <bucket>&quot;Clytie Kelty&quot;</bucket>
              <bucket>&quot;Edward Nazzal&quot;</bucket>
              <bucket>&quot;Anthony Rawles&quot;</bucket>
              <bucket>&quot;Christina VanderZanden&quot;</bucket>
              <bucket>&quot;Toby Braunhardt&quot;</bucket>
              <bucket>&quot;Rob Lucas&quot;</bucket>
              <bucket>&quot;Stewart Visinsky&quot;</bucket>
              <bucket>&quot;Mark Hamilton&quot;</bucket>
              <bucket>&quot;Denny Joy&quot;</bucket>
              <bucket>&quot;Steve Nguyen&quot;</bucket>
              <bucket>&quot;Rick Duston&quot;</bucket>
              <bucket>&quot;Richard Bierner&quot;</bucket>
              <bucket>&quot;Michelle Huthwaite&quot;</bucket>
              <bucket>&quot;Dave Brooks&quot;</bucket>
              <bucket>&quot;Resi Pölking&quot;</bucket>
              <bucket>&quot;Deanra Eno&quot;</bucket>
              <bucket>&quot;Speros Goranitis&quot;</bucket>
              <bucket>&quot;Marc Crier&quot;</bucket>
              <bucket>&quot;Monica Federle&quot;</bucket>
              <bucket>&quot;Ruben Dartt&quot;</bucket>
              <bucket>&quot;Katharine Harms&quot;</bucket>
              <bucket>&quot;Justin Ritter&quot;</bucket>
              <bucket>&quot;Eva Jacobs&quot;</bucket>
              <bucket>&quot;Brian Thompson&quot;</bucket>
              <bucket>&quot;Neil Ducich&quot;</bucket>
              <bucket>&quot;Patrick Jones&quot;</bucket>
              <bucket>&quot;Gene McClure&quot;</bucket>
              <bucket>&quot;Scot Coram&quot;</bucket>
              <bucket>&quot;Denny Blanton&quot;</bucket>
              <bucket>&quot;Doug Bickford&quot;</bucket>
              <bucket>&quot;Patrick O&apos;Donnell&quot;</bucket>
              <bucket>&quot;Andrew Allen&quot;</bucket>
              <bucket>&quot;Paul Van Hugh&quot;</bucket>
              <bucket>&quot;Bart Pistole&quot;</bucket>
              <bucket>&quot;Daniel Byrd&quot;</bucket>
              <bucket>&quot;Jennifer Patt&quot;</bucket>
              <bucket>&quot;Cathy Prescott&quot;</bucket>
              <bucket>&quot;Carlos Daly&quot;</bucket>
              <bucket>&quot;Chuck Clark&quot;</bucket>
              <bucket>&quot;Beth Thompson&quot;</bucket>
              <bucket>&quot;Max Ludwig&quot;</bucket>
              <bucket>&quot;Bradley Talbott&quot;</bucket>
              <bucket>&quot;Chad McGuire&quot;</bucket>
              <bucket>&quot;Frank Preis&quot;</bucket>
              <bucket>&quot;Cynthia Delaney&quot;</bucket>
              <bucket>&quot;Nick Zandusky&quot;</bucket>
              <bucket>&quot;Katrina Edelman&quot;</bucket>
              <bucket>&quot;Frank Gastineau&quot;</bucket>
              <bucket>&quot;Chris Cortes&quot;</bucket>
              <bucket>&quot;Charles Crestani&quot;</bucket>
              <bucket>&quot;Raymond Messe&quot;</bucket>
              <bucket>&quot;Ted Butterfield&quot;</bucket>
              <bucket>&quot;Nicole Fjeld&quot;</bucket>
              <bucket>&quot;Ed Jacobs&quot;</bucket>
              <bucket>&quot;Brendan Sweed&quot;</bucket>
              <bucket>&quot;Trudy Brown&quot;</bucket>
              <bucket>&quot;Shaun Chance&quot;</bucket>
              <bucket>&quot;Dennis Kane&quot;</bucket>
              <bucket>&quot;Harold Pawlan&quot;</bucket>
              <bucket>&quot;Victoria Brennan&quot;</bucket>
              <bucket>&quot;Carl Weiss&quot;</bucket>
              <bucket>&quot;Steve Carroll&quot;</bucket>
              <bucket>&quot;Sam Zeldin&quot;</bucket>
              <bucket>&quot;Trudy Glocke&quot;</bucket>
              <bucket>&quot;Aaron Hawkins&quot;</bucket>
              <bucket>&quot;Chris McAfee&quot;</bucket>
              <bucket>&quot;Ben Peterman&quot;</bucket>
              <bucket>&quot;Georgia Rosenberg&quot;</bucket>
              <bucket>&quot;Jessica Myrick&quot;</bucket>
              <bucket>&quot;Alejandro Savely&quot;</bucket>
              <bucket>&quot;Natalie DeCherney&quot;</bucket>
              <bucket>&quot;Dianna Vittorini&quot;</bucket>
              <bucket>&quot;Lynn Smith&quot;</bucket>
              <bucket>&quot;Gary McGarr&quot;</bucket>
              <bucket>&quot;Don Jones&quot;</bucket>
              <bucket>&quot;Arthur Gainer&quot;</bucket>
              <bucket>&quot;Nancy Lomonaco&quot;</bucket>
              <bucket>&quot;Matthew Grinstein&quot;</bucket>
              <bucket>&quot;Bradley Nguyen&quot;</bucket>
              <bucket>&quot;Liz Preis&quot;</bucket>
              <bucket>&quot;Paul Gonzalez&quot;</bucket>
              <bucket>&quot;Bruce Degenhardt&quot;</bucket>
              <bucket>&quot;Dean percer&quot;</bucket>
              <bucket>&quot;Scott Williamson&quot;</bucket>
              <bucket>&quot;Saphhira Shifley&quot;</bucket>
              <bucket>&quot;Corey Catlett&quot;</bucket>
              <bucket>&quot;Jay Kimmel&quot;</bucket>
              <bucket>&quot;Jay Fein&quot;</bucket>
              <bucket>&quot;Kristina Nunn&quot;</bucket>
              <bucket>&quot;Katherine Ducich&quot;</bucket>
              <bucket>&quot;Carl Ludwig&quot;</bucket>
              <bucket>&quot;Dan Lawera&quot;</bucket>
              <bucket>&quot;Liz Thompson&quot;</bucket>
              <bucket>&quot;Ivan Gibson&quot;</bucket>
              <bucket>&quot;Maribeth Yedwab&quot;</bucket>
              <bucket>&quot;Ross DeVincentis&quot;</bucket>
              <bucket>&quot;Art Ferguson&quot;</bucket>
              <bucket>&quot;Logan Haushalter&quot;</bucket>
              <bucket>&quot;Benjamin Venier&quot;</bucket>
              <bucket>&quot;Aimee Bixby&quot;</bucket>
              <bucket>&quot;Nat Gilpin&quot;</bucket>
              <bucket>&quot;Julie Prescott&quot;</bucket>
              <bucket>&quot;Craig Reiter&quot;</bucket>
              <bucket>&quot;Russell Applegate&quot;</bucket>
              <bucket>&quot;Barry Französisch&quot;</bucket>
              <bucket>&quot;Lindsay Castell&quot;</bucket>
              <bucket>&quot;Ann Chong&quot;</bucket>
              <bucket>&quot;Andrew Gjertsen&quot;</bucket>
              <bucket>&quot;Doug O&apos;Connell&quot;</bucket>
              <bucket>&quot;Ken Brennan&quot;</bucket>
              <bucket>&quot;Tony Molinari&quot;</bucket>
              <bucket>&quot;Dennis Bolton&quot;</bucket>
              <bucket>&quot;Michael Nguyen&quot;</bucket>
              <bucket>&quot;Matt Collister&quot;</bucket>
              <bucket>&quot;Delfina Latchford&quot;</bucket>
              <bucket>&quot;Linda Cazamias&quot;</bucket>
              <bucket>&quot;Sarah Foster&quot;</bucket>
              <bucket>&quot;Anne Pryor&quot;</bucket>
              <bucket>&quot;Evan Bailliet&quot;</bucket>
              <bucket>&quot;Adam Hart&quot;</bucket>
              <bucket>&quot;Maxwell Schwartz&quot;</bucket>
              <bucket>&quot;Michelle Arnett&quot;</bucket>
              <bucket>&quot;Philip Brown&quot;</bucket>
              <bucket>&quot;Roy Französisch&quot;</bucket>
              <bucket>&quot;Christina Anderson&quot;</bucket>
              <bucket>&quot;John Castell&quot;</bucket>
              <bucket>&quot;Bill Overfelt&quot;</bucket>
              <bucket>&quot;Thomas Thornton&quot;</bucket>
              <bucket>&quot;Allen Armold&quot;</bucket>
              <bucket>&quot;Jeremy Ellison&quot;</bucket>
              <bucket>&quot;Harold Engle&quot;</bucket>
              <bucket>&quot;Katrina Bavinger&quot;</bucket>
              <bucket>&quot;Mike Vittorini&quot;</bucket>
              <bucket>&quot;Pamela Coakley&quot;</bucket>
              <bucket>&quot;Christy Brittain&quot;</bucket>
              <bucket>&quot;Helen Abelman&quot;</bucket>
              <bucket>&quot;Ralph Kennedy&quot;</bucket>
              <bucket>&quot;Todd Boyes&quot;</bucket>
              <bucket>&quot;Stephanie Phelps&quot;</bucket>
              <bucket>&quot;Theresa Coyne&quot;</bucket>
              <bucket>&quot;Alejandro Ballentine&quot;</bucket>
              <bucket>&quot;Lindsay Shagiari&quot;</bucket>
              <bucket>&quot;Emily Burns&quot;</bucket>
              <bucket>&quot;Christine Kargatis&quot;</bucket>
              <bucket>&quot;Theresa Swint&quot;</bucket>
              <bucket>&quot;Stefanie Holloman&quot;</bucket>
              <bucket>&quot;Tim Brockman&quot;</bucket>
              <bucket>&quot;Bill Tyler&quot;</bucket>
              <bucket>&quot;Kean Takahito&quot;</bucket>
              <bucket>&quot;Becky Castell&quot;</bucket>
              <bucket>&quot;David Kendrick&quot;</bucket>
              <bucket>&quot;Filia McAdams&quot;</bucket>
              <bucket>&quot;Zuschuss Donatelli&quot;</bucket>
              <bucket>&quot;Patrick Ryan&quot;</bucket>
              <bucket>&quot;Maurice Satty&quot;</bucket>
              <bucket>&quot;Ben Wallace&quot;</bucket>
              <bucket>&quot;Erin Smith&quot;</bucket>
              <bucket>&quot;Christine Abelman&quot;</bucket>
              <bucket>&quot;Luke Schmidt&quot;</bucket>
              <bucket>&quot;Roger Barcio&quot;</bucket>
              <bucket>&quot;Evan Henry&quot;</bucket>
              <bucket>&quot;Darren Powers&quot;</bucket>
              <bucket>&quot;Eudokia Martin&quot;</bucket>
              <bucket>&quot;Brian Stugart&quot;</bucket>
              <bucket>&quot;Maya Herman&quot;</bucket>
              <bucket>&quot;Shahid Collister&quot;</bucket>
              <bucket>&quot;Kelly Andreada&quot;</bucket>
              <bucket>&quot;Christina DeMoss&quot;</bucket>
              <bucket>&quot;Logan Currie&quot;</bucket>
              <bucket>&quot;Giulietta Dortch&quot;</bucket>
              <bucket>&quot;Patrick Bzostek&quot;</bucket>
              <bucket>&quot;Sean Christensen&quot;</bucket>
              <bucket>&quot;Craig Leslie&quot;</bucket>
              <bucket>&quot;John Lee&quot;</bucket>
              <bucket>&quot;Sandra Flanagan&quot;</bucket>
              <bucket>&quot;Mike Kennedy&quot;</bucket>
              <bucket>&quot;Barbara Fisher&quot;</bucket>
              <bucket>&quot;Mike Pelletier&quot;</bucket>
              <bucket>&quot;Pete Armstrong&quot;</bucket>
              <bucket>&quot;Tracy Zic&quot;</bucket>
              <bucket>&quot;Denise Leinenbach&quot;</bucket>
              <bucket>&quot;Joel Eaton&quot;</bucket>
              <bucket>&quot;Trudy Schmidt&quot;</bucket>
              <bucket>&quot;Alan Barnes&quot;</bucket>
              <bucket>&quot;Toby Ritter&quot;</bucket>
              <bucket>&quot;Peter Bühler&quot;</bucket>
              <bucket>&quot;Tracy Collins&quot;</bucket>
              <bucket>&quot;Nathan Gelder&quot;</bucket>
              <bucket>&quot;Frank Olsen&quot;</bucket>
              <bucket>&quot;Candace McMahon&quot;</bucket>
              <bucket>&quot;Darren Budd&quot;</bucket>
              <bucket>&quot;Maria Bertelson&quot;</bucket>
              <bucket>&quot;Cathy Armstrong&quot;</bucket>
              <bucket>&quot;Matt Collins&quot;</bucket>
              <bucket>&quot;Dean Katz&quot;</bucket>
              <bucket>&quot;Barry Pond&quot;</bucket>
              <bucket>&quot;James Lanier&quot;</bucket>
              <bucket>&quot;Richard Eichhorn&quot;</bucket>
              <bucket>&quot;Chad Cunningham&quot;</bucket>
              <bucket>&quot;Roger Demir&quot;</bucket>
              <bucket>&quot;Brian DeCherney&quot;</bucket>
              <bucket>&quot;John Grady&quot;</bucket>
              <bucket>&quot;Corey-Lock&quot;</bucket>
              <bucket>&quot;Victor Preis&quot;</bucket>
              <bucket>&quot;Cynthia Arntzen&quot;</bucket>
              <bucket>&quot;Jas O&apos;Carroll&quot;</bucket>
              <bucket>&quot;Julie Creighton&quot;</bucket>
              <bucket>&quot;Julia Barnett&quot;</bucket>
              <bucket>&quot;Jennifer Jackson&quot;</bucket>
              <bucket>&quot;Shirley Schmidt&quot;</bucket>
              <bucket>&quot;Don Miller&quot;</bucket>
              <bucket>&quot;Stuart Van&quot;</bucket>
              <bucket>&quot;Paul Stevenson&quot;</bucket>
              <bucket>&quot;Frank Merwin&quot;</bucket>
              <bucket>&quot;Philip Fox&quot;</bucket>
              <bucket>&quot;Matt Connell&quot;</bucket>
              <bucket>&quot;Cathy Hwang&quot;</bucket>
              <bucket>&quot;Alice McCarthy&quot;</bucket>
              <bucket>&quot;Kean Thornton&quot;</bucket>
              <bucket>&quot;Bryan Spruell&quot;</bucket>
              <bucket>&quot;Darrin Sayre&quot;</bucket>
              <bucket>&quot;Liz Willingham&quot;</bucket>
              <bucket>&quot;Parhena Norris&quot;</bucket>
              <bucket>&quot;Fred McMath&quot;</bucket>
              <bucket>&quot;Mark Van Huff&quot;</bucket>
              <bucket>&quot;Greg Maxwell&quot;</bucket>
              <bucket>&quot;Craig Carreira&quot;</bucket>
              <bucket>&quot;Hallie Redmond&quot;</bucket>
              <bucket>&quot;Cari Sayre&quot;</bucket>
              <bucket>&quot;Eugene Barchas&quot;</bucket>
              <bucket>&quot;Thomas Brumley&quot;</bucket>
              <bucket>&quot;Magdelene Morse&quot;</bucket>
              <bucket>&quot;Duane Benoit&quot;</bucket>
              <bucket>&quot;Craig Molinari&quot;</bucket>
              <bucket>&quot;Dorris liebe&quot;</bucket>
              <bucket>&quot;Rob Haberlin&quot;</bucket>
              <bucket>&quot;Michael Granlund&quot;</bucket>
              <bucket>&quot;Mick Hernandez&quot;</bucket>
              <bucket>&quot;Dean Braden&quot;</bucket>
              <bucket>&quot;Claire Gute&quot;</bucket>
              <bucket>&quot;Meg O&apos;Connel&quot;</bucket>
              <bucket>&quot;Sally Knutson&quot;</bucket>
              <bucket>&quot;Jesus Ocampo&quot;</bucket>
              <bucket>&quot;David Smith&quot;</bucket>
              <bucket>&quot;Mathew Reese&quot;</bucket>
              <bucket>&quot;Erica Bern&quot;</bucket>
              <bucket>&quot;Laurel Elliston&quot;</bucket>
              <bucket>&quot;Carol Triggs&quot;</bucket>
              <bucket>&quot;Paul MacIntyre&quot;</bucket>
              <bucket>&quot;Sarah Bern&quot;</bucket>
              <bucket>&quot;Kimberly Carter&quot;</bucket>
              <bucket>&quot;Chuck Sachs&quot;</bucket>
              <bucket>&quot;Jennifer Braxton&quot;</bucket>
              <bucket>&quot;Annie Zypern&quot;</bucket>
              <bucket>&quot;Cindy Chapman&quot;</bucket>
              <bucket>&quot;Julia West&quot;</bucket>
              <bucket>&quot;Anthony Jacobs&quot;</bucket>
              <bucket>&quot;Erica Hackney&quot;</bucket>
              <bucket>&quot;Cassandra Brandow&quot;</bucket>
              <bucket>&quot;Lori Olson&quot;</bucket>
              <bucket>&quot;Harry Greene&quot;</bucket>
              <bucket>&quot;Emily Phan&quot;</bucket>
              <bucket>&quot;Corey Roper&quot;</bucket>
              <bucket>&quot;Sanjit Jacobs&quot;</bucket>
              <bucket>&quot;Chad Sievert&quot;</bucket>
              <bucket>&quot;Vivek Gonzalez&quot;</bucket>
              <bucket>&quot;Brian Derr&quot;</bucket>
              <bucket>&quot;Chloris Kastensmidt&quot;</bucket>
              <bucket>&quot;Bryan Davis&quot;</bucket>
              <bucket>&quot;Tracy Poddar&quot;</bucket>
              <bucket>&quot;Brad Eason&quot;</bucket>
              <bucket>&quot;Michelle Lonsdale&quot;</bucket>
              <bucket>&quot;Bryan Mills&quot;</bucket>
              <bucket>&quot;Patrick Gardner&quot;</bucket>
              <bucket>&quot;Guy Armstrong&quot;</bucket>
              <bucket>&quot;Ann Steele&quot;</bucket>
              <bucket>&quot;Sonia Sunley&quot;</bucket>
              <bucket>&quot;Debra Catini&quot;</bucket>
              <bucket>&quot;Aaron Bergman&quot;</bucket>
              <bucket>&quot;Brad Thomas&quot;</bucket>
              <bucket>&quot;Joy Bell-&quot;</bucket>
              <bucket>&quot;Julie Kriz&quot;</bucket>
              <bucket>&quot;Matt Hagelstein&quot;</bucket>
              <bucket>&quot;Mike Caudle&quot;</bucket>
              <bucket>&quot;Neil Knudson&quot;</bucket>
              <bucket>&quot;Bruce Geld&quot;</bucket>
              <bucket>&quot;Tony Chapman&quot;</bucket>
              <bucket>&quot;Mick Brown&quot;</bucket>
              <bucket>&quot;Nona Balk&quot;</bucket>
              <bucket>&quot;Henry MacAllister&quot;</bucket>
              <bucket>&quot;Jim Mitchum&quot;</bucket>
              <bucket>&quot;Brendan Dodson&quot;</bucket>
              <bucket>&quot;Duane Huffman&quot;</bucket>
              <bucket>&quot;Vivian Mathis&quot;</bucket>
              <bucket>&quot;Kean Nguyen&quot;</bucket>
              <bucket>&quot;Charles Sheldon&quot;</bucket>
              <bucket>&quot;Jill Matthias&quot;</bucket>
              <bucket>&quot;Julia Dunbar&quot;</bucket>
              <bucket>&quot;Bart Folk&quot;</bucket>
              <bucket>&quot;Liz Pelletier&quot;</bucket>
              <bucket>&quot;Dorothy Badders&quot;</bucket>
              <bucket>&quot;Dario Medina&quot;</bucket>
              <bucket>&quot;Jocasta Rupert&quot;</bucket>
              <bucket>&quot;Kelly Williams&quot;</bucket>
              <bucket>&quot;Brooke Gillingham&quot;</bucket>
              <bucket>&quot;Michelle Ellison&quot;</bucket>
              <bucket>&quot;Susan Vittorini&quot;</bucket>
              <bucket>&quot;Cari Schnelling&quot;</bucket>
              <bucket>&quot;Emily Grady&quot;</bucket>
              <bucket>&quot;Andy Yotov&quot;</bucket>
              <bucket>&quot;Eric Murdock&quot;</bucket>
              <bucket>&quot;Alyssa Tate&quot;</bucket>
              <bucket>&quot;Sonia Cooley&quot;</bucket>
              <bucket>&quot;Helen Andreada&quot;</bucket>
              <bucket>&quot;Cynthia Voltz&quot;</bucket>
              <bucket>&quot;Heather Jas&quot;</bucket>
              <bucket>&quot;Jason Fortune-&quot;</bucket>
              <bucket>&quot;Eileen Kiefer&quot;</bucket>
              <bucket>&quot;Erin Creighton&quot;</bucket>
              <bucket>&quot;Eugene Hildebrand&quot;</bucket>
              <bucket>&quot;Sean Wendt&quot;</bucket>
              <bucket>&quot;Brendan Murry&quot;</bucket>
              <bucket>&quot;Tim Taslimi&quot;</bucket>
              <bucket>&quot;Tiffany House&quot;</bucket>
              <bucket>&quot;Charlotte Melton&quot;</bucket>
              <bucket>&quot;Khloe Miller&quot;</bucket>
              <bucket>&quot;Tamara Dahlen&quot;</bucket>
              <bucket>&quot;Liz Carlisle&quot;</bucket>
              <bucket>&quot;Hilary Holden&quot;</bucket>
              <bucket>&quot;Catherine Glotzbach&quot;</bucket>
              <bucket>&quot;Neil Französisch&quot;</bucket>
              <bucket>&quot;Maria Zettner&quot;</bucket>
              <bucket>&quot;Shui Tom&quot;</bucket>
              <bucket>&quot;MaryBeth Skach&quot;</bucket>
              <bucket>&quot;Angele Hood&quot;</bucket>
              <bucket>&quot;Cyra Reiten&quot;</bucket>
              <bucket>&quot;Michael Moore&quot;</bucket>
              <bucket>&quot;Max Engle&quot;</bucket>
              <bucket>&quot;Rob Beeghly&quot;</bucket>
              <bucket>&quot;Clay Rozendal&quot;</bucket>
              <bucket>&quot;Robert Barroso&quot;</bucket>
              <bucket>&quot;Don Weiss&quot;</bucket>
              <bucket>&quot;Allen Goldenen&quot;</bucket>
              <bucket>&quot;Steven Ward&quot;</bucket>
              <bucket>&quot;Shirley Jackson&quot;</bucket>
              <bucket>&quot;Anthony Witt&quot;</bucket>
              <bucket>&quot;Adam Shillingsburg&quot;</bucket>
              <bucket>&quot;Chuck Magee&quot;</bucket>
              <bucket>&quot;Roy Collins&quot;</bucket>
              <bucket>&quot;Mark Haberlin&quot;</bucket>
              <bucket>&quot;Craig Yedwab&quot;</bucket>
              <bucket>&quot;Astrea Jones&quot;</bucket>
              <bucket>&quot;Rachel Payne&quot;</bucket>
              <bucket>&quot;Bobby Odegard&quot;</bucket>
              <bucket>&quot;Mary O&apos;Rourke&quot;</bucket>
              <bucket>&quot;Aleksandra Gannaway&quot;</bucket>
              <bucket>&quot;Larry Tron&quot;</bucket>
              <bucket>&quot;Muhammed MacIntyre&quot;</bucket>
              <bucket>&quot;Dianna Arnett&quot;</bucket>
              <bucket>&quot;Jason Klamczynski&quot;</bucket>
              <bucket>&quot;Michael Stewart&quot;</bucket>
              <bucket>&quot;Joe Kamberova&quot;</bucket>
              <bucket>&quot;Janet Lee&quot;</bucket>
              <bucket>&quot;Eric Hoffmann&quot;</bucket>
              <bucket>&quot;Stuart Calhoun&quot;</bucket>
              <bucket>&quot;Karl Braun&quot;</bucket>
              <bucket>&quot;Tom Stivers&quot;</bucket>
              <bucket>&quot;Patricia Hirasaki&quot;</bucket>
              <bucket>&quot;Andrew Roberts&quot;</bucket>
              <bucket>&quot;Muhammed Lee&quot;</bucket>
              <bucket>&quot;Erin Mull&quot;</bucket>
              <bucket>&quot;Lycoris Saunders&quot;</bucket>
              <bucket>&quot;Patrick O&apos;Brill&quot;</bucket>
              <bucket>&quot;Brad Norvell&quot;</bucket>
              <bucket>&quot;Dorothy Dickinson&quot;</bucket>
              <bucket>&quot;Greg Matthias&quot;</bucket>
              <bucket>&quot;Russell D&apos;Ascenzo&quot;</bucket>
              <bucket>&quot;Joel Jenkins&quot;</bucket>
              <bucket>&quot;Clay Cheatham&quot;</bucket>
              <bucket>&quot;Alan Shonely&quot;</bucket>
              <bucket>&quot;Anemone Ratner&quot;</bucket>
              <bucket>&quot;Laurel Workman&quot;</bucket>
              <bucket>&quot;Guy Phonely&quot;</bucket>
              <bucket>&quot;Sung Chung&quot;</bucket>
              <bucket>&quot;Marc Harrigan&quot;</bucket>
              <bucket>&quot;Roland Murray&quot;</bucket>
              <bucket>&quot;Ed Ludwig&quot;</bucket>
              <bucket>&quot;Joy Daniels&quot;</bucket>
              <bucket>&quot;John Huston&quot;</bucket>
              <bucket>&quot;Maureen Gastineau&quot;</bucket>
              <bucket>&quot;Beth Fritzler&quot;</bucket>
              <bucket>&quot;Nicole Brennan&quot;</bucket>
              <bucket>&quot;Fred Wasserman&quot;</bucket>
              <bucket>&quot;Phillip Breyer&quot;</bucket>
              <bucket>&quot;Adrian Shami&quot;</bucket>
              <bucket>&quot;Evan Minnotte&quot;</bucket>
              <bucket>&quot;Janet Martin&quot;</bucket>
              <bucket>&quot;Melanie Seite&quot;</bucket>
              <bucket>&quot;Larry Blacks&quot;</bucket>
              <bucket>&quot;Susan Pistek&quot;</bucket>
              <bucket>&quot;Ed Braxton&quot;</bucket>
              <bucket>&quot;Greg Guthrie&quot;</bucket>
              <bucket>&quot;Larry Hughes&quot;</bucket>
              <bucket>&quot;Anthony O&apos;Donnell&quot;</bucket>
              <bucket>&quot;Barry Blumstein&quot;</bucket>
              <bucket>&quot;Tony Sayre&quot;</bucket>
              <bucket>&quot;Ryan Crowe&quot;</bucket>
              <bucket>&quot;Roy Skaria&quot;</bucket>
              <bucket>&quot;George Bell&quot;</bucket>
              <bucket>&quot;Ricardo Emerson&quot;</bucket>
              <bucket>&quot;Daniel Lacy&quot;</bucket>
              <bucket>&quot;Jason Gross&quot;</bucket>
              <bucket>&quot;Carl Jackson&quot;</bucket>
              <bucket>&quot;Eric Barreto&quot;</bucket>
              <bucket>&quot;Lela Donovan&quot;</bucket>
              <bucket>&quot;Ritsa Hightower&quot;</bucket>
              <bucket>&quot;Karen Seio&quot;</bucket>
              <bucket>&quot;Jasper Cacioppo&quot;</bucket>
              <bucket>&quot;Paul Lucas&quot;</bucket>
              <bucket>&quot;Mitch Gastineau&quot;</bucket>
              <bucket>&quot;Adrian Hane&quot;</bucket>
              <bucket>&quot;Thais Sissman&quot;</bucket>
              <bucket>&quot;Susan Gilcrest&quot;</bucket>
              <bucket>&quot;Michael Dominguez&quot;</bucket>
              <bucket>&quot;Alex Grayson&quot;</bucket>
              <bucket>&quot;Greg Hansen&quot;</bucket>
              <bucket>&quot;Odella Nelson&quot;</bucket>
              <bucket>&quot;Guy Thornton&quot;</bucket>
              <bucket>&quot;Anthony Garverick&quot;</bucket>
              <bucket>&quot;Neola Schneider&quot;</bucket>
              <bucket>&quot;Jonathan Howell&quot;</bucket>
              <bucket>&quot;Herbert Flentye&quot;</bucket>
              <bucket>&quot;Bill Stewart&quot;</bucket>
              <bucket>&quot;Jeremy Farry&quot;</bucket>
              <bucket>&quot;Scot Wooten&quot;</bucket>
              <bucket>&quot;Pete Takahito&quot;</bucket>
              <bucket>&quot;Sarah Jordon&quot;</bucket>
              <bucket>&quot;Michelle Tran&quot;</bucket>
              <bucket>&quot;Jennifer Halladay&quot;</bucket>
              <bucket>&quot;Nick Radford&quot;</bucket>
              <bucket>&quot;Sally Matthias&quot;</bucket>
              <bucket>&quot;Anna Chung&quot;</bucket>
              <bucket>&quot;Joni Wasserman&quot;</bucket>
              <bucket>&quot;Denny Ordway&quot;</bucket>
              <bucket>&quot;David Philippe&quot;</bucket>
              <bucket>&quot;Carlos Meador&quot;</bucket>
              <bucket>&quot;Liz MacKendrick&quot;</bucket>
              <bucket>&quot;Phillina Ober&quot;</bucket>
              <bucket>&quot;Laurel Beltran&quot;</bucket>
              <bucket>&quot;Vivek Grady&quot;</bucket>
              <bucket>&quot;Erin Ashbrook&quot;</bucket>
              <bucket>&quot;Dionis Lloyd&quot;</bucket>
              <bucket>&quot;Jim Sink&quot;</bucket>
              <bucket>&quot;Barry Weirich&quot;</bucket>
              <bucket>&quot;Alyssa Crouse&quot;</bucket>
              <bucket>&quot;Berenike Kampe&quot;</bucket>
              <bucket>&quot;Mick Crebagga&quot;</bucket>
              <bucket>&quot;Ralph Ritter&quot;</bucket>
              <bucket>&quot;Sung Shariari&quot;</bucket>
              <bucket>&quot;Maris LaWare&quot;</bucket>
              <bucket>&quot;Bobby Trafton&quot;</bucket>
              <bucket>&quot;Edward Becker&quot;</bucket>
              <bucket>&quot;Sean O&apos;Donnell&quot;</bucket>
              <bucket>&quot;Michael Oakman&quot;</bucket>
              <bucket>&quot;David Wiener&quot;</bucket>
              <bucket>&quot;Mike Gockenbach&quot;</bucket>
              <bucket>&quot;Erica Hernandez&quot;</bucket>
              <bucket>&quot;Gene Hale&quot;</bucket>
              <bucket>&quot;Vicky Freymann&quot;</bucket>
              <bucket>&quot;Justin Hirsh&quot;</bucket>
              <bucket>&quot;Allen Rosenblatt&quot;</bucket>
              <bucket>&quot;Arthur Wiediger&quot;</bucket>
              <bucket>&quot;Darren Koutras&quot;</bucket>
              <bucket>&quot;Bruce Stewart&quot;</bucket>
              <bucket>&quot;Sibella Parks&quot;</bucket>
              <bucket>&quot;Sheri Gordon&quot;</bucket>
              <bucket>&quot;Carlos Soltero&quot;</bucket>
              <bucket>&quot;Henia Zydlo&quot;</bucket>
              <bucket>&quot;Eleni McCrary&quot;</bucket>
              <bucket>&quot;Pamela Stobb&quot;</bucket>
              <bucket>&quot;Thea Hendricks&quot;</bucket>
              <bucket>&quot;Harold Dahlen&quot;</bucket>
              <bucket>&quot;Troy Blackwell&quot;</bucket>
              <bucket>&quot;Shahid Hopkins&quot;</bucket>
              <bucket>&quot;Katherine Nockton&quot;</bucket>
              <bucket>&quot;Andy Gerbode&quot;</bucket>
              <bucket>&quot;Art Foster&quot;</bucket>
              <bucket>&quot;Randy Bradley&quot;</bucket>
              <bucket>&quot;Jill Stevenson&quot;</bucket>
              <bucket>&quot;Kelly Lampkin&quot;</bucket>
              <bucket>&quot;Pauline Chand&quot;</bucket>
              <bucket>&quot;Toby Swindell&quot;</bucket>
              <bucket>&quot;Lena Cacioppo&quot;</bucket>
              <bucket>&quot;Amy Hunt&quot;</bucket>
              <bucket>&quot;Benjamin Patterson&quot;</bucket>
              <bucket>&quot;Carol Darley&quot;</bucket>
              <bucket>&quot;Jack Lebron&quot;</bucket>
              <bucket>&quot;Alex Russell&quot;</bucket>
              <bucket>&quot;Valerie Takahito&quot;</bucket>
              <bucket>&quot;Noel Staavos&quot;</bucket>
              <bucket>&quot;Susan MacKendrick&quot;</bucket>
              <bucket>&quot;Maribeth Dona&quot;</bucket>
              <bucket>&quot;Lisa Hazard&quot;</bucket>
              <bucket>&quot;Anna Gayman&quot;</bucket>
              <bucket>&quot;Matthew Clasen&quot;</bucket>
              <bucket>&quot;Thea Hudgings&quot;</bucket>
              <bucket>&quot;Aaron Smayling&quot;</bucket>
              <bucket>&quot;David Flashing&quot;</bucket>
              <bucket>&quot;Vivek Sundaresam&quot;</bucket>
              <bucket>&quot;John Dryer&quot;</bucket>
              <bucket>&quot;Dorothy Wardle&quot;</bucket>
              <bucket>&quot;Giulietta Weimer&quot;</bucket>
              <bucket>&quot;Stefania Perrino&quot;</bucket>
              <bucket>&quot;Ann Blume&quot;</bucket>
              <bucket>&quot;Joni Blumstein&quot;</bucket>
              <bucket>&quot;Barry Franz&quot;</bucket>
              <bucket>&quot;Troy Staebel&quot;</bucket>
              <bucket>&quot;Elpida Rittenbach&quot;</bucket>
              <bucket>&quot;Cindy Schnelling&quot;</bucket>
              <bucket>&quot;Joy Smith&quot;</bucket>
              <bucket>&quot;Sam Craven&quot;</bucket>
              <bucket>&quot;Linda Southworth&quot;</bucket>
              <bucket>&quot;Beth Paige&quot;</bucket>
              <bucket>&quot;Joni Sundaresam&quot;</bucket>
              <bucket>&quot;Cyma Kinney&quot;</bucket>
              <bucket>&quot;Maureen Fritzler&quot;</bucket>
              <bucket>&quot;Christopher Schild&quot;</bucket>
              <bucket>&quot;Noah Childs&quot;</bucket>
              <bucket>&quot;Alex Avila&quot;</bucket>
              <bucket>&quot;Muhammed Yedwab&quot;</bucket>
              <bucket>&quot;Alan Haines&quot;</bucket>
              <bucket>&quot;Lisa Ryan&quot;</bucket>
              <bucket>&quot;Charles McCrossin&quot;</bucket>
              <bucket>&quot;Maureen Gnade&quot;</bucket>
              <bucket>&quot;Michael Kennedy&quot;</bucket>
              <bucket>&quot;Darrin Van Huff&quot;</bucket>
              <bucket>&quot;Ryan Akin&quot;</bucket>
              <bucket>&quot;Ross Baird&quot;</bucket>
              <bucket>&quot;Michael Grace&quot;</bucket>
              <bucket>&quot;Michelle Moray&quot;</bucket>
              <bucket>&quot;Tracy Hopkins&quot;</bucket>
              <bucket>&quot;Gary Hansen&quot;</bucket>
              <bucket>&quot;Peter Fuller&quot;</bucket>
              <bucket>&quot;Joseph Holt&quot;</bucket>
              <bucket>&quot;Stewart Carmichael&quot;</bucket>
              <bucket>&quot;Tanja Norvell&quot;</bucket>
              <bucket>&quot;Barry Gonzalez&quot;</bucket>
              <bucket>&quot;Skye Norling&quot;</bucket>
              <bucket>&quot;Jim Radford&quot;</bucket>
              <bucket>&quot;Paul Knutson&quot;</bucket>
              <bucket>&quot;Joseph Airdo&quot;</bucket>
              <bucket>&quot;Victoria Wilson&quot;</bucket>
              <bucket>&quot;Olvera Toch&quot;</bucket>
              <bucket>&quot;Shahid Shariari&quot;</bucket>
              <bucket>&quot;Victoria Pisteka&quot;</bucket>
              <bucket>&quot;Zuschuss Carroll&quot;</bucket>
              <bucket>&quot;Tom Prescott&quot;</bucket>
              <bucket>&quot;Rose O&apos;Brian&quot;</bucket>
              <bucket>&quot;David Bremer&quot;</bucket>
              <bucket>&quot;Dan Campbell&quot;</bucket>
              <bucket>&quot;Tracy Blumstein&quot;</bucket>
              <bucket>&quot;Becky Martin&quot;</bucket>
              <bucket>&quot;Natalie Fritzler&quot;</bucket>
              <bucket>&quot;Christine Phan&quot;</bucket>
              <bucket>&quot;Sean Miller&quot;</bucket>
              <bucket>&quot;Sean Braxton&quot;</bucket>
              <bucket>&quot;Nathan Cano&quot;</bucket>
              <bucket>&quot;Henry Goldwyn&quot;</bucket>
              <bucket>&quot;Sharelle Roach&quot;</bucket>
              <bucket>&quot;Luke Foster&quot;</bucket>
              <bucket>&quot;Grant Thornton&quot;</bucket>
              <bucket>&quot;Cindy Stewart&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0npl5ro0vzsntn152kadd148jqod].[Customer Name Set]</column>
            <column>[federated.0npl5ro0vzsntn152kadd148jqod].[none:Customer Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0npl5ro0vzsntn152kadd148jqod].[io:Customer Name Set:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0npl5ro0vzsntn152kadd148jqod].[pcto:sum:Profit:qk]</rows>
        <cols>[federated.0npl5ro0vzsntn152kadd148jqod].[none:Customer Name:nk]</cols>
      </table>
      <simple-id uuid='{31B7E1F5-0289-4DF7-985D-2FB59312153E}' />
    </worksheet>
    <worksheet name='Q2.1 Avg (Sales)Text Table'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.0npl5ro0vzsntn152kadd148jqod' />
          </datasources>
          <datasource-dependencies datasource='federated.0npl5ro0vzsntn152kadd148jqod'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sales]' derivation='Avg' name='[avg:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0npl5ro0vzsntn152kadd148jqod].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0npl5ro0vzsntn152kadd148jqod].[avg:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='91' />
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0npl5ro0vzsntn152kadd148jqod].[none:Sub-Category:nk]' />
              <text column='[federated.0npl5ro0vzsntn152kadd148jqod].[avg:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0npl5ro0vzsntn152kadd148jqod].[none:Sub-Category:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{5A2A25E7-AD41-4912-88BE-FE60AE978B14}' />
    </worksheet>
    <worksheet name='Q2.2 Heat Table'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.0npl5ro0vzsntn152kadd148jqod' />
          </datasources>
          <datasource-dependencies datasource='federated.0npl5ro0vzsntn152kadd148jqod'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sales]' derivation='Count' name='[cnt:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0npl5ro0vzsntn152kadd148jqod].[sum:Profit:qk]' palette='red_green_diverging_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.0npl5ro0vzsntn152kadd148jqod].[cnt:Sales:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0npl5ro0vzsntn152kadd148jqod].[cnt:Sales:qk]' />
              <size column='[federated.0npl5ro0vzsntn152kadd148jqod].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0npl5ro0vzsntn152kadd148jqod].[none:Sub-Category:nk]</rows>
        <cols>([federated.0npl5ro0vzsntn152kadd148jqod].[yr:Order Date:ok] / [federated.0npl5ro0vzsntn152kadd148jqod].[none:Region:nk])</cols>
      </table>
      <simple-id uuid='{B23B85AD-CDAE-4E52-9245-77386E07085C}' />
    </worksheet>
    <worksheet name='Q2.3 Highlight Table'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.0npl5ro0vzsntn152kadd148jqod' />
          </datasources>
          <datasource-dependencies datasource='federated.0npl5ro0vzsntn152kadd148jqod'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0npl5ro0vzsntn152kadd148jqod].[sum:Profit:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0npl5ro0vzsntn152kadd148jqod].[sum:Profit:qk]' />
              <text column='[federated.0npl5ro0vzsntn152kadd148jqod].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0npl5ro0vzsntn152kadd148jqod].[none:State:nk]</rows>
        <cols>[federated.0npl5ro0vzsntn152kadd148jqod].[yr:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{03FC7147-8CB8-4228-8C57-407C9243D250}' />
    </worksheet>
    <worksheet name='Q2.4 Customer Having Max Sales in 2012'>
      <layout-options>
        <caption>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='12'>Customer Name Sean Miller has the maximum Sales in 2012 year.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.0npl5ro0vzsntn152kadd148jqod' />
          </datasources>
          <datasource-dependencies datasource='federated.0npl5ro0vzsntn152kadd148jqod'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Max' name='[max:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Year-Trunc' name='[tyr:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0npl5ro0vzsntn152kadd148jqod].[none:Customer Name:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Aaron Hawkins&quot;' />
                  <groupfilter from='&quot;Adam Bellavance&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Adrian Barton&quot;' />
                  <groupfilter from='&quot;Aimee Bixby&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Alejandro Grove&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Aleksandra Gannaway&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Alex Avila&quot;' />
                  <groupfilter from='&quot;Alex Russell&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Allen Armold&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Allen Rosenblatt&quot;' />
                  <groupfilter from='&quot;Alyssa Tate&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Amy Hunt&quot;' />
                  <groupfilter from='&quot;Andrew Gjertsen&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Andy Reiter&quot;' />
                  <groupfilter from='&quot;Ann Blume&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Anna Andreadi&quot;' />
                  <groupfilter from='&quot;Anna Gayman&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Anthony Jacobs&quot;' />
                  <groupfilter from='&quot;Anthony Rawles&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Arthur Gainer&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Arthur Wiediger&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Ashley Jarboe&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Barbara Fisher&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Barry Blumstein&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Barry Französisch&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Barry Gonzalez&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Barry Weirich&quot;' />
                  <groupfilter from='&quot;Bart Pistole&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Becky Castell&quot;' />
                  <groupfilter from='&quot;Becky Pak&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Ben Peterman&quot;' />
                  <groupfilter from='&quot;Benjamin Patterson&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Berenike Kampe&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Beth Thompson&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Bill Donatelli&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Bill Stewart&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Bill Tyler&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Bobby Odegard&quot;' />
                  <groupfilter from='&quot;Brad Eason&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Bradley Drucker&quot;' />
                  <groupfilter from='&quot;Brenda Bowman&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Brian Dahlen&quot;' />
                  <groupfilter from='&quot;Brian Derr&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Bruce Stewart&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Bryan Mills&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Bryan Spruell&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Cari Sayre&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Cari Schnelling&quot;' />
                  <groupfilter from='&quot;Carl Weiss&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Carol Adams&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Carol Triggs&quot;' />
                  <groupfilter from='&quot;Cassandra Brandow&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Charles Crestani&quot;' />
                  <groupfilter from='&quot;Charlotte Melton&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Chris Cortes&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Chris Selesnick&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Christina Anderson&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Christine Phan&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Christine Sundaresam&quot;' />
                  <groupfilter from='&quot;Christopher Martinez&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Chuck Clark&quot;' />
                  <groupfilter from='&quot;Cindy Schnelling&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Claudia Bergmann&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Clay Ludtke&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Clytie Kelty&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Corey Catlett&quot;' />
                  <groupfilter from='&quot;Corey-Lock&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Craig Carroll&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Craig Molinari&quot;' />
                  <groupfilter from='&quot;Craig Yedwab&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Cynthia Delaney&quot;' />
                  <groupfilter from='&quot;Cyra Reiten&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Dana Kaydos&quot;' />
                  <groupfilter from='&quot;Daniel Lacy&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Darrin Martin&quot;' />
                  <groupfilter from='&quot;Dave Hallsten&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;David Flashing&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;David Philippe&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;David Smith&quot;' />
                  <groupfilter from='&quot;Dean Braden&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Deirdre Greer&quot;' />
                  <groupfilter from='&quot;Denise Leinenbach&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Denny Ordway&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Dianna Vittorini&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Dionis Lloyd&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Don Miller&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Dorothy Wardle&quot;' />
                  <groupfilter from='&quot;Doug Bickford&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Duane Huffman&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Ed Braxton&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Ed Jacobs&quot;' />
                  <groupfilter from='&quot;Edward Becker&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Emily Phan&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Eric Hoffmann&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Eric Murdock&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Erica Hackney&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Erica Smith&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Erin Ashbrook&quot;' />
                  <groupfilter from='&quot;Erin Smith&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Eugene Moren&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Evan Bailliet&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Evan Minnotte&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Frank Atkinson&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Frank Carlisle&quot;' />
                  <groupfilter from='&quot;Frank Merwin&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Gary Hwang&quot;' />
                  <groupfilter from='&quot;Gary Zandusky&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;George Bell&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Giulietta Baptist&quot;' />
                  <groupfilter from='&quot;Giulietta Weimer&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Greg Hansen&quot;' />
                  <groupfilter from='&quot;Greg Tran&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Harold Dahlen&quot;' />
                  <groupfilter from='&quot;Harold Pawlan&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Helen Wasserman&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Henry Goldwyn&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Henry MacAllister&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Hunter Glantz&quot;' />
                  <groupfilter from='&quot;Irene Maddox&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Jack Garza&quot;' />
                  <groupfilter from='&quot;James Galang&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Janet Lee&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Janet Molinari&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Jas O&apos;Carroll&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Jay Fein&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Jay Kimmel&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Jennifer Braxton&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Jennifer Ferguson&quot;' />
                  <groupfilter from='&quot;Jennifer Jackson&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Jeremy Farry&quot;' />
                  <groupfilter from='&quot;Jeremy Pistek&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Jill Fjeld&quot;' />
                  <groupfilter from='&quot;Jill Stevenson&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Jim Kriz&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Jim Radford&quot;' />
                  <groupfilter from='&quot;Joe Elijah&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Joni Wasserman&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Joseph Holt&quot;' />
                  <groupfilter from='&quot;Julia Barnett&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Justin Deggeller&quot;' />
                  <groupfilter from='&quot;Justin Hirsh&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Karen Daniels&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Karen Seio&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Karl Braun&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Katherine Ducich&quot;' />
                  <groupfilter from='&quot;Katherine Murray&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Kelly Collister&quot;' />
                  <groupfilter from='&quot;Kelly Williams&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Khloe Miller&quot;' />
                  <groupfilter from='&quot;Kristen Hastings&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Kunst Miller&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Larry Tron&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Laura Armstrong&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Laurel Elliston&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Lauren Leatherbury&quot;' />
                  <groupfilter from='&quot;Lena Cacioppo&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Lena Radford&quot;' />
                  <groupfilter from='&quot;Linda Southworth&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Lindsay Shagiari&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Lisa Hazard&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Lisa Ryan&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Liz MacKendrick&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Liz Thompson&quot;' />
                  <groupfilter from='&quot;Logan Currie&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Luke Foster&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Lycoris Saunders&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Lynn Smith&quot;' />
                  <groupfilter from='&quot;Marc Crier&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Marina Lichtenstein&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Mark Cousins&quot;' />
                  <groupfilter from='&quot;Mark Hamilton&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Mark Van Huff&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Mary Zewe&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;MaryBeth Skach&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Matt Abelman&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Matt Collins&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Matt Connell&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Matt Hagelstein&quot;' />
                  <groupfilter from='&quot;Maureen Gastineau&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Max Jones&quot;' />
                  <groupfilter from='&quot;Maxwell Schwartz&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Melanie Seite&quot;' />
                  <groupfilter from='&quot;Michael Grace&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Michael Moore&quot;' />
                  <groupfilter from='&quot;Michael Oakman&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Michelle Huthwaite&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Michelle Moray&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Michelle Tran&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Mick Crebagga&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Mike Caudle&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Mike Gockenbach&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Mike Pelletier&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Mike Vittorini&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Mitch Webber&quot;' />
                  <groupfilter from='&quot;Monica Federle&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Muhammed MacIntyre&quot;' />
                  <groupfilter from='&quot;Nancy Lomonaco&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Neil Knudson&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Neoma Murray&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Nick Zandusky&quot;' />
                  <groupfilter from='&quot;Nicole Fjeld&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Nora Pelletier&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Odella Nelson&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Olvera Toch&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Pamela Stobb&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Parhena Norris&quot;' />
                  <groupfilter from='&quot;Patrick Bzostek&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Patrick O&apos;Brill&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Patrick Ryan&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Paul Gonzalez&quot;' />
                  <groupfilter from='&quot;Paul MacIntyre&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Paul Stevenson&quot;' />
                  <groupfilter from='&quot;Pauline Chand&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Pete Armstrong&quot;' />
                  <groupfilter from='&quot;Peter Fuller&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Phillina Ober&quot;' />
                  <groupfilter from='&quot;Pierre Wener&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Ralph Kennedy&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Randy Ferguson&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Raymond Messe&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Resi Pölking&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Richard Bierner&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Richard Eichhorn&quot;' />
                  <groupfilter from='&quot;Rick Duston&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Ritsa Hightower&quot;' />
                  <groupfilter from='&quot;Rob Dowd&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Rob Lucas&quot;' />
                  <groupfilter from='&quot;Robert Barroso&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Robert Marley&quot;' />
                  <groupfilter from='&quot;Roger Barcio&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Roland Fjeld&quot;' />
                  <groupfilter from='&quot;Roland Schwarz&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Ross Baird&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Roy Französisch&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Roy Phan&quot;' />
                  <groupfilter from='&quot;Ruben Ausman&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Ryan Akin&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Sally Hughsby&quot;' />
                  <groupfilter from='&quot;Sam Craven&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Sara Luxemburg&quot;' />
                  <groupfilter from='&quot;Sarah Brown&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Sarah Jordon&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Scot Wooten&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Scott Cohen&quot;' />
                  <groupfilter from='&quot;Sean Braxton&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Sean O&apos;Donnell&quot;' />
                  <groupfilter from='&quot;Seth Vernon&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Shahid Shariari&quot;' />
                  <groupfilter from='&quot;Shaun Chance&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Shirley Daniels&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Shirley Schmidt&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Shui Tom&quot;' />
                  <groupfilter from='&quot;Skye Norling&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Steven Roelle&quot;' />
                  <groupfilter from='&quot;Stewart Carmichael&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Sue Ann Reed&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Sung Pak&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Sung Shariari&quot;' />
                  <groupfilter from='&quot;Suzanne McNair&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Tanja Norvell&quot;' />
                  <groupfilter from='&quot;Ted Trevino&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Thea Hendricks&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Theone Pippenger&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Theresa Swint&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Thomas Brumley&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Thomas Thornton&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Tim Brockman&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Tim Taslimi&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Toby Gnade&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Toby Swindell&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Todd Sumrall&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Tom Prescott&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Tonja Turnell&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Tony Chapman&quot;' />
                  <groupfilter from='&quot;Tracy Blumstein&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Tracy Zic&quot;' />
                  <groupfilter from='&quot;Trudy Brown&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Valerie Takahito&quot;' />
                  <groupfilter from='&quot;Victor Preis&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Victoria Wilson&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Vivek Sundaresam&quot;' />
                  <groupfilter from='&quot;William Brown&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Zuschuss Carroll&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0npl5ro0vzsntn152kadd148jqod].[yr:Order Date:ok]'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2012' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0npl5ro0vzsntn152kadd148jqod].[none:Customer Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0npl5ro0vzsntn152kadd148jqod].[max:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0npl5ro0vzsntn152kadd148jqod].[none:Customer Name:nk]</column>
            <column>[federated.0npl5ro0vzsntn152kadd148jqod].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0npl5ro0vzsntn152kadd148jqod].[max:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.8570718765258789' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0npl5ro0vzsntn152kadd148jqod].[none:Customer Name:nk]</rows>
        <cols>[federated.0npl5ro0vzsntn152kadd148jqod].[tyr:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{6A541C89-9AC8-4DEB-BF38-A8068C61C852}' />
    </worksheet>
    <worksheet name='Q2.5 Profit Comparision NY vs Pennsylvania'>
      <layout-options>
        <caption>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Calibri,Arial' fontsize='14'>By 89599$, profit share less in Pennsylvania when compared to New York .</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.0npl5ro0vzsntn152kadd148jqod' />
          </datasources>
          <datasource-dependencies datasource='federated.0npl5ro0vzsntn152kadd148jqod'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0npl5ro0vzsntn152kadd148jqod].[none:State:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New York&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Pennsylvania&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0npl5ro0vzsntn152kadd148jqod].[none:State:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0npl5ro0vzsntn152kadd148jqod].[sum:Profit:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0npl5ro0vzsntn152kadd148jqod].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0npl5ro0vzsntn152kadd148jqod].[sum:Profit:qk]' />
              <text column='[federated.0npl5ro0vzsntn152kadd148jqod].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0npl5ro0vzsntn152kadd148jqod].[none:State:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{68BBD0F5-55FC-46D1-A10B-8A9DA63B30AF}' />
    </worksheet>
    <worksheet name='Q2.6 Pane wise percentage of Total'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.0npl5ro0vzsntn152kadd148jqod' />
          </datasources>
          <datasource-dependencies datasource='federated.0npl5ro0vzsntn152kadd148jqod'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0npl5ro0vzsntn152kadd148jqod].[sum:Sales:qk]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0npl5ro0vzsntn152kadd148jqod].[sum:Sales:qk]' />
              <text column='[federated.0npl5ro0vzsntn152kadd148jqod].[pcto:sum:Sales:qk:5]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([federated.0npl5ro0vzsntn152kadd148jqod].[none:Category:nk] / [federated.0npl5ro0vzsntn152kadd148jqod].[none:Sub-Category:nk])</rows>
        <cols total='true'>[federated.0npl5ro0vzsntn152kadd148jqod].[qr:Order Date:ok]</cols>
        <subtotals>
          <column>[federated.0npl5ro0vzsntn152kadd148jqod].[none:Category:nk]</column>
        </subtotals>
      </table>
      <simple-id uuid='{0DA21908-AE61-4617-949A-553EDFBFE8C6}' />
    </worksheet>
    <worksheet name='Q3.2 Border Sharing States (Profit)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.0npl5ro0vzsntn152kadd148jqod' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0npl5ro0vzsntn152kadd148jqod'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0npl5ro0vzsntn152kadd148jqod].[none:Sub-Category:nk]'>
            <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Tables&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0npl5ro0vzsntn152kadd148jqod].[sum:Profit:qk]' included-values='in-range'>
            <min>8.0</min>
            <max>4875.9899999999998</max>
          </filter>
          <slices>
            <column>[federated.0npl5ro0vzsntn152kadd148jqod].[none:Sub-Category:nk]</column>
            <column>[federated.0npl5ro0vzsntn152kadd148jqod].[sum:Profit:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0npl5ro0vzsntn152kadd148jqod].[sum:Profit:qk]' value='' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0npl5ro0vzsntn152kadd148jqod].[sum:Profit:qk]' />
              <text column='[federated.0npl5ro0vzsntn152kadd148jqod].[none:State:nk]' />
              <text column='[federated.0npl5ro0vzsntn152kadd148jqod].[sum:Profit:qk]' />
              <lod column='[federated.0npl5ro0vzsntn152kadd148jqod].[none:Country:nk]' />
              <lod column='[federated.0npl5ro0vzsntn152kadd148jqod].[none:Sub-Category:nk]' />
              <geometry column='[federated.0npl5ro0vzsntn152kadd148jqod].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-size' value='12' />
                <format attr='color' value='#000000' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='0.44977900385856628' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0npl5ro0vzsntn152kadd148jqod].[Latitude (generated)]</rows>
        <cols>[federated.0npl5ro0vzsntn152kadd148jqod].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{A8957FC6-BF8D-4383-9B7A-2754DEBD9D22}' />
    </worksheet>
    <worksheet name='Q3.3 States not having profit in Office Supplies'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.0npl5ro0vzsntn152kadd148jqod' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0npl5ro0vzsntn152kadd148jqod'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0npl5ro0vzsntn152kadd148jqod].[none:Category:nk]'>
            <groupfilter function='member' level='[none:Category:nk]' member='&quot;Office Supplies&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0npl5ro0vzsntn152kadd148jqod].[sum:Profit:qk]' included-values='in-range'>
            <min>-18584.64339999999</min>
            <max>0.0</max>
          </filter>
          <slices>
            <column>[federated.0npl5ro0vzsntn152kadd148jqod].[none:Category:nk]</column>
            <column>[federated.0npl5ro0vzsntn152kadd148jqod].[sum:Profit:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0npl5ro0vzsntn152kadd148jqod].[sum:Profit:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0npl5ro0vzsntn152kadd148jqod].[sum:Profit:qk]' />
              <text column='[federated.0npl5ro0vzsntn152kadd148jqod].[none:State:nk]' />
              <lod column='[federated.0npl5ro0vzsntn152kadd148jqod].[none:Country:nk]' />
              <lod column='[federated.0npl5ro0vzsntn152kadd148jqod].[none:State:nk]' />
              <lod column='[federated.0npl5ro0vzsntn152kadd148jqod].[none:Category:nk]' />
              <geometry column='[federated.0npl5ro0vzsntn152kadd148jqod].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.86756908893585205' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0npl5ro0vzsntn152kadd148jqod].[Latitude (generated)]</rows>
        <cols>[federated.0npl5ro0vzsntn152kadd148jqod].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{6103D5D4-2FF6-4BEF-A37B-6EEBE402D8A0}' />
    </worksheet>
    <worksheet name='Q4.1 Finding Customer who is having Sum of sales less than Average sales '>
      <layout-options>
        <caption>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ff4141' fontsize='14'>No  customer is having sum of profit  less than over all average profit</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.0npl5ro0vzsntn152kadd148jqod' />
          </datasources>
          <datasource-dependencies datasource='federated.0npl5ro0vzsntn152kadd148jqod'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Profit]' derivation='Avg' name='[avg:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0npl5ro0vzsntn152kadd148jqod].[none:Customer Name:nk]'>
            <groupfilter function='level-members' level='[none:Customer Name:nk]' user:ui-exclude='true' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0npl5ro0vzsntn152kadd148jqod].[none:Customer Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0npl5ro0vzsntn152kadd148jqod].[none:Category:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0npl5ro0vzsntn152kadd148jqod].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0npl5ro0vzsntn152kadd148jqod].[none:Category:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0npl5ro0vzsntn152kadd148jqod].[avg:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0npl5ro0vzsntn152kadd148jqod].[none:Category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0npl5ro0vzsntn152kadd148jqod].[sum:Profit:qk] + [federated.0npl5ro0vzsntn152kadd148jqod].[avg:Profit:qk])</rows>
        <cols>([federated.0npl5ro0vzsntn152kadd148jqod].[none:Customer Name:nk] / [federated.0npl5ro0vzsntn152kadd148jqod].[yr:Order Date:ok])</cols>
      </table>
      <simple-id uuid='{BAFABF87-B5E5-4A73-A960-A94C3961C9C7}' />
    </worksheet>
    <worksheet name='Q4.2 Maximum  Life Expectancy of Female for the region Africa &amp; year 2012'>
      <table>
        <view>
          <datasources>
            <datasource caption='World Bank Indicators' name='federated.12sdb1b1b2b5mx1ejqqdw02lpmam' />
          </datasources>
          <datasource-dependencies datasource='federated.12sdb1b1b2b5mx1ejqqdw02lpmam'>
            <column datatype='integer' name='[Life Expectancy Female]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Life Expectancy Female]' derivation='Max' name='[max:Life Expectancy Female:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;Africa&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[yr:Year:ok]'>
            <groupfilter function='member' level='[yr:Year:ok]' member='2012' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[yr:Year:ok]</column>
            <column>[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[max:Life Expectancy Female:qk]</rows>
        <cols>([federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[none:Region:nk] / [federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[yr:Year:ok])</cols>
      </table>
      <simple-id uuid='{C83B63E4-F837-420A-BC44-00B988F7552B}' />
    </worksheet>
    <worksheet name='Q6.1 Trend line for profit as a linear function of sales for technology'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.0npl5ro0vzsntn152kadd148jqod' />
          </datasources>
          <datasource-dependencies datasource='federated.0npl5ro0vzsntn152kadd148jqod'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0npl5ro0vzsntn152kadd148jqod].[none:Category:nk]'>
            <groupfilter function='member' level='[none:Category:nk]' member='&quot;Technology&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0npl5ro0vzsntn152kadd148jqod].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0npl5ro0vzsntn152kadd148jqod].[sum:Sales:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0npl5ro0vzsntn152kadd148jqod].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0npl5ro0vzsntn152kadd148jqod].[sum:Profit:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0npl5ro0vzsntn152kadd148jqod].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0npl5ro0vzsntn152kadd148jqod].[sum:Sales:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0npl5ro0vzsntn152kadd148jqod].[sum:Profit:qk] + [federated.0npl5ro0vzsntn152kadd148jqod].[sum:Sales:qk])</rows>
        <cols>[federated.0npl5ro0vzsntn152kadd148jqod].[yr:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{B3E3D54C-2C18-4D11-B629-2CD2F7FFC0F7}' />
    </worksheet>
    <worksheet name='Q6.2 Histogram '>
      <layout-options>
        <caption>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7' fontname='Tableau Semibold' fontsize='12'>The bins which have profit ratios greater than 25% are 5000, 6000, 9000, 10000, 11000,13000,17000</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (global_superstore_2016)' name='federated.12pnq8f1s43vkh1fqzsr101fwrkl' />
          </datasources>
          <datasource-dependencies datasource='federated.12pnq8f1s43vkh1fqzsr101fwrkl'>
            <column caption='SUM([Profit])/SUM([Sales])' datatype='real' name='[Calculation_1435522427440246785]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' />
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column aggregation='None' caption='Sales (bin 1000)' datatype='integer' name='[Sales (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='3' formula='[Sales]' peg='0' size='1000' />
            </column>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Count' name='[cnt:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales (bin)]' derivation='None' name='[none:Sales (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1435522427440246785]' derivation='User' name='[usr:Calculation_1435522427440246785:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[usr:Calculation_1435522427440246785:qk]' included-values='in-range'>
            <min>0.25</min>
            <max>0.48000000000000004</max>
          </filter>
          <slices>
            <column>[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[usr:Calculation_1435522427440246785:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[usr:Calculation_1435522427440246785:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[usr:Calculation_1435522427440246785:qk]' palette='gray_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[usr:Calculation_1435522427440246785:qk]' />
              <text column='[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[usr:Calculation_1435522427440246785:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[cnt:Sales:qk]</rows>
        <cols>[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[none:Sales (bin):ok]</cols>
        <show-full-range>
          <column>[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[Sales (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{144CD520-87EF-43AE-BD7A-040FA9904356}' />
    </worksheet>
    <worksheet name='Q6.3 Histogram 2'>
      <layout-options>
        <caption>
          <formatted-text>
            <run bold='true' fontcolor='#8cd17d' fontsize='12'>0K shows maximum count of orders and hence has maximum numbers of customers.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.0npl5ro0vzsntn152kadd148jqod' />
          </datasources>
          <datasource-dependencies datasource='federated.0npl5ro0vzsntn152kadd148jqod'>
            <column aggregation='None' caption='Sales (1000 bin)' datatype='integer' name='[Sales (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='3' formula='[Sales]' peg='0' size='1000' />
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='Orders' datatype='integer' name='[__tableau_internal_object_id__].[Orders_43A73A1344C84A4EBC8127A498D588DE]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_43A73A1344C84A4EBC8127A498D588DE]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Orders_43A73A1344C84A4EBC8127A498D588DE]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Orders_43A73A1344C84A4EBC8127A498D588DE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales (bin)]' derivation='None' name='[none:Sales (bin):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0npl5ro0vzsntn152kadd148jqod].[__tableau_internal_object_id__].[cnt:Orders_43A73A1344C84A4EBC8127A498D588DE:qk]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0npl5ro0vzsntn152kadd148jqod].[__tableau_internal_object_id__].[cnt:Orders_43A73A1344C84A4EBC8127A498D588DE:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0npl5ro0vzsntn152kadd148jqod].[__tableau_internal_object_id__].[cnt:Orders_43A73A1344C84A4EBC8127A498D588DE:qk]</rows>
        <cols>[federated.0npl5ro0vzsntn152kadd148jqod].[none:Sales (bin):ok]</cols>
        <show-full-range>
          <column>[federated.0npl5ro0vzsntn152kadd148jqod].[Sales (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{C11F06EB-AA0B-4B9D-B079-B753CD1C21DE}' />
    </worksheet>
    <worksheet name='Q6.4 Scatter plot for Profit vs Sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (global_superstore_2016)' name='federated.12pnq8f1s43vkh1fqzsr101fwrkl' />
          </datasources>
          <datasource-dependencies datasource='federated.12pnq8f1s43vkh1fqzsr101fwrkl'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[none:Category:nk]'>
            <groupfilter function='member' level='[none:Category:nk]' member='&quot;Technology&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[none:Product Name:nk]' />
              <lod column='[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[none:Product Name:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-color' value='#00000067' />
                <format attr='stroke-size' value='3' />
                <format attr='line-visibility' value='on' />
                <format attr='line-pattern-only' value='dashed' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[sum:Profit:qk]</rows>
        <cols>[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{1EBCD455-C4BF-4F75-99B2-9348EDF44A61}' />
    </worksheet>
    <worksheet name='Q6.5 Clusters'>
      <layout-options>
        <caption>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='3DS Fonticon CID' fontsize='12'>The variables that are considered to create the clusters by default are -</run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#000000' fontname='3DS Fonticon CID' fontsize='12'>Sum of Health Exp% GDP, Sum of Health Exp/Capita,Sum of Life Expectancy Male,Sum of Life Expectancy Female.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='World Bank Indicators' name='federated.12sdb1b1b2b5mx1ejqqdw02lpmam' />
          </datasources>
          <datasource-dependencies datasource='federated.12sdb1b1b2b5mx1ejqqdw02lpmam'>
            <column auto-hidden='true' caption='Clusters' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:1]' parent-model='[AnalyticModel:{6588a78e-af01-489f-8b4f-bab51aa7f9d7}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column datatype='real' name='[Health Exp % GDP]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Health Exp/Capita]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Life Expectancy Female]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Life Expectancy Male]' role='measure' type='quantitative' />
            <column-instance column='[AdhocCluster:1]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Health Exp % GDP]' derivation='Sum' name='[sum:Health Exp % GDP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Health Exp/Capita]' derivation='Sum' name='[sum:Health Exp/Capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Life Expectancy Female]' derivation='Sum' name='[sum:Life Expectancy Female:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Life Expectancy Male]' derivation='Sum' name='[sum:Life Expectancy Male:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[none:AdhocCluster:1:ok]' />
              <size column='[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[sum:Life Expectancy Female:qk]' />
              <lod column='[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[sum:Life Expectancy Male:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[sum:Health Exp/Capita:qk]</rows>
        <cols>[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[sum:Health Exp % GDP:qk]</cols>
      </table>
      <simple-id uuid='{1D876EA4-4EDA-47E2-8436-5C1B5DD804F0}' />
    </worksheet>
    <worksheet name='Q7.1 Aggregrated Field(Profit Ratio)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.0npl5ro0vzsntn152kadd148jqod' />
          </datasources>
          <datasource-dependencies datasource='federated.0npl5ro0vzsntn152kadd148jqod'>
            <column caption='Profit Ratio' datatype='real' name='[Calculation_1435522427493490691]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit]) / SUM([Sales])' />
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1435522427493490691]' derivation='User' name='[usr:Calculation_1435522427493490691:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0npl5ro0vzsntn152kadd148jqod].[usr:Calculation_1435522427493490691:qk]</rows>
        <cols />
      </table>
      <simple-id uuid='{90FC20DF-4174-413A-81DD-A7AE2F1BB2E8}' />
    </worksheet>
    <worksheet name='Q7.2 Rank of country sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (global_superstore_2016)' name='federated.12pnq8f1s43vkh1fqzsr101fwrkl' />
          </datasources>
          <datasource-dependencies datasource='federated.12pnq8f1s43vkh1fqzsr101fwrkl'>
            <column caption='Rankwise country sales' datatype='integer' name='[Calculation_1435522427496648709]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK(SUM([Sales]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1435522427496648709]' derivation='User' name='[usr:Calculation_1435522427496648709:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[usr:Calculation_1435522427496648709:qk]' />
              <text column='[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[usr:Calculation_1435522427496648709:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.12pnq8f1s43vkh1fqzsr101fwrkl].[yr:Order Date:ok] * [federated.12pnq8f1s43vkh1fqzsr101fwrkl].[sum:Sales:qk])</rows>
        <cols>[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[none:Region:nk]</cols>
      </table>
      <simple-id uuid='{024B7C06-2CD7-4F81-94B3-16EDFAB3AA5B}' />
    </worksheet>
    <worksheet name='Q9.2(b)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='12'>Years vs Birth Rate</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='World Bank Indicators' name='federated.12sdb1b1b2b5mx1ejqqdw02lpmam' />
          </datasources>
          <datasource-dependencies datasource='federated.12sdb1b1b2b5mx1ejqqdw02lpmam'>
            <column datatype='real' name='[Birth Rate]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Birth Rate]' derivation='Sum' name='[sum:Birth Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[sum:Birth Rate:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[sum:Birth Rate:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[sum:Birth Rate:qk]</rows>
        <cols>[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[yr:Year:ok]</cols>
      </table>
      <simple-id uuid='{7809C698-08B8-430B-A666-29761C1D6BFD}' />
    </worksheet>
    <worksheet name='Q9.2(c)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='12'>Years vs GDP</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='World Bank Indicators' name='federated.12sdb1b1b2b5mx1ejqqdw02lpmam' />
          </datasources>
          <datasource-dependencies datasource='federated.12sdb1b1b2b5mx1ejqqdw02lpmam'>
            <column datatype='integer' name='[GDP]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[GDP]' derivation='Sum' name='[sum:GDP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[sum:GDP:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[yr:Year:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[sum:GDP:qk]</rows>
        <cols>[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[yr:Year:ok]</cols>
      </table>
      <simple-id uuid='{3B7CF005-A3FB-4459-B859-75AE08D7FD39}' />
    </worksheet>
    <worksheet name='Q9.2(d)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='12'>Country vs Mobile Phone usage</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='World Bank Indicators' name='federated.12sdb1b1b2b5mx1ejqqdw02lpmam' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.12sdb1b1b2b5mx1ejqqdw02lpmam'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Mobile Phone Usage]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Mobile Phone Usage]' derivation='Sum' name='[sum:Mobile Phone Usage:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[Longitude (generated)]' field-type='quantitative' max='36836160.707270689' min='-15011104.705829887' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[Latitude (generated)]' field-type='quantitative' max='21570435.372897755' min='-17579540.425143987' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[sum:Mobile Phone Usage:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <text column='[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[none:Country:nk]' />
              <text column='[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[sum:Mobile Phone Usage:qk]' />
              <lod column='[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[none:Country:nk]' />
              <color column='[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[sum:Mobile Phone Usage:qk]' />
              <geometry column='[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[Latitude (generated)]</rows>
        <cols>[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{708695CB-56BE-4BF8-98D9-B18E2A2853EC}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Q 9.2 World Indicators Dashboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#75a1c7' fontname='Tableau Bold' fontsize='14'>Q 9.2 World Indicators Dashboard</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='18' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='5000' id='19' type-v2='title' w='98400' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='93000' id='16' param='vert' type-v2='layout-flow' w='98400' x='800' y='6000'>
              <zone h='93000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='6000'>
                <zone h='93000' id='5' type-v2='layout-basic' w='98400' x='800' y='6000'>
                  <zone h='46498' id='3' name='Q 9.2(a) ' w='49200' x='800' y='6000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='46498' id='9' name='Q9.2(b)' w='49200' x='50000' y='6000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='46502' id='11' name='Q9.2(c)' w='49200' x='800' y='52498'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='46502' id='13' name='Q9.2(d)' w='49200' x='50000' y='52498'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='19500' id='8' name='Q 9.2(a) ' pane-specification-id='0' param='[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[none:Region:nk]' type-v2='color' w='14000' x='34500' y='14250' />
        <zone h='7000' id='14' name='Q9.2(d)' pane-specification-id='1' param='[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[sum:Mobile Phone Usage:qk]' single-line='true' type-v2='color' w='17900' x='58500' y='89750' />
        <zone h='11000' id='10' name='Q9.2(b)' pane-specification-id='0' param='[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[sum:Birth Rate:qk]' type-v2='color' w='14000' x='85300' y='27750' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#75a1c7' fontname='Tableau Bold' fontsize='14'>Q 9.2 World Indicators Dashboard</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1450' minheight='1450' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='33' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='32' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='5000' id='19' type-v2='title' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46498' id='3' is-fixed='true' name='Q 9.2(a) ' w='49200' x='800' y='6000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='19500' id='8' name='Q 9.2(a) ' pane-specification-id='0' param='[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[none:Region:nk]' type-v2='color' w='14000' x='34500' y='14250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46498' id='9' is-fixed='true' name='Q9.2(b)' w='49200' x='50000' y='6000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11000' id='10' name='Q9.2(b)' pane-specification-id='0' param='[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[sum:Birth Rate:qk]' type-v2='color' w='14000' x='85300' y='27750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46502' id='11' is-fixed='true' name='Q9.2(c)' w='49200' x='800' y='52498'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46502' id='13' is-fixed='true' name='Q9.2(d)' w='49200' x='50000' y='52498'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7000' id='14' name='Q9.2(d)' pane-specification-id='1' param='[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[sum:Mobile Phone Usage:qk]' single-line='true' type-v2='color' w='17900' x='58500' y='89750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{41B1C7EA-5AAF-43B2-9158-C79A12BF1D03}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='89'>
    <window class='worksheet' maximized='true' name='Q2.1 Avg (Sales)Text Table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0npl5ro0vzsntn152kadd148jqod].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0npl5ro0vzsntn152kadd148jqod].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A647FC78-5974-4646-A56C-EAC905B2DB72}' />
    </window>
    <window class='worksheet' name='Q2.2 Heat Table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0npl5ro0vzsntn152kadd148jqod].[cnt:Sales:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0npl5ro0vzsntn152kadd148jqod].[sum:Profit:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0npl5ro0vzsntn152kadd148jqod].[cnt:Sales:qk]</field>
            <field>[federated.0npl5ro0vzsntn152kadd148jqod].[cnt:Sub-Category:qk]</field>
            <field>[federated.0npl5ro0vzsntn152kadd148jqod].[none:Region:nk]</field>
            <field>[federated.0npl5ro0vzsntn152kadd148jqod].[none:Sub-Category:nk]</field>
            <field>[federated.0npl5ro0vzsntn152kadd148jqod].[tyr:Order Date:ok]</field>
            <field>[federated.0npl5ro0vzsntn152kadd148jqod].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D8C5D307-E3B1-44AC-9396-15C097C2CB77}' />
    </window>
    <window class='worksheet' name='Q2.3 Highlight Table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0npl5ro0vzsntn152kadd148jqod].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0npl5ro0vzsntn152kadd148jqod].[none:State:nk]</field>
            <field>[federated.0npl5ro0vzsntn152kadd148jqod].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1249A7BD-7FAE-40A5-8B61-CB8146730C67}' />
    </window>
    <window class='worksheet' name='Q2.4 Customer Having Max Sales in 2012'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0npl5ro0vzsntn152kadd148jqod].[none:Customer Name:nk]</field>
            <field>[federated.0npl5ro0vzsntn152kadd148jqod].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{767A1631-A5ED-4A89-B94D-BFEDC3049A7D}' />
    </window>
    <window class='worksheet' name='Q2.5 Profit Comparision NY vs Pennsylvania'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0npl5ro0vzsntn152kadd148jqod].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0npl5ro0vzsntn152kadd148jqod].[none:Category:nk]</field>
            <field>[federated.0npl5ro0vzsntn152kadd148jqod].[none:City:nk]</field>
            <field>[federated.0npl5ro0vzsntn152kadd148jqod].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9CDE0BAF-95F4-4491-BE71-9713969B6217}' />
    </window>
    <window class='worksheet' name='Q2.6 Pane wise percentage of Total'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0npl5ro0vzsntn152kadd148jqod].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0npl5ro0vzsntn152kadd148jqod].[none:Category:nk]</field>
            <field>[federated.0npl5ro0vzsntn152kadd148jqod].[none:Region:nk]</field>
            <field>[federated.0npl5ro0vzsntn152kadd148jqod].[none:Sub-Category:nk]</field>
            <field>[federated.0npl5ro0vzsntn152kadd148jqod].[qr:Order Date:ok]</field>
            <field>[federated.0npl5ro0vzsntn152kadd148jqod].[tqr:Order Date:qk]</field>
            <field>[federated.0npl5ro0vzsntn152kadd148jqod].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A20AD351-F85C-4EA8-BDAD-C92CDF0C20AF}' />
    </window>
    <window class='worksheet' name='3.1 Least Profit Making Country '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[pcto:sum:Profit:qk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[none:City:nk]</field>
            <field>[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[none:Country:nk]</field>
            <field>[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[none:Region:nk]</field>
            <field>[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[pcto:sum:Profit:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EC0F69B2-735E-4B06-B4C5-CF052124D60F}' />
    </window>
    <window class='worksheet' name='Q3.2 Border Sharing States (Profit)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0npl5ro0vzsntn152kadd148jqod].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0npl5ro0vzsntn152kadd148jqod].[none:Country:nk]</field>
            <field>[federated.0npl5ro0vzsntn152kadd148jqod].[none:State:nk]</field>
            <field>[federated.0npl5ro0vzsntn152kadd148jqod].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{56651E2A-C2BB-45C4-8A98-86B8D719EA05}' />
    </window>
    <window class='worksheet' name='Q3.3 States not having profit in Office Supplies'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='156'>
            <card pane-specification-id='0' param='[federated.0npl5ro0vzsntn152kadd148jqod].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0npl5ro0vzsntn152kadd148jqod].[none:Category:nk]</field>
            <field>[federated.0npl5ro0vzsntn152kadd148jqod].[none:State:nk]</field>
            <field>[federated.0npl5ro0vzsntn152kadd148jqod].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8FDC983E-19F6-402A-9789-2598D60DC642}' />
    </window>
    <window class='worksheet' name='Q4.1 Finding Customer who is having Sum of sales less than Average sales '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='typeinlist' param='[federated.0npl5ro0vzsntn152kadd148jqod].[none:Customer Name:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.0npl5ro0vzsntn152kadd148jqod].[none:Category:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0npl5ro0vzsntn152kadd148jqod].[none:Category:nk]</field>
            <field>[federated.0npl5ro0vzsntn152kadd148jqod].[none:Customer Name:nk]</field>
            <field>[federated.0npl5ro0vzsntn152kadd148jqod].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{02CA0E5E-3E05-4EA4-BBFC-4849812C8A96}' />
    </window>
    <window class='worksheet' name='Q4.2 Maximum  Life Expectancy of Female for the region Africa &amp; year 2012'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[none:Region:nk]</field>
            <field>[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{90D287C9-0543-49BD-AC7A-69816C49F50D}' />
    </window>
    <window class='worksheet' name='Q 4.3 Share of the Top 20 customers based on the sales amount compared to the customers based on profit amounts'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0npl5ro0vzsntn152kadd148jqod].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0npl5ro0vzsntn152kadd148jqod].[:Measure Names]</field>
            <field>[federated.0npl5ro0vzsntn152kadd148jqod].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4D586196-73F9-4AA2-A9B9-BEBE3F82A9E3}' />
    </window>
    <window class='worksheet' name='Q 5.1 Dual Axis Chart for Profit vs Sales (Sub-Category)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0npl5ro0vzsntn152kadd148jqod].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0npl5ro0vzsntn152kadd148jqod].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C818691C-4CEA-4FB0-BE5E-EE3E421007A9}' />
    </window>
    <window class='worksheet' name='Q 5.2 Dual line chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[:Measure Names]</field>
            <field>[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[none:Energy Usage:qk]</field>
            <field>[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[none:Population 65+:qk]</field>
            <field>[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{55325D2A-0DAD-413F-B536-E0982182B10A}' />
    </window>
    <window class='worksheet' name='Q6.1 Trend line for profit as a linear function of sales for technology'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0npl5ro0vzsntn152kadd148jqod].[sum:Profit:qk]' type='color' />
            <card pane-specification-id='2' param='[federated.0npl5ro0vzsntn152kadd148jqod].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0npl5ro0vzsntn152kadd148jqod].[none:Category:nk]</field>
            <field>[federated.0npl5ro0vzsntn152kadd148jqod].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{67128D84-48EC-4D56-8AD2-4EBE5CB490FE}' />
    </window>
    <window class='worksheet' name='Q6.2 Histogram '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[usr:Calculation_1435522427440246785:qk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[none:Sales (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2D506854-FBC7-49B7-B110-192FB42BECF4}' />
    </window>
    <window class='worksheet' name='Q6.3 Histogram 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0npl5ro0vzsntn152kadd148jqod].[__tableau_internal_object_id__].[cnt:Orders_43A73A1344C84A4EBC8127A498D588DE:qk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0npl5ro0vzsntn152kadd148jqod].[none:Sales (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A87F7E03-C7A2-4ED1-9B8E-1E441AB03C61}' />
    </window>
    <window class='worksheet' name='Q6.4 Scatter plot for Profit vs Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[none:Product Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[none:Category:nk]</field>
            <field>[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[none:Product Name:nk]</field>
            <field>[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0855EC15-E3F8-4AC3-8F51-C29D12E9E342}' />
    </window>
    <window class='worksheet' name='Q6.5 Clusters'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[none:AdhocCluster:1:ok]' type='color' />
            <card pane-specification-id='0' param='[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[sum:Life Expectancy Female:qk]' type='size' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[none:AdhocCluster:1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E2DE6389-8D83-4B16-B727-BA4E3215C2ED}' />
    </window>
    <window class='worksheet' name='Q7.1 Aggregrated Field(Profit Ratio)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{266EC0EF-FFB3-44E7-A3D3-0D1D3639B54C}' />
    </window>
    <window class='worksheet' name='Q7.2 Rank of country sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[usr:Calculation_1435522427496648709:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0npl5ro0vzsntn152kadd148jqod].[none:Region:nk]</field>
            <field>[federated.0npl5ro0vzsntn152kadd148jqod].[yr:Order Date:ok]</field>
            <field>[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[none:Region:nk]</field>
            <field>[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EFA38043-41F3-45D2-8731-505F902395CA}' />
    </window>
    <window class='worksheet' name='Q.7.3 Percent of total profits do the top 10 customers by Sales (By Creating Set Method) '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0npl5ro0vzsntn152kadd148jqod].[none:Customer Name:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0npl5ro0vzsntn152kadd148jqod].[io:Customer Name Set:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0npl5ro0vzsntn152kadd148jqod].[Customer Name Set]</field>
            <field>[federated.0npl5ro0vzsntn152kadd148jqod].[io:Customer Name Set:nk]</field>
            <field>[federated.0npl5ro0vzsntn152kadd148jqod].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2FBE9094-4CAE-487D-B952-683D9CF04F28}' />
    </window>
    <window class='worksheet' name='Q 7.3 Percent of total profits do the top 10 customers by Sales '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0npl5ro0vzsntn152kadd148jqod].[none:Customer Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0npl5ro0vzsntn152kadd148jqod].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7C77E96A-19CA-4EDA-8710-10A6EE142070}' />
    </window>
    <window class='worksheet' name='Q 7.4 Customers with lowest overall profit '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0npl5ro0vzsntn152kadd148jqod].[usr:Calculation_1435522427493490691:qk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0npl5ro0vzsntn152kadd148jqod].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D30433A7-548A-4921-8B4E-F4C1BD693EFC}' />
    </window>
    <window class='worksheet' name='Q 7.5 5.Ranking States based on Sales greater than 20000'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0npl5ro0vzsntn152kadd148jqod].[usr:Calculation_501869929992658945:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0npl5ro0vzsntn152kadd148jqod].[none:State:nk]</field>
            <field>[federated.0npl5ro0vzsntn152kadd148jqod].[usr:Calculation_501869929992175616:nk]</field>
            <field>[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6BED2AD0-DF23-4431-93B4-70081B27ACB9}' />
    </window>
    <window class='worksheet' name='Q 7.6  '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0npl5ro0vzsntn152kadd148jqod].[none:Customer Name:nk]</field>
            <field>[federated.0npl5ro0vzsntn152kadd148jqod].[usr:Calculation_501869930011099138:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1BD9BD3B-964E-4ADD-8C3C-0C0FFFD73CAB}' />
    </window>
    <window class='worksheet' name='Q 7.7Total Overall GDP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{2368C2A8-7DD3-4C5E-B5E3-397173F6A4D4}' />
    </window>
    <window class='worksheet' name='Q 8.2 List of Top 10 Products based on Profits whose sale value is more than 5000'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[none:Product Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[none:Product Name:nk]</field>
            <field>[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[none:Sales:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AB580E82-EDA9-44C3-8D06-BD4A1C478743}' />
    </window>
    <window class='worksheet' name='Q 8.3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[none:Customer Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{342ABE4D-0A28-4A95-820D-60CA46EE582A}' />
    </window>
    <window class='worksheet' name='Q 8.4 Sum(sales) for the highest subcategory. '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[none:Sub-Category:nk]</field>
            <field>[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D644FD71-BEC4-46AD-B26C-2D8934B7FE89}' />
    </window>
    <window class='worksheet' name='Q 8.5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0npl5ro0vzsntn152kadd148jqod].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F13E8A32-65C1-470F-943C-B8F69C35E905}' />
    </window>
    <window class='worksheet' name='Q 9.2(a) '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0npl5ro0vzsntn152kadd148jqod].[none:Region:nk]</field>
            <field>[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EF0FD28A-C176-472C-BA12-FA12F35CEC04}' />
    </window>
    <window class='worksheet' name='Q9.2(b)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[sum:Birth Rate:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BA698814-C24A-46FD-B414-FC9052E96293}' />
    </window>
    <window class='worksheet' name='Q9.2(c)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[yr:Year:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[tyr:Year:qk]</field>
            <field>[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BEF9AFAF-2D1F-41BA-BCB7-E526866F28DD}' />
    </window>
    <window class='worksheet' name='Q9.2(d)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[sum:Mobile Phone Usage:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[none:Business Tax Rate:nk]</field>
            <field>[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[none:Country:nk]</field>
            <field>[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[sum:Mobile Phone Usage:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8A333E19-94B5-4CAE-8F43-FF3A27719BAF}' />
    </window>
    <window class='dashboard' name='Q 9.2 World Indicators Dashboard'>
      <viewpoints>
        <viewpoint name='Q 9.2(a) '>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[none:Region:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Q9.2(b)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Q9.2(c)'>
          <zoom type='entire-view' />
          <highlight field='[federated.12sdb1b1b2b5mx1ejqqdw02lpmam].[yr:Year:ok]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Q9.2(d)'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{7511A5BD-37D8-4590-933B-9851291D32C9}' />
    </window>
    <window class='worksheet' name='Q 10 Time Series (QTR wise )'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4B1CF965-C575-4345-88C0-B06C7BDCD0C1}' />
    </window>
    <window class='worksheet' name='Q 10 Time Series (Month wise )'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1B174C62-91FF-4140-9087-87135ED53260}' />
    </window>
    <window class='worksheet' name='Q 12.1 Forecasting'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12pnq8f1s43vkh1fqzsr101fwrkl].[none:Forecast Indicator:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A970A7DD-9955-4CAE-986F-55F5D9CF7E35}' />
    </window>
    <window class='worksheet' name='Q 12.2 Forecasting'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0npl5ro0vzsntn152kadd148jqod].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0npl5ro0vzsntn152kadd148jqod].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A32BCB6C-3069-4450-B5B6-BE47FD0CC4F1}' />
    </window>
    <window class='worksheet' name='Q 13 Piechart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0npl5ro0vzsntn152kadd148jqod].[none:Region:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0npl5ro0vzsntn152kadd148jqod].[sum:Sales:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0npl5ro0vzsntn152kadd148jqod].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{50A55676-5094-41D3-BB38-36074FEF4CAA}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='3.1 Least Profit Making Country ' width='192'>
      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
      32HY95zNWo3Q+DnSs5PbraBiM9eZmX5ALbvMWkZCiU0yfeMmRoeZhck7JBOZdg6+JJOttY8S
      BIHTRyfQc/sXwnxWCIKAY+gEv7oxSavV2v4moijy/OnjvNjvRdp4gJiN0NqYRli9zctHh7k4
      0UezvDsB8EvvBdoPuq5z984t0Go4t9yLlUqV1bUImWxu60+eTDZHLlegp7eHcNBHKRUnWyhh
      cRys8PqzILE0y+HR/n1XH8lgwW5Q0GwB+jtspPJVjGKLaDSGJpnxWgXWNmucPTmBqih4/UH8
      DhOSM4jfuTfqmiuWWV9fwxgcwO91o9XSzMzGMIkVHHILofMUHeYC+aaZ+MoierNGqZShVFQI
      dgYp1RX8sorL2U7iswoaq8k8svnJEV5d12m1WnvIhXfaP/tNUvlMitTyLK1Wu22SxdK2ATr8
      fo6MDdHrc/DcicOcOnmS9379K86dO8ftqVkMDu/2+b70NgBAo1YiW2oS6mg/eL1WZXV5kUOH
      xwGoV0tsxLNYzEZMdg9Wo0BTkzAZRLp6+7Y/TH9vF6VSmcWlKZxdg5gtj+9q+HnB09VPJJpg
      oG//8seOrgEempyhDhN0uNnZ9Oj0lv0uWx2YAMxhHueRzyfWKIhDDHhcoLZo6Qb8PgeLD6bg
      6Bkyc9epU2Do+e/QHbBQa8lkchnQ2jO/2eXj2uzqNj9RX08XK/EUKaX5VKqQqqq0Wq1tz9lD
      Bglg3wnA7O7A2Eqxvr5CrVbjzJmz29tEUcRmazfbu3PrBlqrgcFg4I1jg8xFNylW69Qky1dh
      BVB596c/pZBco2jsIuQ2c+03P2M9mWIjkaWv08uv/vFvibQcZNeXSeYqUM1j8odxWIx7fP21
      Wo1GpcTq7BSCZMTq/GJXA6PJxGZsg84O7xcubJl8kapgoqWKWCxGRLODYHcPXUPjuP1hXFYR
      W2gEj9MCkhlfZxiDrhIaGMGwxQhXben4xCYulwtJkgh4nDyYX8bwiUCY2qwwc+NDUvlaOzVZ
      b7EyeZ3V5TU8oS6q6RWSqSZup8j9a1dwdvaS34y23/fWOQxmC+urK4z2+NF16OraO0lM3ruF
      rpRIbKY4evwkAb+f0b4ujg73Mey3fxUEoEAkIvL62yeZvrFK/1CIS7/7LS8+d554IkIjl8Eb
      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
    </thumbnail>
    <thumbnail height='192' name='Q 10 Time Series (Month wise )' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q 10 Time Series (QTR wise )' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q 12.1 Forecasting' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Q 12.2 Forecasting' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q 13 Piechart' width='192'>
      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
      AEJr/wf3ryvohPEoSQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q 4.3 Share of the Top 20 customers based on the sales amount compared to the customers based on profit amounts' width='192'>
      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
      Py7wZyiqwZ55AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Q 5.1 Dual Axis Chart for Profit vs Sales (Sub-Category)' width='192'>
      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
      K3Lx/wPSVT+IfneecQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q 5.2 Dual line chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q 7.3 Percent of total profits do the top 10 customers by Sales ' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Q 7.4 Customers with lowest overall profit ' width='192'>
      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
      oIgjorhiAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Q 7.5 5.Ranking States based on Sales greater than 20000' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q 7.6  ' width='183'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q 7.7Total Overall GDP' width='128'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q 8.2 List of Top 10 Products based on Profits whose sale value is more than 5000' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q 8.3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q 8.4 Sum(sales) for the highest subcategory. ' width='192'>
      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
      3gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q 8.5' width='192'>
      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
      ypUkJyczb948jMaBNaNer2f06NHA546wLVu2sH//fjIyMlCpVHi9Xt544w26u7tZvHjxoFXy
      LNf+HkAkQiZXIsOPx+kiLDoOY3gvDa0SYhOSSUlJISkhDoNWicSYwZg0LaVHj2D3BhGEIF6v
      l0AgCIiQKqIonDGXb6U7WLtiA+Vt/QgCyAyx5I3NQKjZwYcbqxg2ZgymC7JpRzBh1kSCe1ew
      udqONyAgCAE8DifuYBBn5RnaNQVMm1VEVko8JoPmswWrQCAooNDFUzjtFh5++n/5xe2JHF+9
      muO9gESCVAQ+jx8BAUFQYDDGYPT3YfHLiEpIJiUlmURzNHqNPPRi5Wumq6uLNWvWMG3aNJYs
      WTKY3uhijjCVSoXZbCYQCBAMBnE6nbz66qvo9Xoef/xx0tPTzzPVwFXfATx0t1Ry7JCKcILY
      6vaz35rAhBtziYpTc8OUPP608a+8rV9CnkmOt6+VPkUaY0blM+fbN7PzT2/zN6ODArOE7n4l
      RSOzP6tXhFiTyJTZ8yh/+W+8uzmZR2+bhFGhISkrn4itv2V9ZSY/fjAO2QUeXRGRU77NPft/
      zrbXX8V//XhiFR7aSy3E3zqLxMRkIvqPsWPTPuzRPmoO7KXV7QX8WOqPsnd/FZrENCI0Yrqa
      fBgTMzAoAFMyY7J0bNyzkwO6HiJMKaSn5jJpzCFWrF2NIdBNRqQCp8VKQJ/AqMl5V3dJQ1yA
      IAiIxWKys7MZM2bMeTnCgsEgnZ2d2O12zGbzYP7f2tpawsLCkEgk7N+/H7FYzIIFC1AoLj6l
      veIcYQQDeD19WHuttNXVUVdXT5c/ikk33crMogQUYhXmYdmk6P1UnjpJTUMrdrGJ4SNySIpS
      o4zNYWScj9oTJzlTZ0EWlUxWahyKoBNfWCoFBUlEGKIx68R0dnhJzEnDIJcgVwaxlJfTHl7A
      /OvyMailF5lGqUktHE0s7ZSVllHT2IM0KYeiYYlEGhMwSnuprqymyxdO0dSxmJQRZBTmkahX
      gauN06UnKa+so0+ZyZxbbyTPKEck1ZOYbAJLNScqGnCrEskalkZGeiomaS/VZyqoaejAp4sh
      e2QuZq2CoNtGQJdG4chklEE/Lp9AeEImmfGRXHDjCnFZuru7OXr0KA0NDZw+fZrTp0/T0NBA
      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
    </thumbnail>
    <thumbnail height='192' name='Q 9.2 World Indicators Dashboard' width='192'>
      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
      FxbM/wD5jc3N22JqAwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q 9.2(a) ' width='192'>
      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
      FSdVAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Q.7.3 Percent of total profits do the top 10 customers by Sales (By Creating Set Method) ' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAX5klEQVR4nO3daWwc+Znf8W9Vd/VN9kWyeVPiIYqHKNGjYySPR5GcsTXwjHZsLzawkd0F
      EsBBjATIyyBvEuRVXhhIXiQI9l0Cvxgjm117nEGClUfRYmYsjWYkWhzqJEVKFI9m82yy76Oq
      8kKjHpJDOeqmKFGs5wMQ6m6xnv43u39d1dX11F8xTdNECAtSFEVRX/YghHiZJADC0iQAL5RJ
      fGGW6zduYWzxv8ViseyKt27exDByzM4ubH94FmR/2QOwEkPPcuHS55z/wfeYGB+lob6e2bkl
      4rEZgpEGfvM3f8OPf/qXJOcfUNCC+O055pfXcHi8OL1BXPoaRWcQMsukCiqvHTnExf/91zgD
      /5iRL2bo3u8jaboIOUwW1lZxurxoniBVSorZeJ7Xjx1BVZSX/WfYVSQAL5BppNEc1bi8Hh7c
      u02Vz8Wd0TH0xCqOYCP797ezP1Dgf46ANzXCpGZwvPcgd9Z8pG9/zuzsIi2dPSxNj/Hun/05
      APt7DjFx5yaYVcQWlxkbnyLir2bw9S4mVt2kx0aZnrxFpK6VtcEjBLSX/EfYZSQAL5BqD1Jb
      XeD3l69RF6nl1p37+LxVuPwe5mJzREJeJlbAp89TrArR4DFxeXwETA+u2gg+h5Oa1lbcdoOA
      zw1AMFxP0JHjkeJkNblMXV0dAZ8Xl9uLX3fjCPhx2dpx+htwygbvNyg7tRv0SVlFVrlil9rR
      3aCmaSJfMYjdTlaKwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtIkAMLSdvxQiAsXLtDc3IzN
      ZmNsbAyv18uZM2e4fPky0WiU06dP8/HHHxMKhdA0DdM0CQQCHDhwAIfDsdPDExa342uAnp4e
      MpkM3d3dNDc309PTg2maLC0tMTAwwIULFxgYGEDXdbLZLAsLC1y/fp0bN27s9NCEKD8ApmmS
      SCTBNFlamGM1mSaTXGMtlSGfzaJvOvzhybu4YRjEYjHq6+tRFIXBwUGGh4dpbGxkcXGRbDZL
      f38/iqLQ1NREMpl8Po9QiD+i7E2g5flZRh/Nc7S3halYEj0fxedxUtBNnHY7re0d2LTHZQ3D
      YHh4mEKhQCKR4OjRowBMT0+Ty+Vobm7m+PHjDA0N0dfXRzgc5uTJk6TTaQxjq5YRIZ6vCo4G
      Nbl96w4HOpq5duMOquamtlpjfnkNFAWXp4pDvd0YhoFpmnI0qNi1NE1Tyl4DzE1PMj0zjb/a
      jWJzACZtHZ0YtlmM3CoZ04aqfr1lpaoqf/XbayTS+We+j0jQy59//3C5QxOibDvWD/BkE0ZV
      Vf7Jf/iApbXMMy/b3hjkP/6L7+/EsIQokdOiCMuTAAhLkwAIS5MACEuTAAhLkwAIS5MACEuT
      AAhLkwAIS5MACEuTAAhLkwAIS5MACEuTAAhLK7sfIJuMMzkX50BHG48ejKHbfXhtBbK4qHbZ
      qAqGsavSBCNeDWUHQMdGIZuikFrk4ewKrW1VrKVyFIurLM/liOgqDbXB0qnRK2ptNE1piRQv
      RNkB8Pp8j+eZMoqE6lvJrS4TqPEzNZ3C5fGRiC/QUBsE2Nb8ADK3gHgRKmqJXFtbY7XYhLMw
      hemuIlIXAcWFmUuQwYWiKKWf9e2Rz0xRsNls5S8nRJnKDkB98z7qm/cBUBvyf317pAaoeV7j
      EuKFkL1AwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtIkAMLSdnySvO0y
      TZP79+8TDofJZDLcvHmT48ePEwwGGR8fJxqN8vrrr3P16lVaWlpIpVJ4PB7sdjsNDQ2VHYwn
      LGPXvzp0XefRo0fMzc0RCATo7e3l5s2bmKbJvXv38Pv9XLp0Cb/fz8jICLFYjNu3b3PlyhUW
      FhZe9vDFLrfrA2C32+no6CgdXv3ll1/i8XhQFIVQKMSNGzdYXV0lEAjgcrnweDwsLy/jcrkY
      GRl52cMXu1zZm0DptWUeRFfo6+4gm1jhQWyVgNMstUT6w7XPtSUyl8tx/fp1TNMkl8thmiYu
      l4uZmRmcTifBYJA333yTixcv0tDQwJEjR/B6vSwtLeFyuZ7bOMTeVP5nALsTpZjDNHUeTs9R
      NAwShoZeWGMllqNOV2mKhDFNs/RTNtNE1/XHd2e3895775X+69ChQ6XL9fX1DAwMAHD+/PnS
      7QcPHixdflJHiK2UHQCPxwNAeiXGSiJDfGWBwYFDTM+mcXmrSa8tQSQMUNpsqcTm5b64O4th
      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
    </thumbnail>
    <thumbnail height='192' name='Q2.1 Avg (Sales)Text Table' width='192'>
      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
      obT/A5USk3EkFeyeAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Q2.2 Heat Table' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q2.3 Highlight Table' width='192'>
      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
    </thumbnail>
    <thumbnail height='187' name='Q2.4 Customer Having Max Sales in 2012' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='66' name='Q2.5 Profit Comparision NY vs Pennsylvania' width='184'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q2.6 Pane wise percentage of Total' width='192'>
      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
      /xcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q3.2 Border Sharing States (Profit)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q3.3 States not having profit in Office Supplies' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q4.1 Finding Customer who is having Sum of sales less than Average sales ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q4.2 Maximum  Life Expectancy of Female for the region Africa &amp; year 2012' width='132'>
      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
      nU3v0ZkfNPUUrsual//N+LXOEGJQEGJQEGJQEGJQEGJQEGJQEGJQEGJQEGJQEGJQEGJQEGJQ
      EGJQEGJQEGJQEGJQEGJQEGJQEGJQEGJQEGJQEGJQEGJQEGJQEGJQEGJQEGJQEGJQEGJQEGJQ
      EGJQEGJQEGJQEGJQEGJQEGJQEGJQEGJQEGJQEGJQEGJQEGJQEGJQEGJQEGJQEGJQEGJQEGJQ
      EGJQEGJQEGJQEGJQEGJQEGJQEGJQEGLwr3/I9VQmabM/5WStD/bm6fRkYip/VXI0kxXL17P/
      bBkt2/Zk2JMTSeoSfOvm2kz5VxBhSaSmJ9UY9h5ayczNkdx/eeDURhYscNHz+VeZHBHApbxM
      5r+2AMusmSSG3dIZNzu3wZLhwbllHw8O6U3Fn38vOZs3Evp4CsMjrFiwYI0YTsrjoWzcnIO3
      iWfb1Pw/iBMbWFucyM+iLJcHOHQggrhYc3kIjo0j4sAhTtz6GTYrfh6Eh72bviJqxMO0+XGs
      ELenDTZrtU2tNtp43BTe2gk2O/51DVFdwf+yIbc3jyVbzHGbjdY1Nm6NzWaOlJaW1rrb4uLi
      hpphk6v+Wvw4CC856zMJGfESHas/5HZzHjCvH8/jdkN4lZGgoKBa9xwSEtKQE21S1V+L/y4Z
      BTtYf6QfSfbqa0MrbNYC3J5qwx43BVYbrW7V/JopPw3CS+62rTDoYSIt1R/rSFSPPLJdJcZo
      iSubvB5RNc8mtxn/DMLjJHPn/Qwb0KaWBy1ED0mkaOUC1uV58OLFk7eOBSuLSBwSTY1+bjN+
      eA3hJXf9WoqTniO6rq9uWCIpKV5WvDWdKZffqUxJue3flAK/DMJC5OiXmHGVrYK7JDF1bs13
      NW93/rlkyA1TEGJQEGJQEGJQEGJQEGJQEGJQEGJQEGJQEGJQEGJQEGJQEGJQEGJQEGJQEGJQ
      EGJQEGJQEGJQEGJQEGJQEGJQEGJQEGJQEGJQEGJQEGJQEGJQEGJQEGJQEGJQEGJQEGJQEGJQ
      EGJQEGJQEGJQEGJQEGJQEGJQEGJQEGJQEGJQEGL4f9OAzvdEohuNAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Q6.1 Trend line for profit as a linear function of sales for technology' width='192'>
      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
      y38CMeqfH4Msre8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q6.2 Histogram ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q6.3 Histogram 2' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Q6.4 Scatter plot for Profit vs Sales' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2d2XMd15nYf9133zdc7NvFSgAEF5CSKNpaTNmWZMnyWPbYk1RNKsnUVKVq
      MqnKy1TlD8jDvKVmKpVMUnnwTGpm7IwVO7LWkSVZkiWTkiiu2Pf14u771re78wABJiWKvAAu
      iAve/r2QALq/c/r0+fqc833f+Y6gqqqKhkadIh52BTQ0DpOqK4CiKFQyqEiStO+yZFnet4wH
      VY6iKCiKUhN1qWU5BzICVKIApVLpvpRTr3JqqS61LOfQpkCiqM2+NA4frRdq1DWHpgDVmJ9q
      aOwXbQTQqGsOTQEEQTisojU0dtAWwRqVIcuQSsID5jfV7+pqVSWTTiIYLOgok87kcLvdCKIe
      uVzCZDJVLEpbAxwhZBk+uQQOJxSLcOo0PCAj+K4+w7JcIpHMMD09zfzcLCVJQkoFWQ5GmF/e
      2FXBWgTGESKb2er8Q8MgSQ/UKLCrEUCnM6JIOfxNLVh1ZTY31pBsTibmZvna17++431UVfWe
      X3hZlimXy/uqfK16F2tBjqIoCIKw75FWlmWwWNEVCqiXfgcu95bMXcqtpba5Vc6uFKCUi7O0
      HqW13QpCkZKs4rWYGXvoYTZWFnEN9u8MKfea4xsMBvT63c3A7kQ1ZDyIcmRZRhCEqqy19Ho9
      nB5DUBQQRcQ9Tn9qpW1ulSNUOxp0+4tzr4bP5/NYLJZ9lVUul6vSGA+inGopQC0900HI0Rxh
      GnWNZovUqGs0R5hGXaM5wjTqmkPrhdUyZ2lo7AftM6xR12gKoFHXHJoC6HS6wypaQ2MHzQ+g
      UdccmgJowXAatYC2BtCoazQ/gEZdo/VCjbpGWwRr1DXaCKBR12jBcBp1jbYI1qhrtDWARl2z
      KwVQVYW15QWCkTiFbJL5pVXkUp5cSSaZSO6qYM0RplEL7GpzpaqUcXgaWVqcJybqaPGZWVpe
      pSSaMOiNuNyug6qnhsaBsCsFEAQdm6vTtHb1Eg2uYXfYCEejLIdDnDx5cldpUVRV1dKiHKCc
      qqZFqQK1KmdXCiAV0iQyRcRYDKfVwPhcmP5AC76uPtLRDQSPveK0KDqdTkuLcoByqp4WpQrU
      opxDS4uSzWax2Wz7KqtWU23UghwtLUplcjRbpEZdoznCNOoazRGmUddoWSE06hrtM6xR12gK
      oFHXaFkhNOoaLRhOo+aQigXKUum+lFUdl9oe0ILhNG7tA9tm8dDSLEs3LiPLEiNf/zYOr/9A
      63BoCqBR3yjlMpHZG6iKgq2hGXtjKwCrU9c49c0XKBXyzF/5HaNPPHug9Tg0BdD8APVNLh7G
      6m3E5m8hNPHZjgK09A1z9Z1XkKUSx85948DroY0AGoeC2ekmOjtOKZvGaHPs/L6l5xje5g4E
      UcRo3t8RWpVwaAqgLYLrG73Jgn/wBOViAYPVftvfTNb9BUnuqh73rSQNjS8g6g0Y9YbDrcNh
      FawFw2nUAlownEZdoznCNOoaLT26Rl2zy7QoKkszN0gVIbi2xPjEBNl0gmS+TDAYPKg6amgc
      GLtMi6Jgoki6BIloBJ3JiSBlmJheoqOzG1VVd77slcT773dPgKqqVdlX8CDK2X4X+x1pa+mZ
      DkLOrhRA1OmwWiykgYGhE5QSaywGU+h0+i+lOKnEylMNS1C1rEkPmhxVVREEQWvje8jZlQLI
      5QKrkQJqbhGdTSSWKtDT3U5JsJJPReGWBq/EyrNfS5CiKFWxJj2IcrYVQGvju8vZlQLo9GaG
      T43t/NzctvWvGXBamgDQlrYatY6qqoRCIWZnZw/PE6w5wjTuN4VCAVVVuXr1KvPz8wwODmrR
      oBoPPvF4nJs3b7K4uMjx48c5ceIEp0+fxmQyHZ4CaFkhNA6aRCLBe++9RyqVoq+vjxdeeAGH
      w4EgCDtGGy0YTuOBQVVVkskkU1NThMNhLly4wPDwMJ2dnRiNxjveoymAxpFHURSWl5cZHx8n
      Go3S29vLuXPnsFqt9PX13fXeQ1MALSuExn5Jp9NMTk5y7NgxlpaW6O3t5Vvf+hYGQ+Uh1tqG
      GI0jhSzLbGxsMD4+Tjgcpr29HUEQeOKJJ/YkT8sKoVHzqKpKPp9HkiSmp6dZXFxkaGiIxx9/
      HItlf9smtTWARs0iyzLBYJCJiQnW19c5ceIEo6OjPPTQQ1UrQ/MDaNQckiSRz+d54403ABgc
      HOT8+fNYLJaqm8+1EUCjJlAUhUgkws2bN4nFYjz//POcP3+e5ubmAzWYaItgjUNncnKSiYkJ
      8vk8g4ODnD17FpPJRFtb24GXrY0AGvcdRVGIRqNMTU1x7Ngxcrkcp0+fpqOj476bx7VgOI37
      hiRJLCwsMDExQTabpb+/H4vFwtjY2L1vPiC0RbDGgaKqKqlUinQ6TSKRYH5+ntHRUTo7O6t2
      3Ol+0NYAGgeCJEmsrKwwMTFBPB5neHiY06dPMzIyUlOjv+YI06gaqqpSLBYpl8u8/PLLWK1W
      jh07RiAQQBTFmur42xz+GKRx5JFl+bav/YsvvsgzzzyD2+3e6fRf3DNeK+wyK4TM1NWL+I+d
      pxRZYDOWpq+7lYJoJx3dJNDdVbEsbQ3wYHDt2jXGx8cxGAwMDw9z4cIFjEYjZrP5jtfLiQSZ
      t36NzufD9sTjCIfcD3Y3AggCjV4H+TJk82VG+puZn99kKTzJ2JkzKIqCoiioqnrPOX65XN73
      V6FaXsFal1Mu5EgszaAzmfF0D1YkQ1EUBEHY91rri3VRFIVgMMjk5CR9fX0YDAYee+wx/H7/
      zkftTu2w/bvUy7/C/vzzFMfHyV27hun48X3VZ69sy9mVAgiCiP5zO60slUgl0hitJrq6u4lF
      ozQ423euvdcXXhTFqlgBqmVJqGU58fUl/AOjFBJR5EIWk911+8WqCkuLIMsQ6AFRRJblqmSF
      2K5LPp9nenqaqakpBEFgcHCQtrY2TCbTruSIRiNCPge5LPoG357aq5ptvOu0KOspFbG4SCDQ
      STCapqvDSxEjUj6jZYQ4IIw2B+ngCkpZwuz2ffmChXkQRTCbYXoKjg1VpVxFUdjY2KBUKiGK
      IpFIhMcee4zm5uY9L2idf/A9su/+Bn1zM8aBgarUcz8I6i3mGFVVWVpcoLOri6WlZQKBwK4F
      bg+59/ry5HI5rFbrruXfSrlcrsrX4E5yVFVFUkroRT2iUJl38qDqo6oqhWQUUWfA5HB9+YbJ
      CfD7QW+A5SUYPbHnEUBVVUqlErOzs0xNTZHP5xkbG+PYsWPA3h2YB/mu9iPnNklSLsGbb75O
      c2sngcHdzc12S60vgqeTNwkXgpSVMl9rvoBBvPOe0vuBIAhY3A1ffUFfP4zfBEWB4eE9l5NI
      JDAajbz00kv4/X7Onj1LU1PTrqY5R43bFCAcXGdgcIiNjSDJVPpAC671rBBr6WVGYqOsyIss
      CrP0t+y9Yx04ej2cOLmnW4vFIgsLC4yPj1MqlXjhhRf44Q9/iMlkui17woPKbQqQyeXJlco8
      8cQTWG45uKwe8ep8TNsmKFvL+NeboOWwa1Q9tqepV65cYWJiAo/Hw9jYGO3t7TURnnA/ue1p
      e/qH2Ix9TDweRxENeFz1qwTHvWMsrkzhlN3o7Ee/U2ybpreD0fr6+mhsbCQQCNzmsKo3bnuz
      BrMNl1XH/NwcrkyZ9uaDO6W7FrNCKMUi6ddeB0XB8czTBMaGKOdLGB13duocFdLpNBMTE0xP
      T+N0OhkaGqK7u3tX2RMeVL70abNY7bjcKi1NdzC3VZFaDIbLvvMuljNnEAx6Mr9+G+d3n0dn
      OPizaqvNdrz9zMwMOp2OwcFBXC4Xzz77LF6vt26/9nfiSwoQDwXR2VuwWY/ei98vxkA32bd+
      BaKI5fS5w67OrpFlmbm5OSYmJkin0wwMDOx0fo/Hc9jVq0m+aPzG5W+mqOgolw/WSlOLZlBR
      nsL2cD+IRpCmgBOHXaV7sp0OcHJykuPHj7OyssLo6OjOgrYW27mWuE0BZq5fYjmcxmz3c7K1
      8UALPuwpkFIoUByfwBjoBsfWYl8tF9A19oDeiLy8eJjVuyfb8faTk5PEYjF6enoQRZELFy4g
      CELNm5lrhdsUoJDPshkME4tcR9SJfP3s6IEVfJj7AVRVJfnzlzCPjpL65cvYf/AiOOwYhr+H
      dO2noCgYTvzo0Or3VaiqSjqdRlVVrl27RiwW21nQflXyV427c5sCjD5ygdFHDqsq9xFVBVnG
      PHocaXUVOZ3C4LAj6E0Yx/7VXW5TiUUiuDye+2ovV1V1J2XI8vIyjzzyCI8++mjd2ewPgvrc
      EywImE+eIPG3f4e+rRV9472ne6qq8u7rL2NOThOVHTzzo3+L/oDNiJIkoaoqb7zxBqlUiqGh
      IX784x9jNBo1S06VqMtPiCAIWE6exHJyK3zgVne/IpdIRsZxePrRG207v1dVlXxwmif/6E+4
      ePETEisTNPRUf5GsqiqJRILZ2VkWFhZ47rnnGBsbo7GxUbPbHwB1uSk+H81QSORwdfoQDb93
      yKmqzNU3/5piyoTV/zIjj/8FOv1WIJggCDR2DfL6a29izAfxHa9891ulLC4ucv36deLxOAMD
      Azz77LM4nU6cTmfVy6oHSsUioY01PL4GbI47t2HdjQDFVJ7MRhJHm4fw+DpNJzugXIT4NLmy
      k2KimeFvfIcrr/4DpYfjWOzNACiqintkjPbYBE2+4wi+/n3XZTtlyOTkJA0NDUiSxNDQEO3t
      7V+5pVCjMlRVZWF6krbuAGtLiwQGjmG4g6Gg7hJjyaUyBpsRo8OEKiugKuhW3gf/McTli+j0
      MZan/zsGYwCzrWnnvkvLCzQ5nMyaulD0Xorz87S1t2PcQ6jw9ibyqakpQqEQgUAAn8+H2+0G
      ancD+VHEYrVhMBqR5TIGakgBDmMRXFZUJJsFJZEnfGMNT18jqOrWodKuLsz+VZqlHtJJlZFv
      9dympNlSiW5vA6qi8vorv+KRk6f459de5Znnv4uuQmtMJpMhEolgMBi4fPkyQ0NDPPnkkw90
      vP1hIQgCze0dzE+O4/R4MFvuvPlqzwqQz6ZJpDL4fD4EnR5ZKu1q2L7fa4CyovLJShqLQUSx
      WDnd97nlR1VRPT0w+zqCvYmOR06BIKDEM8gLQQSfE9Fp5VRbB2/PTCKWy3Q1NjFy4iTBjQ2K
      xSLWuyiALMusra0xMTFBKBSip6eHRx99lO9///uaJeeAcXm8uDzeu16zZwVYWJjD5W1Gzmyy
      njMiFQoc66t8YXi/HWGZokyxrLCYGUeVGun1mXGa9SAIqJ5e8P8+24IqlVETGcTORpTFTVSb
      mQabnW8ODKGqKpfTOX71f1+ipbUNyx22daqqSqFQQK/X8/LLLyPLMsPDwzz++OOYzWat49cQ
      t+0J3g2JaJhQcBWD2cbE/DqPnj+Py6LfSYtyr5dcjT3Bsiyj0+lIZgq8f22Z0d4muprusGcW
      UIGfj8/RaHWQV6N02QMc85tvk/N7wQrqUhjavLAaRQg0gXjvTivLMqFQiKmpKVZWVnjuuecQ
      RRGXy7WrTv+l+uyB7bQo+1W2atSlluXseQTIZlLkSwpur5Wxhx5mc3UJ92A/2zP7e83xjUZj
      VTyZOp2Ol96f4rvnB3nt0iw/eNyO3WJgbnoavUFPd0/vTifIKdO8M2OkJJf491+/PTnrbXXR
      g9regBJJIXY1IhjvbX9fWFjg0qVLAAwMDOycaLLXDrjftql2WpRqUIty9iyprauXtltmPM3u
      LbNgpcNJdadAAm6HGbvFSEmSuTJ+Fb3eQDGep1gsMjg0zKfTG0xdF3n0IWh1dPOb2UmeHxnF
      9YXFkVpMI13/JwRHM/qBpxGEO3cgRVEIh8M7Wwo9Hg/nzp2jvb29Jjf7aNyZQ4tHqNYiWBAE
      Lox183/eHafD76TBbSUZj9PT10egr5/VjQ1uLG2yFk7x9NkBLl0UWAqXON7SypW1FWLZzJYg
      VUUtpCh++Nfo+78Fqkrw7Ze4/srHrF1f3FFYSZKYmJjgl7/8JW+99RZOp5Oenh5a29qZDkl8
      PLmxb+VWFZXQjVWCl5eQssUv/11VkaPzqKXsVlyTxp45Mo6wZDxGaGMdt9eHvcHJXPh9Gstp
      GlqeobfNS2/b71f7D50/z69efo0bq0nOPHUWNZNCkmVOtXUx6Y5TLuSxZ3O4fD6iuSwukxkl
      HaR0+Sco6Q2kmTcRbE2UckWOP3+W6Xevs760RjKXorGxkaWlJU6dOkVXV9fOFOP//XaKnhY3
      8UyBixNrnBtu/6pHufezLkext7gxuyyEb6zRdKrztr+XLv8EQW9Bis5ievTPECzuPZdV7xza
      CLCbuamiKATXVugZOEYqGeeDmZ/gs7RxQ1HJht760vUGnUjW2Mj3vt5NaGKZ8/3dJJUsb3+2
      wLBbosto5sPVZa7MTBHwbuXbkcOT6Hu/geXb/xl54X0A4mqAax9f4a333+ad994hnU7j9Xp5
      +umnd1J+b1MslfE6zDS4rOQK0r7axmgzkQunyW6m0Fu+7LxR05sYTvwIXftZ5NjCvsqqd2re
      E6wqKspqBCWVp5jOUCoV0evL+JQMFr2T4GqafH6Vhu4WxM/n3qXEGharleEzp/ho5he8PT3F
      c2cG8RQUPry4wPCJ8xxTFMavX8Og021lCet4hOLFv6E8+zaZrh9QmHJw+dJ76FoaeOoHT9PT
      33vXmPtnHunjlY+msZqNfOfc/sIkrH4HeoMBuSjh7W/60t/1neco/uYvEYw2jL3f2FdZ9c6e
      zaBfRaWpEbPZLDab7a7XACixNCgqkt3IxrVxdN2t/G7tM1py63iLFsaDjSRlgad7m2g7N7yV
      brtc4OI7r3I5pHBy9Dj9Pe2svX8Fh94AKxEm9UkMPiePX3gKs8WyE3qwtLTE5OQkC+9+zA//
      w59iRYe0HMH3tcqy5NVS+r9qWYFq6ZkOQk7NrwEEkwElnMSgE2n0NfNBPMrZXIrP5CHyZR2d
      DWG6Rs5y9YNJWocjFK/+BFQFe98QD59wESst8E9XgzyRlJjIhzjh8DCSUOl8+lkE3VYW5fn5
      eT755JOdE03Oujswx/JI6TymRm0z+YPMoY0AlTjCVFUlsRChsJEgoebZbDKyODsDqRK5XIQR
      l0pKcCEUHbwvX+cvAnY8x19EMNhY/PAvsT78n5iJLTK9meRH/j6u/d2rdJwcxOS0kXLqmIts
      4HK56A4EEFSVxsZGBFFEVRSys2uIRgOWrqbbpmtyboVy+iYGz0OIxttTx9TSV04bASqTc2gK
      UCgU7hk7JGWLJJejuAdbuPH+FG29Xj5+6e/JSDlcToW+ZhtvZBY563sS83A/izdew8gop3x5
      biTm+I3gwWIwY6UZm9HMqahEanWdueUFfGODDA0PEzPqKGZCOOQUDzkFhO4nwXBnxVTKGUqb
      r2H0f5Ni6HXMbT9CuCVzdC29ZE0BKpNTkxtiVFVhKbJIfGEDW9rKYkkhl5NYn9kgJIAgGvEr
      eULmAB0lH4qQ4tLCB4TW+3nmmJv/fb1E+8B5/vzEEAadgZ+88za9ToFjT5zl8ifw3e99g6am
      JopymfjqMk858nwo9JN3W7BGJqHlK86tVWUQjQg6MwK3L+KlUmnL/q/t0z1S1NQpkaqqsrm2
      ymRonFdnfoFf72LM8Sjl4Bxyi59eQw9pVUciuUlCgq58jGFrlqloI+caWvltaI1OXZqzKR2t
      QRvvffBT3pUjFOQVrKdOkZqP8r0nf7Dj3TUJekylJMXsOnnVyKzUgtns4N0PP8BmNPKHp8Yw
      3tKhRYMLva2PYugNDN7zO1//cHCDZDyGJEn0DBzDpG1mOTLUlBVoY22ZmcVFLm6+SyAMGYOZ
      kHURxeinIC3jsz2P/pMrCC1ZpBUFd9cgJbMFu9uDN5cjY/Tx5vQGT+dSzEkLmEM5Hv7jHxP0
      Jfju8e/z86v/yDND38W2vddXLqHO/5qw5zTlGy9hyG7yN4lW/vw7P2StWCKSzfB4771NmlM3
      rjEwMko8GqWYz9LSsb/tktoU6P7JqRlH2GpmmU+vvon53VfwLc4yb0mTtaXIR9L41E4uqBYM
      kfdoMQg8IzVj0ZtQMGK3N7A0vcRnefjkw19TyITYGBzhcfsAT7Ydoyebp1gu8PLln6FcW+T6
      678gvrm2VaiqIog6bEoee2qGmYyfJiHFz37+v7iyPE+rqzIPq7ehgbnJcTbXV/H6v2y316hd
      Dm0EyOfzWCyWz+9R+atX/pmRmWmwhlgTRKyrS6RMdhoFHdOWOG6LGafNS6vUw8raMrKcZsFs
      JWttZPo3E/R63PQ3B/CfHqTJ6yQs6vDHrjEQL+P9N/+aT997mcHj57A4nFx79zXOPP0iAHJi
      GSU0TmT6IjdCBkaby7xXDHCmr4me0W9TaSzn9hpgL1skv4g2Atw/OTWxCA6F1jFsXCVnD9I0
      EaXb0YG3tZ+FdI5uW5B22U9a9dC84MDiyDG5vozidNIoJRlrPEX++V5cmQWuiB00BDOs2r34
      ikkGEjK2s2cQRZFA30lmPv0As9WBp3krTieUSXMtlEVWOjg71sW5pd8yPb3I19pztLV27+p5
      DEajtpf3CHLoJovN1DrZG6/zggAWdzeJwSJJ6zIoInaTh+VIC5KQwuIT+eXlSWYsm7SJDZwI
      DHOmtZWiu4PUcpS5qI2BRhWXKOF0WPC1+fA9dx4+D49oaOvCbHdQLpVw+bcyPUyHNvlaoI+i
      VGIitMmj5/6EM6cSoCpguftWOo0Hg0ONBVpILvHz67/gxaCI0W7ghlnG6YH59n5akiYcMRcF
      OcZH0VkeazuNYp/jxcC3kUtroFtD0g3RabJg81rJBowUigViLhPtuTRNox0Itw6VgoD9C0eM
      dng8/HZhirKscLKtCwQBLJrnt544NAVIpmP8+vJ/40W1RIPHgF510xu7wrylg8AnV7iW72Nt
      7UPMq0ke6XuMluwMm4+aSVNEljx0O53IsoUli4EVR5Fhmx2z3QmxEM2tFvQVnOoSycyiqikk
      uUAsJ9DiPLhkwBq1yaEoQDIR582f/A865CDj3ghYPLg9EcrRFPYuEx9MpEiZIpico5x/zEGq
      IFOe2eTc17uYyUt06RrwZGUSzXp6cymsOgdvFGYZnHqVQEMAQouonV4ERzPlokRoZh1Xqxer
      x4acHgedhRJN3Fy8xvfO/CEFqcAnq79jpFlTgHpj72lR0gnWI2m623wUMVHMpio6haSQTfHK
      h/+TRn8E37Kevyl088L6HL8uyHhzCk/yGccH2+hsHeXX41nk1ThdShQKEvl8GYs6SE424paL
      KNllXkrJpOxenho5T/fEBm94O/iBfwA5NIHoaGbqnWu4HGamLk8z8KSKydlAObdOLD7PEwNP
      8Y8Xf4LVZueF0R/stSk0jjB7VoDFlXVafBaWltcoCkZMRjOVnMJzJfQ+NkOQV+RWRkfmWPrn
      m3xkz9AwcoYfdtuIZNuYvhRnSYqjIJGS18jJevx2N3PrLVis7YTcCXLmArObGyS8BpqlAlem
      JFzeQY7Nvko5E8J07t8BkFsJ4Vi9ga/RTGkxhu3R/0gZNy7HDPbGAE+EnqBv6PgDkWr8nc8W
      mF9P8PBQG8NdB3vG24PCnt+6Tm/AarcSikRZDYc5ceIEiqKgKAqlz23iOp1uJ00KbNn+x2/O
      cP2jKXR5J61/0MjYye/Q1NVFo72PufH/ir/XwhNnbFhsApn5CK7Os2RyNi5uhFGFbib9KZqk
      IEndJhZdI2fL7byVm6HZ5ma+4OChZ/8KVW+iIIOSzeJyGok4bAyebiL2ThyD6b+g03lJer7J
      4mef0NzWQT6f31GAbfPstg391pNWvvg82zb27XtUVUWv1+/csy3jbveIonjbiS6CIKCq6k4b
      fvGer6pDKJ4hFEvzR08O8A/vTNHVYEEUt9Ki3Kved3tWWZYRRXFX99ypnO2633pPJe3zxXIU
      RcFgMOy6Tb9YDmzt796zArhtRibmIvQHWmjo6iMdCyJ47YiA2Wy+rVKyLPPBBx+wurqK29GJ
      oe80vY0mLi0ZaG4+idXagad4mQ+cP+Rk5iojvjUKEYWG5pNEokaSTU206/1ERQFPQxrhfSvn
      z7i5Kht4OzPDcVcP5wInUAslbKE8qpzdenCdSNfjp8j88gb567PYHC7sqo+0fYzM8hrWlha8
      Df6djrtfDtPZ0yDoyBRWWIsVEEUBq82KqDnC7innwDzBsiwzNTXF3NwcFy5cYGlpiUAggNVq
      5aefvs+Ni9exKDHGAi7mVsJI4iZN/q9RyE7ykMvF38ZX+ePmJ1jP6UjFjfS2lPloAvrcIVa6
      clzQR1mf9uIdyNEjPkIq0I8uGsXqc2PK60BnQmz1ooRTiK0e2LgCkSWEhuNMxbIM5IvEe3oo
      l8t4/Y01+XJ2y2Ysw+RyhDODrViMOs0TXIGcA1GADz/8kLm5OVpbWxkaGqK1tfW2FxGKr/PO
      3Gu4ImacBScJu4mYoY389Ec8fkoll1RI5KHLr1COQdR0muviPIWUlyfdWTaiYHHoOdfpw6B4
      EAYGCU1fx0WRZDCJw2DA0NCPYDUjOC2IbvtWwbIMN66zlIhhamomrSi0dnZhMltq8uXsBy0U
      ojI5B7Lyc7vdvPjii9jt9jtufpdSRc5ZHscx6CIcn6IxHKTAzxH6fLTkLiBa9MSEG1g9Q1yT
      LxHOJdBlnPxLq8oVRztPm1V4+BHKsrzj7FJVFZ0QRd/WjSDmEQ2JrRz+1ltic3Q6OHmKTlUl
      GY/hMpuxWG1aCEMdcyjBcFKpxPSn1xAKAg2BFtREEf/xBkT91nGlqCpybA4ltsByyU9jdz/v
      Tt3ELMs4/I2c2wzBw+eQytLWMCaIROfGKSajKLk4rfoMotIG7gYYGt7y8N6FWv067QdtBKhM
      zqHuByArU0zlcXf7EfV3vj60sUYhn6coSZiKRTryBYSuLlL6BCuTv0AQoPf0n5JYXKZpeIz0
      xgq66Smsjz8F01PgbwTv3eN6vtSosgy5HNjt91Seu8rZI5oC3D85h2r8tjU6sRa8ivYAAAmu
      SURBVDXe/fwrf3MrmXQKURCw2h07U6rgx/9E35k/Qy6n2Zh7HbfrHJHZm8ilIn6rHYIbkExA
      5y43p8gyfHwJHHaQFRg9sSsl0Dha1HxiLEEQsDuchGbWmZ+ZwtXioeN0L67GUZZu/j1KOUvb
      wAvYPb3IpQKi3oioKLC2CseG4fM9BxWTToPbDYPH4NLv9vBkGkeJI3FEkiorhOc2OP6ds8x+
      cJNCKkdT15PY3f0YjFaMn0dw6k2fd3adDroDe6uYywVzs/Dpx+DWIkMfdGpiQ8y9ED5Xluji
      JoVUHoN5K0WhydZU/RAGQYCxM1tTIZ1Om/484BzanuDdrL0FUWDwGyeQciX6HxtBbzrgA6MF
      YSu9idb5H3iOTASYwWykZaTz3hdqaOyCmskKoaFxGGi9UKOuOfJHJGlo7IcjswbI5Er87N2b
      yIrKU2MBelo1E6XG/ql5R9g2H95c4Ztnemjy2vjp2zc1BdCoCkfCEQYw0OHjnc8W8DgsdDU9
      eIfClUslMonoTs4ijftDTR+QcSuqCvFMnnxRotW3FRO0m8CoYi7C8vjPMNsaaR/8PoJYO3n9
      pVKRj1/9GZ6mNkqFHCOPPaMFw90nOUfCEQZbPimvw0Jbg3NPp68vXP87uo7/CwwWD5HVj3Z9
      /0GSjoZoaOvm2LlvUMikDrs6dcWeFWBjdZHxiQkyqTiJXJmNjY1q1qvqiDojxXyMUi6K7itO
      gDks3E1tZOIRLv3qH/B39h12deqKPU+Bxq9fRjDY6Wq08tlsmEBPLy0+x2078e9GJUck3QtZ
      ltHpdPe+EFDkIqtTv8Dq7KCh/fye5VSrPgctR1EUBEHY02hZ7brUspxdT6bUcoGZpSA9AyPI
      qQ2WginMFjOlUgn4fcevpOH3+3J284J1ejNdI3+0bznVqs9By9mWcT/b+CjK2bUCCHozA73d
      hDdWiCRL9HR3UBIt5FMxuKVylSy+9rtAUxSlKiEVD6IcVVWrsgiupWc6CDl7Xk77Wzrwt2z9
      3wQ4zI0AVNWkpKFxwGjBcBp1zaH1wmrM4zQ09suhKcCtOSU1NA4LbR6iUddoUyCNukZbBGvU
      NdqGGI265sgEw2loHATaPESjrtHWABp1jdYLNeoabRGsUdcc+RFAVVXKxQKKrJ3yorF7jkxW
      iK8iHVyhlEkhSyV8vUO/zxCtoVEBR34RnI9HaOg/jrOlk1wsVBWZGvXDoY0A1QqGs/qaCE9d
      RZFlfH0jVZGpUT8cmcxwX4W9sRWrtxFBJyKK+98rqlFfHHkFEAQBneGAzwvQeGDZ1URcVWQm
      Lv+WaA7Wl+e5cuUqmWSYcKrA/MLSrgquxs5+DY39UvEIUCzkUAU9zQ0ucjJkCzIjAy3Mz4dY
      DE1y9qGHUBQFRVFQVfWedn5JkqqS/awaPIhyttOi7NffUkvPdBByKu6BUrGIohMQBQFVVZCl
      EolYCpPVRKCnh0g4jNfRsTOk3MvKI4piVVLcVeuMsAdNTrVSI1ajLrUsp2JJdpcHuVxgLiMi
      SCv09HSxGc3Q2eGmhBGpkK1KpTQ07ie7UiWd3szA0NDOz53tdgDMgNngACpPi6IFw2nUAgdi
      BdpeB9zrmv3O56oh40GVs70G2O++i1p6poOQU3UFEEWxoq+72WyuiiWoWtakB03ObjL0HXRd
      alnOkTkg46BkPKhyqhVrVUvPdBByqn5AhobGUeK+jgBKucjN8QmMNg92iwGHSSQv2mny2CuW
      EVpbJJyFnhYnU3PLNDR3IMol1HIeb2sXFkMFw6OqsjA3RTJTorWlgY1giJbObso5iUIhRVdP
      D7oKvqCqLDEzM0u+DE1uC8FIgp6BbjIJyOei9PT1Uul3OLyxSDgtYNMXiaWKBLpbQTARjUbp
      6emqSM7G4iyRrER3dztz07PY3A3YjDosBhXZ7KXBWVmk7ObaEpFUka72RmbnFvH4WzAgIypF
      7I2d2E2VTEEU5qen2AzH6B3oY319g+a2LpSihFRK09oZwKC799dclSVu3LiJqjPR7LOxsRml
      s7eHfEomn49X1MaqIjNx8wZlwURbo4PV9RBtgR5KGen+RoPmMwl8zQH0col4dJPJpRCN7so7
      P0BDUwuiIhONRBgYOUk+HWV9cZJ4UV9Z5/+c9o5ODHodkUSGEydOkIysMj9xFcXkqqjzAwg6
      Aw6bGaksk8qXOD7YSyQa4trHF7H5mivu/LKUI54tI8oSJRkG25xsRFN8cvFj/K1tFcspq4As
      kdxYwd97HMp54uEN5tZj+ByVn8WwtLyMUsoTXF8nMHSSUi7J5socmxmlws4PIBLoH8DT4Ced
      TDI6epJ0PMjK7HVy2Crq/FuolEolisUi8XSB0dERouFVJq58gtHZUFHbqIpEWdGhFhIsR7Kc
      OHmSeGiZ2Zuf3V8FMBiMpFJx8iUJi92F364nkSvuSoYsl5GkEnq9jlg0TFnR4W3qgGISSa5s
      NqcCk5NTdPb0YBZlotEw6Kw0d/aSS4RQKpwVKuUSVqcPQSmhlCWisSgGg5lA3wDRzSCVTi7z
      mTTFYo7V9U0KpSKRRBar2UB/fw/Bjcrl2F0e2pt9pIsSyXCIYqmMxeHFbRbIFCrfMGSxOmj1
      O8mVVeLRMFIZXP5WDOUsxXLlnuX45hqexjYMoko0GkYRTPjbepDSEWSlsoeSpQIGqxuLAcpl
      iWgkhM5go6Onn2Rks6K2EXUmmps8lBQ9Vp1MNBoCvY3Wrr77vwaIhYMYbB4MoorJaCRXKGKz
      Vr6JZXN9hUy+REtbJ8loCF9zC4pUQi9CGT1m471ndaqqsro8T1nV09HeRjC4SWtbC6ViGRQJ
      vdmKXqxgCqQqBNdWMdjceOxGguEkrS0NFIsKqlzCZLVRgZjPUcjniugEmWi6iN/rQEVHqVjA
      arVRyaBUzGfYjKRob28lFt7A4vShQ8Fk1JMrlLFZKxsFyqU8G+Ek7a1NbG6s42lsQS2XMOpF
      CmUBq7my4MN8LofZakVQZdbWgjS1tlAuSYgooDdh1Ffy/VWJhTeRdRZ8Tgvrm1Ha2hopFrba
      2Gi1obvnHEglFFzH5PDitBhY2wjR2tZMqVjWFsEa9Y3mjtWoazQF0KhrNAWoURS5zOrKMrmi
      tPO7Uj5ziDV6MDnyO8IeVK599DaypwejNcfKzDyivQkxeBVX1wjr8SIdfhsL6wlOjg6hq3yl
      rfEFNAWoUfqPn+LD332KKKqkN8NMXrrBU8MNvPLKKzjdPjZcHnRGG4qqoqvYU6DxRbQpUI2S
      Sqaw2KwUs0ki8Tx+vw+j1UFnRzstXb30dnaQjWySlrSjpvaDZgbVqGu0EUCjrvn/t5NOwW7F
      Y7QAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q6.5 Clusters' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q7.1 Aggregrated Field(Profit Ratio)' width='137'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q7.2 Rank of country sales' width='192'>
      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
      NQ0DaPBU8/8DMbD+OXy3RBoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q9.2(b)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q9.2(c)' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q9.2(d)' width='192'>
      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
      RK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
